COMMENT ⊗   VALID 00019 PAGES
C REC  PAGE   DESCRIPTION
C00001 00001
C00003 00002	BEGIN ONCE ONLY CODE
C00005 00003	SETUP LOCATIONS 40 THRU 61
C00007 00004	ONCE ONLY CODE - OPERATOR SETUP DIALOGUE
C00008 00005	 HERE, WE MUST DISCOVER WHETHER WE HAVE BEEN CONFIGURED
C00011 00006	 NOW WE SIT AND WAIT FOR P2 TO START UP, OR FOR THE OPERATOR TO
C00014 00007	 HERE IS WHERE P2 STARTS
C00017 00008	 WE GET HERE IF P2 IS A PDP-10
C00019 00009	 FINISHED CONFIGURING, NOW CHECK DATE AND ALL
C00020 00010	ASK FOR TODAY'S DATE AND CONVERT
C00022 00011	GET TIME OF DAY
C00024 00012	DECIMAL INPUT ROUTINE - JAM
C00025 00013	IFN 0*FTDISK,<
C00027 00014	ROUTINE TO READ A LINE FROM OPERATORS CONSOLE
C00029 00015	ROUTINE TO TYPE A LINE ON OPERATOR CONSOLE
C00031 00016	CONSTANTS AND PUSH DOWN LIST
C00032 00017	206 RESTARTS -- USER AND EXEC MODE
C00037 00018	PUNCH SYSTEM LOADER WITH CURRENT LOC OF SYSTEM ON LIBRASCOPE
C00040 00019	DEFINE NPRINT(TAG,START,FINISH)
C00042 ENDMK
C⊗;
BEGIN ONCE ONLY CODE
SUBTTL 	ONCE	1969 JAN 29	;WITH MODS FOR DSKSER -RAS.

↑UUOFLK←←UUOLNK			;FIX THIS UP NOW (AT END OF SYSTEM)

LINKSR:
	MOVE TAC,[PUSHJ PDP,OUTCHS]	;DWP FOR TTYSER
	MOVEM TAC,CONTYO		;DWP
	MOVE TAC,[PUSHJ PDP,GETCHR]
	MOVEM TAC,CONTYI	;DWP
LINKS1:	PUSHJ PDP,APRCHK
	CONSZ TTY,20		;WAIT FOR CTY
	JRST LINKS1
	MOVE AC1,ONCE		;SAVE RETURN ADDR

IFN FTDDT,<
;SAVE SYMBOLS FOR DDT. DDTSYM IS SET UP AT LOAD TIME.

	HLRO TAC1,DDTSYM	;-LENGTH OF SYMBOL TABLE
	MOVNS TAC1		;MAKE IT +
	HRL TAC,DDTSYM		;SYMTAB BEGINS HERE
	HRRI TAC,BLTBEG		;MOVE IT TO HERE
	BLT TAC,BLTBEG-1(TAC1)	;THERE IT WENT
	MOVEI TAC,BLTBEG	;TELL EXEC DDT WHERE
	HRRM TAC,DDTSYM		;IT LOOKS AT 36
	MOVEI TAC,BLTBEG(TAC1)	;END OF SYMBOL TABLE ...
>
IFE FTDDT,<
	MOVEI TAC,BLTBEG
>
	MOVEM TAC,SYSSIZ	;IS TOP OF SYSTEM.
	JRST @AC1		; EXIT NOW, STAGE LEFT

LIT
↑↑BLTBEG←←.
;SETUP LOCATIONS 40 THRU 61

LOC40:	0			;UUO PC
	JSR UUO0		;TO UUO HANDLER
	JSR CH1
	JSP DAT,ERROR
	JSR CH2
	JSP DAT,ERROR
	JSR CH3
	JSP DAT,ERROR
	JSR CH4
	JSP DAT,ERROR
	JSR CH5
	JSP DAT,ERROR
	JSR CH6
	JSP DAT,ERROR
	JSR CH7
	JSP DAT,ERROR
	0			;UUO PC FOR TRAPS TO 60.
	JSR UUO2

P2LOC40:
	0			; P2 UUO'S COME HERE
	JSR UUO0+P2PID
	JSR P2CH1
	JSP DAT,ERROR
	JSR P2CH2
	JSP DAT,ERROR
	JSR P2CH3
	JSP DAT,ERROR
	JSR P2CH4
	JSP DAT,ERROR
	JSR P2CH5
	JSP DAT,ERROR
	JSR P2CH6
	JSP DAT,ERROR
	JSR P2CH7
	JSP DAT,ERROR
	0			; P2 UNDEF OPCODES COME HERE
	JSR UUO2+P2PID		; JSR OFF TO UNDEF OPCODE HANDLER
;ONCE ONLY CODE - OPERATOR SETUP DIALOGUE

↑ONCE:	0
	MOVSI TAC,40000
	MOVEM TAC,41		;KLUDGE TO GET 6 INTO EXEC MODE
	SETZM	P2NUM		;IT ISN'T THERE YET
	MOVE DAT,LINEP		;SETUP LINE BYTE POINTER
	MOVE PDP,[XWD -ONCEPN,ONCEPD]
	MOVEI IOS,0		;MAKE SURE SCNSER WILL TYPE ;JS
	MOVE TAC,[IDPB TEM,DAT]	;DWP FOR TTYSER
	MOVEM TAC,CONTYO	;DWP
	MOVE TAC,[ILDB TEM,DAT]
	MOVEM TAC,CONTYI	;DWP
	PUSHJ PDP,CRLF
	MOVEI TAC,CONFIG
	PUSHJ PDP,CONMES
	PUSHJ	PDP,CRLF
IFE FTDDT,<
	MOVEI TAC,NDDTM
	PUSHJ P,CONMES
>
	PUSHJ P,OPOUT
; HERE, WE MUST DISCOVER WHETHER WE HAVE BEEN CONFIGURED
; AND IF SO, EXACTLY HOW AND FOR WHAT REASON

	SETZM DETFLG
	JFCL 17,.+1		; CLEAR ARITHMETIC FLAGS
	MOVEI TAC,1		; IF THIS PRODUCES AR CRY 0, WE ARE A 10
	SOS TAC
	JCRY0 PDP10		; P1 IS A TEN, HOW 'BOUT THAT?

; P1 IS A PDP-6, TELL THE WORLD ABOUT IT

	MOVEI TAC,1B20		; PARITY IS BIT 20 ON THE 6
	HRRM TAC,PARCON
	MOVEI TAC,132237		; THIS ENABLES PARITY ON THE 6
	HRRM TAC,PICON
	MOVEI TAC,6		; PUT A 6 IN P1NUM
P1OK:	PUSH PDP,TAC		; PUT FUTURE P1NUM ON STACK
	MOVE TAC,[XWD LOC40,40]	; SET UP TO BLT IN THE INTERRUPT LOCATIONS
	BLT TAC,61
	MOVEI TAC,40		; 40 IS OUR UUO TRAP LOCATION
	MOVEM TAC,UUOLOC+P1PID
; REGARDLESS OF WHETHER P1 IS A 6 OR A 10, WE GET HERE

P1GO:	POP PDP,P1NUM		; SET UP OUR PROCESSOR NUMBER
	CONO DCB,7		; SEE IF THE DCB IS ON LINE
	CONSZ DCB,7		; SEE IF IT GIVES US BACK A 7
	JRST ONEP		; WE HAVE DCB, P2 HAS NOTHING
	MOVEI TAC,100000	; IS P2 STARTED?
	SKIPN P2NUM
	SOJGE TAC,.-1
	SKIPE P2NUM
	JRST P1G1		;YES. SKIP CTY TYO
	MOVE DAT,LINEP		; ASK OPERATOR TO START UP P2
	MOVEI TAC,[ASCIZ /START OTHER PROCESSOR AT /]
	PUSHJ PDP,CONMES
	MOVEI TAC,SYSDSP+4
	PUSHJ PDP,OCTPNT
	MOVEI TAC,[ASCIZ /, OR TYPE <CR>./]
	PUSHJ PDP,CONMES
	PUSHJ PDP,CRLF
	PUSHJ PDP,OPOUT		; DUMP CTY BUFFER ONTO THE CTY
; NOW WE SIT AND WAIT FOR P2 TO START UP, OR FOR THE OPERATOR TO
; TELL US IT ISN'T GOING TO START

P1G1:	SKIPN P2NUM
	CONSZ CTY,40		; HAS HE TYPED CR?
	CAIA
	JRST P1G1
	CONO CTY,3000+SCNCHN	; CLEAR CTY
	SKIPE P2NUM		; HAS P2 STARTED ALREADY?
	JRST P2OK		; YES, LEAVE

	MOVEI TAC,P2XFR+1	; MAKE SURE NO ONE STARTS P2 NOW
	HRRM TAC,P2XFR1
	MOVE TAC,[JRST 4,204]
	MOVEM TAC,204		;EVEN FROM HERE
	MOVE DAT,UUOLOC
	XORI DAT,101		;OTHER PROC'S 41
	HRLI DAT,-1(TAC)
	MOVEM TAC,-1(DAT)	;ZAP OTHER PROCESSORS TRAP LOCS
	BLT DAT,61-41(DAT)	;NORMALLY A NO-NO BUT INTS OFF HERE
	MOVE DAT,LINEP
	PUSHJ PDP,CRLF		; ACKNOWLEDGE RECEIPT OF THE C.R.
	PUSHJ PDP,OPOUT

; HERE, WE MUST DETACH THE AD AND DIS, BECAUSE WE ARE THE ONLY
; PROCESSOR AND WE DON'T HAVE THEM

	SETOM DETFLG		; TELLS SYSINI TO DETACH THESE

	JRST ONEP		; NOW GO CHECK CRK

; WE GET HERE IF P1 IS A PDP-10

PDP10:	MOVEI TAC,1B19		; THIS IS THE PARITY BIT
	HRRM TAC,PARCON
	MOVEI TAC,652237	; AND THIS ENABLES IT
	HRRM TAC,PICON
	MOVEI TAC,=10		; PUT 10 IN P1NUM
	CONSO APR,MAOFF		; ARE WE IN MA TRP OFFSET?
	JRST P1OK		; NO, JUST LIKE A PDP-6
	TLO TAC,MAOFF		; SET BIT IN P1NUM SAYING JUST THAT
	PUSH PDP,TAC		; PUT P1NUM ON THE STACK
	MOVE TAC,[JSR P2START-1]
	MOVEM TAC,204		;TIME TO LET THE 6 GO
	MOVEM TAC,41		;PERHAPS FROM HERE
	MOVE TAC,[XWD LOC40,140]
	BLT TAC,161		; PUT INTERRUPT LOCATIONS IN RIGHT PLACE
	MOVEI TAC,140		; AND THIS IS OUR UUO TRAP LOCATION
	MOVEM TAC,UUOLOC+P1PID

REPEAT 0,<			;IT STOPPED WORKING!!! 4-13-74
	CONO	PTR,120		;THIS IS THE PTR REVERSE HACK
PTREV1:	CONSZ	PTR,20		;WAIT FOR ¬BUSY
	JRST	.-1
	DATAI	PTR,TAC
	ANDI	TAC,300
	CAIN	TAC,200		;SKIP IF ¬ A BINARY TAPE
	JRST	PTREV1
>				;END REPEAT 0

	JRST P1GO
; HERE IS WHERE P2 STARTS
; WE MUST DECIDE IF THIS IS A LEGAL CONFIGURATION OR NOT

	0			;JSR HERE TO ENTER EXEC MODE
↑P2START:
	MOVE TAC,[JRST P2INI]	; TELL SYSTEM WE HAVE INITIALIZED
	MOVEM TAC,SYSDSP+4
	JFCL 17,.+1		; CLEAR AR FLAGS
	MOVE PDP,[XWD -P2PLN,P2PDL]
	MOVEI TAC,1		; A PDP-10 SETS AR CRY 0
	SOS TAC			; UPON ARRIVING AT 0
	JCRY0 P2P10		; WE ARE A PDP-10

; HERE, P2 IS A PDP-6. MAKE SURE P1 IS IN TRP OFFSET

P2SZZ1:	MOVE DAT,P1NUM
	JUMPE DAT,.-1		; WAIT UNTIL P1 IS ON THE AIR
	CAMN DAT,[XWD MAOFF,=10]
	JRST P2PAR
ULOSE:	MOVE TAC,ILLPNT
	JSR DDTTYPE
	HALT ULOSE

ILLPNT:	POINT 7,.+1
	ASCIZ/
ππππPDP-10 IS NOT IN MA TRAP OFFSET MODE!!!!
/


P2PAR:	MOVEI DAT,1B20		; PDP-6 PARITY BIT
	HRRM DAT,P2RCON
	MOVEI TAC,40		; UUO TRAP LOCATION
	MOVEM TAC,UUOLOC+P2PID
	MOVEI TAC,132237		; PI CONO TO SET UP PARITY ENABLE
	HRRM TAC,P2CON
	MOVEI DAT,6		; PUT 6 IN P2NUM
	MOVE TAC,[XWD P2LOC40,40]
	BLT TAC,61		; SET UP INTERRUPT LOCATIONS

P2GO:	CONO DCB,7		; SEE IF DCB IS ON LINE
	CONSZ DCB,7
	JRST P2WENT		; HE'S THERE, GO ON.

	MOVE TAC,DCBPNT
	JSR DDTTYPE		; TELL THEM
	JRST P2WENT

DCBPNT:	POINT 7,.+1
	ASCIZ/
ππππDEVICE 204 DOES NOT ANSWER!!!!!
/


P2WENT:	PUSH PDP,DAT
	MOVE TAC,[XWD ALTSAV,PTPSAV]
	BLT TAC,ALTSAV-1	; SET UP DEVICE AC SAVE INDIRECT LOCATIONS
	PUSHJ PDP,DATIME	; SEE IF CRK WORKS
	JRST P2GO1		; NO, SKIP IT
	MOVEM DAT,CRKDAT	; YES, SET STARTING DATE
	MOVEM ITEM,CRKTIM

P2GO1:	POP PDP,P2NUM
	JRST P2XFR1
; WE GET HERE IF P2 IS A PDP-10

P2P10:	MOVE DAT,1B19
	HRRM DAT,P2RCON
	MOVEI TAC,652237
	HRRM TAC,P2CON
	MOVE DAT,P1NUM
	CONSO APR,MAOFF		; ARE WE IN TRP OFFSET?
	JRST P2P10A		; NO, CONTINUE
	TLNN DAT,MAOFF		; IS P1 IN TRP OFFSET?
	JRST P2P10X		; OK
	MOVE TAC,BOTHPN
	JSR DDTTYPE
	HALT .-2

BOTHPN:	POINT 7,.+1
	ASCIZ/
ππππHELP, WE'RE BOTH IN MA TRAP OFFSET MODE!!!
/

P2P10X:	MOVE DAT,[XWD MAOFF,=10]
	MOVEI TAC,[XWD P2LOC40,140]
	BLT TAC,161		; LOAD UP INTERRUPT LOCATIONS
	MOVEI TAC,140		; THIS IS OUT UUO TRAP LOCATION
	MOVEM TAC,UUOLOC+P2PID
	JRST P2GO

P2P10A:	TLNE DAT,MAOFF
	JRST P2P10B
	MOVE TAC,NONPNT
	JSR DDTTYPE
	HALT .-2

NONPNT:	POINT 7,.+1
	ASCIZ/
ππππNO-ONE IN MA TRAP OFFSET MODE!!!!
/

P2P10B:	MOVEI DAT,=10		; SET P2NUM TO 10
	MOVEI TAC,[XWD P2LOC40,40]
	BLT TAC,61		; BLT IN INTERRUPT TRAP LOCATIONS
	MOVEI TAC,40		; THIS IS OUR UUO TRAP LOCATION
	MOVEM TAC,UUOLOC+P2PID
	JRST P2GO
; FINISHED CONFIGURING, NOW CHECK DATE AND ALL

ONEP:	PUSHJ PDP,DATIME	; DO WE HAVE THE CRK?
	JRST TBAD		; NO, GET IT FROM OPERATOR
	JRST P2OK1

P2OK:	MOVE ITEM,CRKTIM	; DOES P2 HAVE CRK?
	SKIPN DAT,CRKDAT
	JRST TBAD		; NO, AGAIN GET IT FROM OPERATOR
P2OK1:	MOVEM ITEM,TIME
	MOVEM DAT,THSDAT
	JRST ONCE9
;ASK FOR TODAY'S DATE AND CONVERT
;DATE STORED AS ((Y-64)*12.+M-1)*31.+D-1

TBAD:	PUSHJ PDP,DATLOP
	JRST .-1
DATLOP:	SETZM THSDAT
	MOVE DAT,LINEP
	MOVEI TAC,TODATE
	PUSHJ PDP,CONMES
	PUSHJ PDP,OPOUT
	PUSHJ PDP,GETLIN
	JRST DATLOP
	PUSH PDP,TAC		;SAVE INPUT BYTE POINTER
	MOVEI IOS,11		;STORE DATE TYPED IN ON TOP OF DATE OF SYSTEM
	MOVE ITEM,DATPTR	;MAX. OF 11 CHAR. INCL. CR
				;CLOBBER SYSDAT
	ILDB TAC1,TAC
	IDPB TAC1,ITEM
	CAIE TAC1,15
	SOJG IOS,.-3
	JUMPLE IOS,DATLOP	;TOO MANY CHARS?
	MOVEI TAC1,0		;STORE NULL ON TOP OF CR
	DPB TAC1,ITEM
	POP PDP,TAC		;RESTORE INPUT BYTE POINTER
	PUSHJ PDP,DECIN		;MONTH
	JRST DATLOP		;ERROR
	SKIPE TAC1
	CAILE TAC1,=12
	JRST DATLOP
	SUBI TAC1,1
	IMULI TAC1,=31
	ADDM TAC1,THSDAT
	PUSHJ PDP,DECIN		;DAY
	JRST DATLOP
	SKIPE TAC1
	CAILE TAC1,=31
	JRST DATLOP
	SUBI TAC1,1
	ADDM TAC1,THSDAT
	PUSHJ PDP,DECIN		;YEAR
	JRST DATLOP
	CAIL TAC1,=68
	CAILE TAC1,=99
	JRST DATLOP
	SUBI TAC1,=64		;YEAR ZERO
	IMULI TAC1,=12*=31
	ADDM TAC1,THSDAT
;GET TIME OF DAY



	POP PDP,TAC
	PUSHJ PDP,TIMLOP
	JRST .-1
TIMLOP:	SETZM TIME
	MOVE DAT,LINEP
	MOVEI TAC,TIMEM
	PUSHJ PDP,CONMES
	PUSHJ PDP,OPOUT
	PUSHJ PDP,GETLIN
	JRST TIMLOP		;JUST A CR
	ILDB TAC1,TAC
	SUBI TAC1,60
	SKIPL TAC1		;CHECK FIRST DIGIT OF HOUR
	CAILE TAC1,2
	JRST TIMLOP
	IMUL TAC1,[JIFSEC*=60*=60*=10]
	MOVEM TAC1,TIME
	ILDB TAC1,TAC
	SUBI TAC1,60		;CONVERT TO BINARY
	SKIPL TAC1
	CAILE TAC1,=9
	JRST TIMLOP
	IMULI TAC1,JIFSEC*=60*=60
	ADDM TAC1,TIME
	PUSHJ PDP,DECIN
	JRST TIMLOP
	CAILE TAC1,=59
	JRST TIMLOP
	IMULI TAC1,JIFSEC*=60
	ADDM TAC1,TIME
ONCE9:	MOVSI TAC,(<JFCL>)
	MOVEM TAC,ONCEI
IFN 0*FTDISK,<
	DATAI APR,TAC		;-1 IN KEYS GETS YOU
	AOJN TAC,LINKSR		;THE REFRESH DIALOG.
	PUSHJ PDP,REF
>
	JRST LINKSR
;;DECIMAL INPUT ROUTINE - JAM

DECIN:	ILDB TAC1,TAC		; FIRST, SKIP NULLS, SPACES, AND TABS
	JUMPE TAC1,DECIN
	CAIE TAC1," "
	CAIN TAC1,"	"
	JRST DECIN
	CAIG TAC1,"9"
	CAIGE TAC1,"0"
	POPJ PDP,
	SUBI TAC1,"0"

DECIN1:	ILDB AC1,TAC
	CAIE AC1,"-"
	CAIN AC1,"/"
	JRST CPOPJ1
	CAIE AC1,15
	CAIN AC1,12
	JRST CPOPJ1
	CAIG AC1,"9"
	CAIGE AC1,"0"
	POPJ PDP,
	SUBI AC1,"0"
	IMULI TAC1,=10
	ADD TAC1,AC1
	JRST DECIN1
IFN 0*FTDISK,<

;REFRESH DIALOGUE

REF:	MOVE DAT,LINEP		;DO YOU WANT TO REFRESH?
	MOVEI TAC,REF1M
	PUSHJ PDP,CONMES
	PUSHJ PDP,OPOUT
	PUSHJ PDP,GETLIN
	POPJ PDP,		;NO
	ILDB DAT,TAC		;GET FIRST CHAR
	CAIE DAT,"Y"		;Y?
	POPJ PDP,		;NO. DONT REFRESH THE DISK
	MOVE DAT,LINEP		;YES. ARE YOU SURE?
	MOVEI TAC,REF2M
	PUSHJ PDP,CONMES
	PUSHJ PDP,OPOUT
	PUSHJ PDP,GETLIN
	POPJ PDP,		;NO
	ILDB DAT,TAC
	CAIE DAT,"Y"
	POPJ PDP,
REF3:	PUSHJ PDP,REFRES	;REFRESH.
	MOVE DAT,LINEP		;OK
	MOVEI TAC,REF6M
	PUSHJ PDP,CONMES
	PUSHJ PDP,OPOUT
	MOVE TAC,DUMPPN	;DEC 3.16
	MOVEM TAC,REFLAG
	POPJ PDP,

REF1M:	ASCIZ /DO YOU WANT TO REFRESH THE DISK? 
/
REF2M:	ASCIZ /DO YOU REALLY WANT TO REFRESH?
/
REF6M:	ASCIZ /REFRESHED! FIRST JOB TO LOG IN GETS IN FREE.
/
>
;ROUTINE TO READ A LINE FROM OPERATORS CONSOLE
;CALL:	PUSHJ PDP,GETLIN
;	JUST A CR TYPED IN
;	A LINE TYPED IN,TAC SET AS BYTE POINTER

CHREC←TEM	;CHAR TO TYPE OUT(MUST BE SAME AS SCNSER ROUTINE
LINE←TAC1	;TTY LINE NO.(ALSO SAME AS SCNSER)


GETLIN:	MOVE TAC,LINEP
	MOVEI ITEM,0
GET1:	PUSHJ PDP,TYI
	DATAI TTY,TAC1
	ANDI TAC1,177
	CAIN TAC1,177		;RUBOUT?
	JRST DELETE
	MOVE CHREC,TAC1		;NO, ECHO CHAR.
	PUSHJ PDP,TYO
	IDPB TAC1,TAC		;AND STORE CHAR.
	CAIE TAC1,15
	AOJA ITEM,GET1
	MOVEI CHREC,12		;OUTPUT LF
	PUSHJ PDP,TYO		;TYPE OUT
	MOVE TAC,LINEP		;RESET BYTE POINTER
	JUMPN ITEM,CPOPJ1	;NULL LINE?
	POPJ PDP,		;YES, DON'T SKIP RETURN

DELETE:	JUMPE ITEM,DELET1	;AT BEGINNING OF LINE?
	ADD TAC,[XWD 070000,0]	;NO, BACK UP BYTE POINTER
	TLNE TAC,400000		;FINISHED THIS WORD YET?
	ADD TAC,[XWD 347777,-1]	;YES, BACK UP ADDRESS
	MOVEI CHREC,134		;OUTPUT BACK SLASH
	PUSHJ PDP,TYO
	SOJA ITEM,GET1

DELET1:	MOVEI CHREC,15
	PUSHJ PDP,TYO
	MOVEI CHREC,12
	PUSHJ PDP,TYO
	JRST GETLIN
;ROUTINE TO TYPE A LINE ON OPERATOR CONSOLE
;ECHO CHECK STOPS LINE AND RETURNS
;CALL:	DAT SET TO END OF MESSAGE

OPOUT:	MOVE TAC,LINEP
	CONO TTY,1000		;CLEAR INPUT
OPOUT1:	CAMN TAC,DAT
	POPJ PDP,
	CONSZ TTY,40
	JRST OPOUT2		;ECHO CHECK
	ILDB CHREC,TAC
	PUSHJ PDP,TYO
	JRST OPOUT1

OPOUT2:	MOVEI CHREC,15
	PUSHJ PDP,TYO
	MOVEI CHREC,12
	PUSHJ PDP,TYO
	CONO TTY,1000		;CLEAR INPUT

;WAIT TILL OUTPUT BUSY OFF BEFORE TYPING OUT CHAR.



TYO:	PUSHJ PDP,APRCHK	;CHECK CLOCK
	CONSZ TTY,20
	JRST TYO
	DATAO TTY,CHREC		;DWP FOR TTYSER
	POPJ PDP,

;WAIT TIL INPUT DONE ON BEFORE RETURNING WITH NEXT CHAR.

TYI:	PUSHJ PDP,APRCHK
	CONSO TTY,40
	JRST TYI
	POPJ PDP,

;CHECK APR FOR CLOCK FLAG SO TIME USER TYPES IN WILL BE ACCURATE

APRCHK:	CONSO APR,1000		;IS CLOCK FLAG ON?
	POPJ PDP,		;NO
	CONO APR,1000		;YES, CLEAR CLOCK FLAG
	AOS TIME		;INCREMENT TIME
	POPJ PDP,
;CONSTANTS AND PUSH DOWN LIST

LINEP:	POINT 7,LINBUF	;INPUT AND OUTPUT LINE BUFFER
LINBUF:	BLOCK 30
ONCEPN←100
ONCEPD:	BLOCK ONCEPN	;PUSH DOWN LIST
P2PLN←100
P2PDL:	BLOCK P2PLN
SYSDAT:	BLOCK 2

;MESSAGES

TODATE:	ASCIZ /
TYPE TODAY'S DATE AS ABOVE.
/


DATPTR:	POINT 7,SYSDAT	;POINTER TO SYSTEM DATE

TIMEM:	ASCIZ /
TYPE 4 DIGIT TIME.
/

IFE FTDDT,<
NDDTM:	ASCIZ/NON-DDT SYSTEM!!
/
>
;206 RESTARTS -- USER AND EXEC MODE
BEGERR:	DATAO	CTY,[7]			;DING FOR HIM
	SETZM	SYSTHERE		;SYSTEM'S NOT ON L'SCOPE
IFN FTDSWP,<
	SETZM	DDTSUM
	SETZM	SYMLOC			;NO SWAPPING DDT YET
>
	HALT	BEGIN
↑BEGIN:	SETOM	SYSTHERE		;SET TO SAY SYSTEM IS ON LIBRASCOPE
	MOVE	P,[-ERRPLN,,ERRPDL-1]	;GET A PDL
	JSP	TAC,.+1			;206 START:  WRITE OUT SYSTEM.
	TLNE	TAC,USRMOD		;ARE WE IN USER MODE?
	JRST	USBG1			;USER MODE, SPECIAL HACK.
	CONO 200000			;RESET THE WORLD
	PUSHJ	P,FMCHK			;MAKE SURE WE HAVE FAST AC'S
	JRST	BEGIN			;NO. LOOK AGAIN.
	CONSZ	DSK,400			; IS THE DISK ON-LINE?
	JRST	BEGERR			; NO, EXIT NOW.
IFN FTDSWP,<
	SKIPA	TAC,DDTSYM
USBG1:	MOVE	TAC,JOBSYM
	MOVEM	TAC,SYMLOC
	MOVE	TAC,[XWD DDTA-DDTEND,DDTA]	;GET IOWD FOR CHECKSUM
	PUSHJ	P,CHECK			;MAKE A CHECKSUM
	MOVEM	TAC1,DDTSUM		;SAVE DDT CHECKSUM
;>	USBG1:				;DEFINED AT LAST.
	MOVE	TAC,[JRST 4,203]	;SET UP LOCATION 206
	MOVEM	TAC,SYSDSP+6		;STUFF SYSTEM INITIALIZATION ADDRESS
	JSP	TAC,.+1
	TLNE	TAC,USRMOD		;USER MODE?
	JRST	USRBEG			;YES.  GO OFF AND FAKE IT.
	MOVE TAC,[LOD20,,20]
	BLT TAC,27			;MAKE SURE 20 LOADER IS GOOD
	CONO	IOP,100			;SET UP IOP FOR WRITING.
	DATAO	IOP,[XWD -=76*2000,0]	;ALL OF LOWER CORE.
	DATAO	DSK,SYSBAND		;BAND FOR SYSTEM STORAGE
	CONSO	IOP,IOPANY!IOPJDN	;WAIT UNTIL DONE.
	JRST	.-1			;LOOP
	CONSO	IOP,IOPANY		;ERRORS?
	CONSZ	DSK,3370		;ERRORS?
	JRST	BEGERR			;LOSE
	JRST	SYSDSP			;START UP SYSTEM.
	
;HERE IF USER SAYS
;GET SYSTEM
;S 206
USRBEG:	CALLI	0			;RESET SELF.
	SETO	TAC,
	CALLI	TAC,400066		;SETPRV - GET CURRENT PRIVILEGES.
	TLON	TAC,PRIPRV+FBWPRV	;HAVE WE GOT PRIVILEGE?
	JRST	[OUTSTR	[ASCIZ/LOSER/]
		CALLI	12]			;NOPE.
	CALLI	TAC,400066		;GET IT.
	MOVEI	AC1,140			;FIRST ADDRESS TO WRITE.
	MOVE	TAC,SYSBND		;GET THE SYSTEM BAND.
	TRO	TAC,400000		;MAKE IT ABSOLUTE.
	MOVE	AC2,JOBREL		;GET THIS SIZE
	SUBI	AC2,137			;LESS OFFSET, LEAVES WORD COUNT
	MOVEI	AC3,3			;START IN SECTOR 3 TO ACCOUNT FOR
					;OFFSET.
	FBWRT	TAC,AC1			;ASK SYSTEM TO WRITE THIS.
	OUTSTR	[ASCIZ/FBERROR: SYSTEM WRITE
/]
	MOVEI	AC2,=76*2000-1		;THIS IS THE SIZE OF AN L'SCOPE BAND
	SUB	AC2,JOBREL		;THIS IS THE SIZE OF NEXT XFER
	JUMPE	AC2,BEGUX		;JUMP IF THERE'S NO SPACE TO FILL UP
	MOVE	AC3,JOBREL
	ADDI	AC3,1
	LSH	AC3,-5			;COMPUTE SECTOR
	FBWRT	TAC,AC1			;MAKE SURE ENTIRE BAND IS READABLE
	OUTSTR	[ASCIZ/FBERROR CLEARING BAND
/]
BEGUX:	MOVEI	AC2,101			;(PAD TO 137 WITH ZEROES)
	SETZ	AC3,			;SECTOR
	MOVEI	AC1,LODTAB		;PLACE TO START.
	MOVE	TAC1,JOBSYM
	MOVEM	TAC1,LODSYM		;SAVE CYMBALS
	MOVE	TAC1,JOBREL
	MOVEM	TAC1,LODREL		;SAVE JOBREL
	FBWRT	TAC,AC1
	OUTSTR	[ASCIZ/FBERROR: LOW CORE WRITE
/]
	CALLI	12
;PUNCH SYSTEM LOADER WITH CURRENT LOC OF SYSTEM ON LIBRASCOPE
↑SYSLOD:
	MOVE 1,SYSBAND
	MOVEM 1,LODTAB+SBAND	;GET BAND DYNAMICALLY
	JSP 2,FEED
	CONSZ PTP,20
	JRST .-1
	CONO PTP,50		;CLEAR PAPER TAPE PUNCH AND SET BINARY MODE
	SKIPA 1,[-LODLEN,,LODTAB]
PUNXT0:	TDZA 2,2
PUNNXT:	MOVE 2,(1)
	MOVEI 3,6
PUN1:	ROT 2,6
	CONSZ PTP,20
	JRST .-1
	DATAO PTP,2
	SOJG 3,PUN1
	AOBJN 1,PUNNXT
	TLNN 1,-1
	JRST PUNXT0		;PUNCH EXTRA WORD OF ZERO TO STOP PTR ON READIN
	JSP 2,FEED
	HALT SYSLOD

FEED:	MOVEI 1,=100
FEED1:	CONSZ PTP,20
	JRST FEED1
	CONO PTP,10
	DATAO PTP,[0]
	SOJG 1,FEED1
	JRST (2)

LODTAB:	XWD -LODLEN+1,0
PHASE 1
LODIT:	MOVE BLTAC		;1 THIS IS LOC 20 BE CAREFUL
	SETZM 20		;2
	BLT 377777		;3
LODLUP:	DATAO IOP,SLOC		;4
	DATAO DSK,SBAND		;5
	CONSO IOP,IOPANY!IOPJDN	;6
	JRST .-1		;7
	CONSO IOP,IOPANY	;10
	CONSZ DSK,3370		;11
	HALT LODLUP		;12
	JRST SYSDSP		;13
SLOC:	XWD -=76*2000,0		;14
SBAND:	100B23			;15 REALLY TO BE FILLED IN BY SYSLOD
BLTAC:	20,,21			;16
	JRST LODIT		;17 TO START IT
DEPHASE
LODLEN←←.-LODTAB
	BLOCK	20-LODLEN	;BLOCK UP TO BOUNDARY, IF NEEDED.
LOD20:	CONO	PTR,60		;20 LOADER
	CONSO	PTR,10
	JRST	21
	DATAI	PTR,26
	CONSO	PTR,10
	JRST	24
	0
	JRST	21
	BLOCK	6		;GET TO 36
LODSYM:	0
LODREL:	0
	BLOCK	41		;PAD TO AT LEAST 101 WORDS FROM LODTAB
DEFINE NPRINT(TAG,START,FINISH)
<
	OUTSTR[ASCIZ/
TAG/]
	MOVEI TAC,FINISH-START
	PUSHJ P,DECOUT
>

DECOUT:	IDIVI TAC,=10
	HRLM TAC1,(P)
	JUMPE TAC,.+2
	PUSHJ P,DECOUT
	HLRZ TAC,(P)
	ADDI TAC,60
	OUTCHR TAC
	POPJ P,

↑START:	MOVE	P,[IOWD 20,SPDL]	;FOR USE WITH DUMP COPY OF SYSTEM
	OUTSTR	CONFIG		;SYSTEM NAME
	NPRINT	<IMPURE PART	>,0,TPOPJ1
	NPRINT	<SYSTEM STUFF	>,TPOPJ1,DEVBEG
	NPRINT	<DEV SERVICES	>,DEVBEG,PATCH
	NPRINT	<DDT & SYSMAK	>,PATCH,BLTBEG
	NPRINT	<ONCE ONLY	>,BLTBEG,THEEND
	HLRO	TAC,116		;JOBSYM
	MOVNS	TAC
	OUTSTR	[ASCIZ/
SYMBOLS		/]
	PUSHJ	P,DECOUT
	NPRINT	<DDT SWAPPED	>,0,DDT
	CALLI	12

SPDL:	BLOCK 20

LIT↔VAR
THEEND:
	BEND	ONCE

	END	SYSDSP		
