COMMENT ⊗   VALID 00006 PAGES
C REC  PAGE   DESCRIPTION
C00001 00001
C00002 00002	BEGIN ADSER ↔ SUBTTL ADSER  A/D SERVICE ROUTINE - J. SAUTER, STANFORD, 25-FEB-68
C00003 00003	SYSTEM INITIALIZATION OF AD
C00005 00004	INPUT/OUTPUT UUOS
C00009 00005	HERE AT P1 CLOCK LEVEL. READY TO TELL P2 TO START.
C00011 00006	HUNG:	SETOM	ADERR
C00013 ENDMK
C⊗;
BEGIN ADSER ↔ SUBTTL ADSER  A/D SERVICE ROUTINE - J. SAUTER, STANFORD, 25-FEB-68


DEFINE CAT!(A,B),<A!B>
ADCHL←CAT(CH,\ADCHN)

	JRST	ADSET		;INITIALIZE
	JRST	HUNG		;HUNG: PRINT MESS & STOP JOB.
↑ADDSP:	POPJ	P,		;RELEASE
	POPJ	P,		;CLOSE
	JSP	DAT,UERROR	;BUFFERED OUTPUT
	JSP	DAT,UERROR	;BUFFERED INPUT
	JRST	CPOPJ1		;ENTER
	JRST	CPOPJ1		;LOOKUP
	JRST	ADOUT		;DUMP OUTPUT (REALLY DAC)
	JRST	ADIN		;DUMP INPUT
	POPJ	P,		;USETO
	POPJ	P,		;USETI
	POPJ	P,		;UGETF
	JRST	CPOPJ1		;RENAME
	POPJ	P,		;CLOSE INPUT
	POPJ	P,		;UTPCLR
	POPJ	P,		;MTAPE

;SYSTEM INITIALIZATION OF AD
ADSET:	MOVEI	TAC,40+<ADCHN*2>	;ASSUMED LOCATION OF PI CHANNEL WORDS
	SKIPN	TAC1,P2NUM		;IS P2 ACTIVE?
	MOVE	TAC1,P1NUM		;NO. 
	TLNE	TAC1,MAOFF		;IS THIS P IN MA OFFSET?
	ADDI	TAC,100			;YES: ADD OFFSET.
	MOVEM	TAC,ADBLK		;STORE LOCATION OF BLKI/O INSTRUCTION
	MOVE	TAC1,[JSR CAT(CH,\ADCHN)]	;LOAD JSR FOR P1.
	SKIPE	P2NUM				;ARE WE USING P2?
	MOVE	TAC1,[JSR CAT(P2CH,\ADCHN)]	;YES. LOAD JSR FOR P2
	MOVEM	TAC1,1(TAC)		;STUFF IT INTO SECOND PI LOCATION
	MOVEM	TAC1,ADJSR		;AND SAVE THE INSTRUCTION HERE
	ADDI	TAC,1
	MOVEM	TAC,ADJSRL		;POINTER TO THE JSR TO INTERRUPT ROUTINE.
	SETZM	ADBKO
	SETZM	ADADV
	POPJ	P,
;INPUT/OUTPUT UUOS
ADIN:	TLZA	IOS,IO			;CLEAR IO AND SKIP
ADOUT:	TLOA	IOS,IO			;SET IO AND SKIP
	SKIPA	TAC,[BLKI DCB,ADBKO]	;FOR INPUT GET BLKI AND SKIP.
	MOVE	TAC,[BLKO DCB,ADBKO]	;FOR OUTPUT, GET BLKO
	MOVEM	TAC,@ADBLK		;STORE BLKI/O IN FIRST PI LOCATION
	HRRZ	TAC,UUO			;NOW ADDRESS CHECK
	CAMLE	TAC,USRREL
	JRST	ADRERR			;COMMAND WORD OUT OF BOUNDS.
	HRRZ	TAC,@UUO		;GET FIRST IOWD.
	HLRO	DAT,@UUO
	SUB	TAC,DAT			;IS FINAL ADDRESS IN BOUNDS?
	CAMLE	TAC,USRREL
	JRST	ADRERR			;NO.
	MOVE	TAC,@UUO		;YES.
	ADDI	TAC,(PROG)		;FORM ABSOLUTE ADDRESS.
	MOVEM	TAC,ADBKX		;STORE AS THE BLKO/I WORD
	MOVEI	TAC,@UUO		;GENERATE ABSOLUTE ADDRESS
	MOVE	TAC1,1(TAC)		;CONO TO 136.
	ANDCMI	TAC1,7			;REMOVE HIS PI NUMBER...
	IORI	TAC1,ADCHN		;AND INSERT OURS
	HRRZM	TAC1,ADLOC3		;PUT WHERE IT WILL BE HIT.
	HRRZ	TAC1,2(TAC)		;CONO TO 424.
	HRRZM	TAC1,ADLOC4		;REMEMBER IT LIKEWISE.
	MOVEI	TAC1,3(TAC)		;CONI FROM 136.
	HRRZM	TAC1,ADLOC1		;TO BE REMEMBERED
	MOVEI	TAC1,4(TAC)		;CONI FROM A/D.
	HRRZM	TAC1,ADLOC2		;LIKEWISE.
	PUSHJ	P,SETACT		;MARK A/D IN USE AND STOP JOB.
AD2:	MOVEI	DDB,ADDDB
	MOVE	IOS,DEVIOS(DDB)
	LDB	TAC,PIOMOD		;GET MODE.
;	CAIN	TAC,SD			;MODE 15?	- FLUSHED 8/7/73
;	POPJ	P,			;YES. RETURN.	- 
	TRNE	IOS,100			;CONTINUOUS MODE ?
	JRST	FOO			;YES.
	CAIN	TAC,D			;17?
	SKIPA	TAC,[CLOC3,,1]		;YES. JUST WAIT ONE JIFFIE.
WT:	MOVE	TAC,[CLOC2,,3]		;NO. GET CLOCK DESCRIPTOR.
	CONO	PI,PIOFF
	IDPB	TAC,CLOCK		;ENTER CLOCK REQUEST
	CONO	PI,PION
	POPJ	P,			;RETURN TO UUOCON.

FOO:					;CONTINUOUS MODE.
	MOVE	TAC,[JSR AD2INT]	;MAKE INTERRUPT GO TO RIGHT PLACE.
	MOVEM	TAC,@ADJSRL
	HRRZM	TAC,ADADV		;PREPARE TO GET JOB RESTARTED AT ONCE.
	SKIPL	ADBKO			;IS OUTPUT ALREADY GOING ON ?
	JRST	CLOC3			;NO. START IT. JOB WILL GO ON SINCE ADADV>0.
	MOVE	TAC,ADBKX		;YES. SAVE PTR. FOR NEXT BUFFER.
	MOVEM	TAC,ADADV		;ADADV ALSO SERVES AS A FLAG (SEE ADP1).
	POPJ	P,
;HERE AT P1 CLOCK LEVEL. READY TO TELL P2 TO START.
CLOC2:	CONSO	TV,1B28			;IS BUTTON BEING PUSHED?
	JRST	WT			;NO. WAIT ANOTHER 3 TICKS
CLOC3:	SETZM	ADERR
	MOVE	TAC,ADBKX		;GET BLKI/O WORD.
	MOVEM	TAC,ADBKO
	SETOM	ADACT			;TELL P2 TO START RUNNING
	SKIPE	P2NUM			;IF THERE'S NO P2, WE DO IT OURSELVES.
	POPJ	P,			;WAIT FOR P2 CLOCK LEVEL TO START IT.
↑ADP2:	MOVE	TAC,ADACT		;HERE FROM P2 CLOCK LEVEL (OR P1 IF NO P2)
	JUMPE	TAC,CPOPJ		;P2 DOESN'T SKIPN ON 2 PROCESSOR CELLS.
	SKIPE	ADERR			;ERRORS YET?
	JRST	AD6			;YES. GO BLAST IT
	SETZM	ADACT			;CLEAR CLOCK LEVEL REQUEST FLAG
	CONO	AD,4000			; STOP IT IF IT IS RUNNING
	MOVEI	TAC,20			; WAIT FOR IT
	SOJG	TAC,.
	CONO	ADC,0			; KILL NEW AD-DA IF RUNNING
	CONO	DAC,0			; OTHERWISE, WILL LOOP WITHOUT JSR P2CH1
	MOVSI	TAC,(<JRST>)
	HLLM	TAC,ADJMP		; MAKE US JUMP TO APPROPRIATE ROUTINE
	CONO	DCB,@ADLOC3
	CONO	AD,@ADLOC4
	CONO	PI,ADON
	POPJ	P,

;HERE TO STOP THE AD
AD6:	CONO	DCB,200000		;BLAST THE 136.
	CONO	AD,4000			;AND THE A/D
	CONO	PI,ADOFF		;TURN OFF A/D CHANNEL.
	MOVSI	TAC,(<JFCL>)
	HLLM	TAC,ADJMP		; KILL AD INTERRUPT JUMP
	MOVE	TAC,ADJSR		;MAKE INTERRUPTS GO TO NORMAL PLACE.
	MOVEM	TAC,@ADJSRL
	SETZM	ADBKO			;NO XFER IN PROGRESS.
	POPJ	P,			;AND RETURN.
HUNG:	SETOM	ADERR
	SETOM	ADACT
	SETZM	ADBKO
	JRST	AD5

↑ADINT:					;BLKO OVERFLOWED
	JSR	@ADSAV			;SAVE ACCUMULATORS.
	CONI	DCB,@ADLOC1		;CONI FROM 136.
	CONI	AD,@ADLOC2		;AND FROM A/D.
	PUSHJ	P,AD6			;KILL A/D AND 136.
	HRRZM	P,ADADV
	SKIPE	P2NUM			;ARE WE ON P2?
	POPJ	P,			;YES. RETURN

;IN CLKSER WE HAVE:	SKIPL	ADADV
;			PUSHJ	P,ADP1
↑ADP1:	SETZM	ADADV			;HERE AT P1 CLOCK LEVEL (OR IF NO P2)
	SKIPE	ADERR			;ERRORS?
	POPJ	P,			;YES.
AD5:	MOVEI	DDB,ADDDB
	MOVE	IOS,DEVIOS(DDB)
	TLZE	IOS,IOW
	PUSHJ	P,STTIOD
	SKIPL	ADBKO			;IS XFER STILL IN PROGRESS ?
	TRZ	IOS,IOACT		;NO. LET JOB BE SWAPPED AND SHUFFLED.
	MOVEM	IOS,DEVIOS(DEVDAT)
	POPJ	P,

	BEND ADSER
