COMMENT ⊗   VALID 00008 PAGES
C REC  PAGE   DESCRIPTION
C00001 00001
C00002 00002	BEGIN SPWSER ↔	 SUBTTL	 SPACEWAR SERVICE
C00003 00003	 ROUTINE TO KILL 2-PROCESSOR SPACE WAR FOR JOB N
C00006 00004	 ENTER HERE FROM UUOCON TO SET UP A SPW JOB
C00010 00005	 BASIC LEVEL SPW CLOCK AND RUN ROUTINES
C00013 00006	 HERE, WE KNOW THIS JOB IS RUNABLE. NOW, IS IT TIME TO RUN?
C00017 00007	 INTERRUPT LOCATIONS FOR BOTH PROCESSORS
C00021 00008	 WE GET HERE ON ERROR IN SPW MODE JOB OR DISMISS
C00024 ENDMK
C⊗;
BEGIN SPWSER ↔	 SUBTTL	 SPACEWAR SERVICE
; JAM. STANFORD, 8-NOV-68

AP2CHL←CAT(P2CH,\APRCHN)

; INITIALIZE ALL SPACEWAR TABLES

↑SPWINI:
	SETZM	SPWGO			; ZERO OUT P1 SPW TABLE
	MOVE	TAC,[XWD SPWGO,SPWGO+1]
	BLT	TAC,JBTST2+JOBN-1	;CLEAR SPWGO,SP2GO,JBTST2

	SYNINI SPWCSC

	CONI	404,SPWBUT		; SET UP SPW BUTTONS
	SETZM	SPWACT			; KILL SPW JOB COUNT
	SETZM	SPWUUF			;NOT AT SPACEWAR LEVEL ON EITHER PROCESSOR
	SETZM	SPWUUF+P2PID
	SETZM	SPWTMO			;AND INITIALLY, NO TIMEOUT ACTIVE
	SETZM	SPWTMO+P2PID
	POPJ	P,
; ROUTINE TO KILL 2-PROCESSOR SPACE WAR FOR JOB N
; CALLING . . .
;	MOVE	J,JOB		; GET JOB NUMBER IN ITEM
;	PUSHJ	P,KILSPW	; KILLS SPACEWAR, SAVES AC'S

↑KILSPW:PUSH P,TAC
	MOVSI TAC,SPWSNB
	PUSHJ P,CLRSIN		; CLEAR ANY SPACEWAR SWAPIN REQUEST
	POP P,TAC
	PUSH	P,TAC1
	PSYNC	SPWCSC		; GET CONTROL OF SPW CELLS
	SKIPN	JBTST2(J)	; IS A JOB ACTIVE HERE?
	JRST	KILSP1
IFN FTSTAT,<
	PUSH P,TAC
	MOVEI TAC,SPWSTA+7700
	PUSHJ P,STAPUT
	POP P,TAC
>;FTSTAT
	SKIPE	SPWGO(J)	;DOES HE HAVE A P1 SPW JOB
	PUSHJ	P,P1REL		;RELEASE SPW ON PDP 10
	SKIPE	SP2GO(J)	;AND P2
	PUSHJ	P,P2REL		;RELEASE SPW ON PDP 6
	SETZM	JBTST2(J)
KILSP1:	XSYNC	SPWCSC
	POP	P,TAC1
	POPJ	P,

P1REL:	SETZ	TAC1,
	MOVE	TAC,TAC1
	LDB	TAC1,[POINT 6,SPWGO(TAC),5]
	CAME	TAC1,J
	JUMPN	TAC1,.-3
	JUMPE	TAC1,CPOPJ
	LDB	TAC1,[POINT 6,SPWGO(J),5]
	DPB	TAC1,[POINT 6,SPWGO(TAC),5]
	SETZM	SPWGO(J)
	SOS	SPWACT
	POPJ	P,

P2REL:	SETZ	TAC1,
	MOVE	TAC,TAC1
	LDB	TAC1,[POINT 6,SP2GO(TAC),5]
	CAME	TAC1,J
	JUMPN	TAC1,.-3
	JUMPE	TAC1,CPOPJ
	LDB	TAC1,[POINT 6,SP2GO(J),5]
	DPB	TAC1,[POINT 6,SP2GO(TAC),5]
	SETZM	SP2GO(J)
	SOS	SPWACT
	POPJ	P,

OFSPW:	PUSHJ	P,KILSPW		;HERE IF HE GOOFS.
	JSP	TAC,UUOMES
	ASCIZ	 /ATTEMPT TO INITIATE SPW JOB WITH ONE ALREADY RUNNING
UUO/
; ENTER HERE FROM UUOCON TO SET UP A SPW JOB
; CALL FROM UUOCON:
;	MOVE	UCHN,[MODE-BITS,,TICKS]
;	MOVE	UUO,[ANYTHING,,STARTING ADDRESS]

↑SPWCON:
	MOVE	J,JOB(PID)		; GET CURRENT JOB NUMBER
	MOVEI	TAC,(UUO)		;GET STARTING ADDRESS
	JUMPN	UCHN,SPW0		;ZERO TICKS?
	CAIN	TAC,'SSW'		;STOP CODE?
	JRST	KILSPW			;YES, STOP SPACEWAR
SPW0:	CAIGE	TAC,140			;ABOVE JOB DATA AREA?
	JRST	UADRER			;GIVE HIM ADDRESS CHECK FOR STARTING ADR
	XCTR	XR,[MOVE TAC,(TAC)]	;ADDRESS CHECK HIS STARTING ADDRESS
				;HERE, P2 IS ALIVE.
	TLNN	UCHN,200000	;REQUESTING PDP-6?
	JUMPL	UCHN,SPW1	;NO, HOW ABOUT PDP-10?
	SKIPE	SP2GO(J)	;IS THERE ALREADY A JOB RUNNING HERE?
	JRST	OFSPW		;YES, HE GOOFED
SPW4H:	SKIPL	PALIVE+P2PID	;IS THE PDP-6 REALLY THERE?
	JRST	SPW4G
	TLNN	UCHN,200000	;WAS HE REALLY SURE ABOUT USING THE SIX?
	JRST	SPW1		;NO, TRY THE TEN
	JUMPN	PID,SPW4G
	MOVEI	TAC,[ASCIZ /
HUNG DEVICE:	PDP-6
/]
	PUSHJ	P,HNGMES
	JRST	SPW4H

SPW4G:	AOS	SPWACT
IFN FTSTAT, <
	HRRZ TAC,UCHN
	LSH TAC,6
	TRO TAC,SPWSTA+4000	;FLAG PDP-6
	PUSHJ P,STAPUT
>;FTSTAT
	PSYNC	SPWCSC		; GET CONTROL OF JBTST2
	MOVSI	DAT,SPWRUN
	TLNE	UCHN,40000	;SUPPRESS TIMEOUT?
	MOVSI	DAT,SPWRUN!SPWNT2	;YES. SET TIMEOUT SUPRESSION BIT TOO
	IORM	DAT,JBTST2(J)	; MARK US AS RUNNING
	TSO	UCHN,SP2GO	; COPY FIRST LINK INTO UCHN (RIGHT)
	DPB	J,[POINT 6,SP2GO,5]	;NEW FIRST LINK
	HRLM	UCHN,SP2GO(J)	;DO THIS STUFF NOW TOO
	HRRM	UUO,SP2GO(J)
	XSYNC	SPWCSC		; RELEASE CONTROL OF JBTST2
	JUMPGE	UCHN,CPOPJ	;IS HE REQUESTING IT TO BE RUN ON THE PDP-10 ALSO?

SPW1:				;HERE FOR P1 SPACEWAR
	SKIPE	SPWGO(J)	; IS THERE ALREADY A JOB THERE?
	JRST	OFSPW		; YES, GO SHOOT HIM!
	AOS	SPWACT		; WE HAVE ONE MORE SPW JOB NOW
IFN FTSTAT, <
	HRRZ TAC,UCHN
	LSH TAC,6
	TRO TAC,SPWSTA		;FLAG PDP-10
	PUSHJ P,STAPUT
>;FTSTAT
	PSYNC	SPWCSC		; GET CONTROL CELLS
	MOVSI	DAT,SPWRUN	; INDICATE THAT A JOB IS RUNNING
	TLNE	UCHN,100000	;P1 TIMEOUT SUPRESSION?
	MOVSI	DAT,SPWRUN!SPWNT1	;YES. SET TIMEOUT SUPRESSION BIT
	IORM	DAT,JBTST2(J)	; PUT IN 'RUNNING' BIT
	TSO	UCHN,SPWGO
	DPB	J,[POINT 6,SPWGO,5]
	HRLM	UCHN,SPWGO(J)	; PUT JIFFIES IN LH
	HRRM	UUO,SPWGO(J)	; PUT ADDRESS IN RH
	XSYNC	SPWCSC
	POPJ	P,
; BASIC LEVEL SPW CLOCK AND RUN ROUTINES
; FIRST, ACCUMULATOR RE-DEFINITIONS
AC←DEVDAT
GO←DAT
A←DSER
B←UCHN
C←UUO
D←PROG
; REGISTER AC CONTAINS THE ADDRESS OF THE PROCESSOR'S AC STORAGE TABLE
; REGISTER GO CONTAINS SPWGO OR SP2GO, DEPENDING ON WHERE WE ARE

↑SPWP2:	MOVEI	AC,SPWB		; LOAD UP AC WITH P2 STORAGE TABLE ADDRGSS
	MOVEI	GO,SP2GO	; AND P2 RUN TABLE
	JRST	SPWPP

↑SPWP1:	MOVEI	AC,SPWA		; AC STORAGE FOR P1
	MOVEI	GO,SPWGO	; APPROPRIATE RUN TABLE
SPWPP:	PUSH	P,JOB(PID)	;SAVE SO WE CAN RUN SPW UUOS.
	SETOM	SPWUUF(PID)	; FLAG SPW LEVEL.
	HRLI	GO,J		; INDEX SPWGO BY JOB NUMBER
	MOVEI	J,0		; START AT FRONT
SPWPP3:	PSYNC	SPWCSC
	LDB	J,[POINT 6,@GO,5]	; LINK
	JUMPN	J,SPWPP2		; DISPATCH IF NON-ZERO
	XSYNC	SPWCSC
	POP	P,JOB(PID)
	MOVE	J,JOB(PID)	; PUT JOB NUMBER UP
	MOVE	A,JBTADR(J)	; GET PROT-RELOC FOR JOB WE INTERRUPTED
	MOVEM	A,JOBADR(PID)	;YES.
	HLRZM	A,USRREL(PID)
	SETZM	SPWUUF(PID)
	JUMPE	J,CPOPJ		;DON'T RESTORE PROT-RELOC FOR JOB 0
	PUSHJ	P,GETPR		;GET JOB'S PROT-RELOC
	DATAO	APR,TAC		;SET PR
	POPJ	P,		;END OF LOOP, GO HOME

SPWPP2:	MOVE	D,@GO		;GET LATEST COPY OF SPW WORD
	TRNE	D,-1		;IS HE BEING FLUSHED?
	SKIPL	A,JBTST2(J)	;IS THIS JOB RUNNABLE?
	JRST	SPWPP5		;NO, EXIT NOW
	JUMPN	PID,SWPP2B	;JUMP IF P2
	TLNN	A,SPWST1	;IS HE SUSPENDED SOMEHOW?
	JRST	SPWPP4		;NO, GO RUN HIM
	SKIPE	SP2GO(J)	;IS HE RUNNING ON P2 TOO?
	JRST	SPWPP5		;YES THEN LET ONLY P2 COUNT THE SUSPENSION.
	ADDI	A,1		;INCREMENT THE SUSPENSION COUNT.
SWPP2A:	HRRM	A,JBTST2(J)	;STORE NEW SUSPENSION COUNT.
	JRST	SPWPP5		;RELEASE CELLS AND CONTINUE SCAN.

SWPP2B:	TLNN	A,SPWST2	;SUSPENDED ON P2?
	JRST	SPWPP4		;NO.RUN THIS ONE.
	AOJA	A,SWPP2A	;COUNT THE SUSPENSION

SPWPP9:	DPB	A,[POINT 4,D,13];UPDATE COUNT
	MOVEM	D,@GO		;REPLACE IN CONTROL WORD
SPWPP5:	XSYNC	SPWCSC
	JRST	SPWPP3
; HERE, WE KNOW THIS JOB IS RUNABLE. NOW, IS IT TIME TO RUN?

SPWPP4:	LDB	A,[POINT 4,D,13]	; PICK UP SPW COUNT
	LDB	B,[POINT 4,D,17]	; PICK UP SPW TIME
	JUMPE	B,[JUMPN A,SPWPP9	;ZERO TICKS HE HAS RUN ONCE.
		AOJA	A,SPWPP0]	;RUN HIM HIS ONE TIME.
	CAIGE	A,-1(B)			;WILL IT BE TIME WHEN WE INCREMENT A?
	AOJA	A,SPWPP9		;NOT TIME YET. INCREMENT AND REPLACE.
	SETZ	A,			; YES, ZERO COUNT AND RUN JOB
SPWPP0:	DPB	A,[POINT 4,D,13]
	MOVEM	D,@GO
	MOVE	B,JBTST2(J)	; GET STATUS REGISTER
	HLLZS	JBTST2(J)	; NOW ZERO ERROR DELAY COUNT
	TLNE	B,SPWSUS	; SHOULD WE WARN HIM OF AN IMPENDING DELAY?
	JRST	SPWPP6		; YES
	HRRZ	B,B		; COUNT OF TICKS WHILE SUSPENDED.
	JRST	SPWPP8		; RUN HIM.
SPWPP6:	JUMPE	PID,.+2		; COME HERE IF WE MUST GIVE A WARNING
	TLOA	B,SPWSU2	;TURN ON SUSPENSION WARNING FLAG P2
	TLO	B,SPWSU1	;TELL JOB A SUSPENSION IS INDICATED P1
	MOVEM	B,JBTST2(J)	; REPLACE JOB STATUS
	MOVNI	B,1		; PUT WARNING IN B
SPWPP8:	MOVSI	A,SPWNT1	;TIMEOUT SUPRESSION BIT (P1)
	JUMPE	PID,.+2
	MOVSI	A,SPWNT2	;TIMEOUT SUPRESSION BIT(P2)
	TDNN	A,JBTST2(J)	;SKIP IF TSB IS ON
	MOVEI	A,JIFSEC/2	;TIMEOUT IS HALF A SECOND
	HRRZM	A,SPWTMO(PID)	;STORE THE TIMEOUT WORD
	MOVE	A,[JRST 2,@UUO0]
	ADDI	A,(PID)
	MOVEM	A,SPWXCT(PID)	;SET UP THE UUO EXIT INSTRUCTION
				;WHICH IS CLOBBERED BY CH3 ON TIMEOUTS
	XSYNC	SPWCSC
	HRRZ	A,AC
	BLT	A,17(AC)	; BLT THEM INTO SPWA OR SPWB
	SETZM	A(AC)		; AND ZERO OUT ACCUMULATOR A IN CORE
	HRRZ	17,D		; GET JOB STARTING ADDRESS
	HRLI	17,4000		; PUT IN IOT USER MODE BIT
	PUSHJ	P,GETPR		; GET HIS PR
	DATAO	APR,TAC
	MOVE	2,JBTADR(J)	; GET HIS PROTECTION-RELOCATION
	TLZ	2,1777		; ZERO OUT THESE BITS FOR PDP-10
	MOVE	1,SPWBUT	; GET SPACEWAR BUTTONS FOR HIM

	MOVN	15,J		;
	MOVSI	2,400000
	LSH	2,(15)
	JUMPN	PID,.+2
	DATAO	PI,2		;TURN ON MI WITH JOB NUMBER.

	SETOM	STIME(J)	;FLAG THAT CORE IMAGE HAS BEEN RUN (I.E. MODIFIED)
	MOVE	15,J		; SAVE JOB NUMBER
	MOVE	2,JBTADR(J)	; RESTORE TRUE PROT-REL
	MOVE	7,JOBRL2(PROG)	; UPPER TOO
	MOVE	6,JBTSTS(J)
	MOVE	3,B		; GET FLAG REGISTER
	MOVEI	4,1
	SKIPE	PID
	MOVEI	4,2
	SETZM	5
	SKIPN	P2NUM
	JRST	SIXDED
	JUMPN	PID,SIXTST
	SKIPGE	PALIVE+P2PID
	SETOM	5
	JRST	3,@17
SIXTST:	SKIPGE	PALIVE+P1PID
SIXDED:	SETOM	5
	JRST	3,@17
; INTERRUPT LOCATIONS FOR BOTH PROCESSORS

↑SPWINT:
	CONI	APR,A
	TRNE	A,ILM
	TLO	A,ILMSPW
	TRNE	A,NXM
	TLO	A,NXMSPW
	TRNE	A,POV
	TLO	A,POVSPW
	CONO	APR,531110+APRCHN	; CLEAR ANY CONCEIVABLE ERROR
	HRR	A,APRCHL		; GET LOCATION OF ERROR
	MOVEM	A,SPWA+A		; SET INTO SAVED ACCUMULATOR
	MOVE	PID,[P1PID]
	JRST	10,SPWUUX		; TREAT AS A UUO

↑SPWERR:
	MOVE	J,JOB(PID)
	MOVE	A,UUOPC(J)
	SKIPN	PID
	HRRZM	A,SPWA+A
	SKIPE	PID
	HRRZM	A,SPWB+A
↑SPWXIT:		;COME HERE ON DISMIS UUO(SEE US BE SNEAKY)!
	MOVE	P,SPWA+P
	SKIPE	PID
	MOVE	P,SPWB+P
	AOBJP	P,.+1		;GET OLD UUOPC (SAVED BY SPWUUO)
	POP	P,UUOPC(J)	; RESTORE UUO-LEVEL PC WORD
	JRST	SPWUUX

↑SP2INT:
	CONI	APR,A
	TRNE	A,ILM
	TLO	A,ILMSPW
	TRNE	A,NXM
	TLO	A,NXMSPW
	TRNE	A,POV
	TLO	A,POVSPW
	TRNE	A,CNS
	TLO	A,CNSSPW
	CONO	APR,531110+APRCHN	; CLEAR APR ERROR
	HRR	A,AP2CHL		; GET LOCATION OF ERROR
	MOVEM	A,SPWB+A
	MOVE	PID,[P2PID]
	JRST	10,SPWUUX

↑SPWUUO:
;THE FOLLOWING 2 INST. PREVENT UUO'S FROM SPACEWAR--RPH 12-26-71
;	SKIPL	@UUOLOC(PID)
;	JRST	SPWUUX
	JUMPN	PID,SPWUUX	;NO UUO'S ON 6 GODDAMMIT!
	MOVE	J,J+SPWA	;GET JOB NO. OF SPW JOB.
	SKIPE 17,UUOPTR(J)	;MUST CHECK THIS HERE SO WE DON'T DO TESTS ON UUO
	JRST SPWUU3
SPWUU1:	SKIPE	17,@UUOLOC(PID)	;STOP ON 0
	CAMN	17,[CALL]	;OR CALL WITH 0 ADR
	JRST	SPWUUX
	HLRZ	17,17
	CAIN	17,(<JRST 4,>)	;OR HALT
	JRST	SPWUUX
;	SKIPE	PID
;	MOVE	J,J+SPWB
SPWUU2:	MOVEM	J,JOB(PID)	;PUT WHERE UUOCON WILL SEE IT.
	MOVE	PROG,JBTADR(J)	;ALSO RELOCATION.
	MOVEM	PROG,JOBADR(PID)
	HLRZM	PROG,USRREL(PID)
	MOVE	P,SPWA+P	;GET A PDL FOR UUOCON.
;	SKIPE	PID
;	MOVE	P,SPWB+P
	PUSH	P,UUOPC(J)	; AND SAVE THE OLD UUO PC WORD
	MOVE	DAT,UUO0(PID)	; PICK UP RETURN
	MOVE	UUO,@UUOLOC(PID)	; AND UUO ITSELF
	JRST	UUOSY1		;LET UUOCON HANDLE IT.

SPWUU3:	XCTR	XR,[SKIPN SPWBLK+1(17)]	;IF SIMULATOR IS ENABLED FOR SPACEWAR,
	XCTR	XR,[SKIPN SPWBLK+2(17)]	;WE'LL BYPASS THE DISMISSAL TESTS
	JRST	SPWUU1
	JRST	SPWUU2

↑SPTMOE:				;HERE IN EXEC MODE IN CH7 FOR TIME-OUT
	MOVEI	PID,0			;ASSUME PDP-10
	CONSO	APR,MAOFF		;SKIP IF WE ARE THE PDP-10
	MOVEI	PID,P2PID		;PDP-6
	MOVSI	A,ILLTMO		;SET TIMEOUT BIT
	HRR	A,SPWBLO(PID)		;LOOK AT HOW WE WERE SHOT DOWN
	SKIPE	PID
	MOVEM	A,SPWB+A		;STORE EVIL BITS
	SKIPN	PID
	MOVEM	A,SPWA+A
	JRST	SPWUUX			;PRETEND UUO
; WE GET HERE ON ERROR IN SPW MODE JOB OR DISMISS

↑SPWUUX:
	MOVSI	17,SPWA		; RESTORE P1 ACCUMULATORS
	SKIPE	PID
	MOVSI	17,SPWB		; RESTORE P2 ACCUMULATORS
	BLT	17,17
	JUMPE	A,SPWUU0	; NO ERRORS, SCAN FOR NEXT JOB.
	PSYNC	SPWCSC
	HLLZS	@GO		; ERROR, KILL THIS JOB
	TLO	A,SPWERB	; ADD ERROR BIT TO THOSE ALREADY THERE
	MOVEM	A,JBTST2(J)	; MOVE IN ERROR BIT
	XSYNC	SPWCSC
SPWUU0:	JRST	2,@[SPWPPB]

SPWPPB:	PSYNC	SPWCSC
	SKIPN	@GO
	JRST	SPWPPC
	LDB	A,[POINT 4,@GO,17]	;GET HIS TIME FIELD 
	JUMPN	A,SPWPPC
	JUMPN	PID,SPWPPD
	PUSHJ	P,P1REL			;ZERO TICKS. RELEASE P1 SPACEWAR
	SKIPE	SP2GO(J)
	JRST	SPWPPC
	JRST	SPWPPE
SPWPPD:	PUSHJ	P,P2REL			;ZERO TICKS. RELEASE P2 SPACEWAR
	SKIPN	SPWGO(J)
SPWPPE:	SETZM	JBTST2(J)		;ZERO THIS IF NOT SPW ACTIVE ON OTHER P.
SPWPPC:	MOVE	A,JBTST2(J)		;PICK UP JOB STATUS
	JUMPN	PID,SPWPPF
	MOVSI	D,SPWST1		;P1 SUSPEND BIT
	SKIPN	SP2GO(J)		;IS THERE SPACEWAR ON P2 ALSO?
	MOVSI	D,SPWST1!SPWST2		;NONE ON P2. GET BOTH PROC. SUSP BITS.
	TLZE	A,SPWSU1		;HAS WARNING BEEN GIVEN?
	TDO	A,D			;YES, SUSPEND THIS JOB
	TLC	A,SPWST1!SPWST2		;ARE BOTH NOW SUSPENDED?
	TLCN	A,SPWST1!SPWST2		;
	TLZ	A,SPWSUS		;BOTH NOW SUSPENDED, CLEAR SUSPENSION REQ.
	MOVEM	A,JBTST2(J)		; AND REPLACE JOB STATUS
	XSYNC	SPWCSC
	JRST	SPWPP3
SPWPPF:	MOVSI	D,SPWST2		;P2 SUSPEND BIT.
	SKIPN	SPWGO(J)
	MOVSI	D,SPWST1!SPWST2
	TLZE	A,SPWSU2		;HAS SUSPENSION WARNING BEEN GIVEN?
	TDO	A,D			;YES. SET SUSPENSION.
	TLC	A,SPWST1!SPWST2		;ARE BOTH NOW SUSPENDED?
	TLCN	A,SPWST1!SPWST2		;
	TLZ	A,SPWSUS		;BOTH NOW SUSPENDED, CLEAR SUSPENSION REQ.
	MOVEM	A,JBTST2(J)		;STORE JOB STATUS
	XSYNC	SPWCSC
	JRST	SPWPP3
BEND SPWSER
