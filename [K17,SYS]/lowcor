COMMENT ⊗   VALID 00006 PAGES
C REC  PAGE   DESCRIPTION
C00001 00001
C00002 00002	LOWCOR 6 SEPT 67
C00005 00003	BEGIN PWAIT
C00010 00004	DEVOPR:	SIXBIT /CTY/		OPERATORS CONSOLE DEVICE = CTY.
C00013 00005	MONTH TABLE FOR DAYTIME PRINTING
C00014 00006	  HISTOGRAM STATISTIC GATHERING ROUTINE.
C00017 ENDMK
C⊗;
SUBTTL LOWCOR 6 SEPT 67

SHDACS:	BLOCK 20	;ACS STORED HERE DURING ZSHAD

; BEGINNING OF PROTECTED PART OF MONITOR . . .
CHKBEG←←.

;; ON THIS PAGE LIE SOME VERY COMMON AND USEFUL ROUTINES . . .

TPOPJ1:	AOS	-1(P)		;RESTORE TAC THEN SKIP RETURN
TPOPJ:	POP	P,TAC		;RESTORE TAC
	POPJ	P,		;AND RETURN

CPOPJ2:	AOS	(P)		;DOUBLE SKIP SUBROUTINE RETURN
CPOPJ1:	AOSA	(P)		;SKIP SUBROUTINE RETURN
PIONJ:	CONO	PI,PION
CPOPJ:	POPJ	P,

FMCHK:	PUSHJ	P,ZSHAD
	JRST	CPOPJ1		;FM ENB OK
	MOVE	TAC,[440700,,[ASCIZ/TURN ON FM ENB.  THEN CONTINUE.
/]]
	JSR	DDTTYP
	POP	P,DDTTYP
	JRST	4,@DDTTYP

ZSHAD:	CONSO	APR,MAOFF	;ARE WE THE PDP-10?
	POPJ	P,		;NO. DO NOTHING.
	PUSH	P,140		;SAVE THE UUO LOCATIONS
	PUSH	P,141
	PUSH	P,LASTPR
	MOVEM	17,SHDACS+17	;SAVE THE REAL AC'S SO WE DON'T ZERO THEM
	MOVEI	17,SHDACS
	BLT	17,SHDACS+16
	MOVE	0,[JRST ZSHAD1]
	MOVEM	0,141		;SET TO TRAP OUR ILLEGAL INSTRUCTION
	MOVE	17,[776000,,2000]
	MOVEM	17,LASTPR
	DATAO	APR,17
	MOVSI	17,USRSHD
	BLT	17,17
	JRST	1,1		;RUN USER MODE CODE IN ACS

ZSHAD1:	EXCH	SHDACS		;SHDACS←0 IF NO FM ENB
	MOVE	17,[SHDACS+1,,1]
	BLT	17,17
	POP	P,LASTPR
	POP	P,141
	POP	P,140
	DATAO	LASTPR
	SKIPN	SHDACS
	AOS	(P)		;SKIP RETURN IF FM ENB OFF
	POPJ	P,

USRSHD:	-1			;GETS LOADED INTO ACS (STARTING AT ZERO)
	SETZM	-2000		;CLEAR SHADOW ZERO
	BLT	17,-2000+17	;BLT ACS INTO SHADOW MEM
	JRST 4,			;GET BACK TO EXEC MODE
	BLOCK USRSHD-.+17
	0,,-2000		;17
BEGIN PWAIT
;COMMENT ⊗
;NEW, SIMPLE-MINDED PWAIT ... ALGORITHM (?) BY D.POOLE
;REQUIRES SYNINI TO SETZM A (SETOM A FOR OLD PWAIT CODE)
;0(TAC) > 0 => P1 WANTS/HAS IT
;1(TAC) > 0 => P2 WANTS/HAS IT

↑PWAIT:	PUSH P,TAC
	XCT @-1(P)		;PICK UP ARG AFTER CALL
	JUMPN PID,P2L0
P1L0:	AOS (TAC)
	SKIPG 1(TAC)		;SKIP IF P2 ALSO WANTS/HAS IT
	JRST PWAITX		;GOTCHA
	SOS (TAC)		;GIVE IT UP AND TRY AGAIN
	JRST P1L0

P2L0:	AOS 1(TAC)
	SKIPG (TAC)
	JRST PWAITX
	SOS 1(TAC)
	JRST P2L0

↑XWAIT:	PUSH P,TAC
	XCT @-1(P)		;PICK UP ARG AFTER CALL
	JUMPN PID,XWAIT1
	SOSL (TAC)
	JRST PWAITX
XWAITE:	PUSHACS
	PUSHJ P,DISMES
	ASCIZ /ππππPDP8+-2 OVER XSYNCED.  CALL FROM /
	HRRZ TAC,-21(P)		;-1 FOR PUSH P,TAC
	PUSHJ P,DISLOC
	PUSHJ P,DISCRLF
	PUSHJ P,DISMES
	ASCIZ /GET A WIZARD TO CHECK PID FOR ERROR, OR
ON PDP-10    TYPE POPJ 3,$X
ON PDP-6     PRESS CONTINUE
/
	PUSHJ P,DISFLU
	CONSO APR,MAOFF
	JRST 4,.+2
	PUSHJ P,DDTCAL
	POPACS
	JUMPN PID,[SETZM 1(TAC)
		JRST PWAITX]
	SETZM (TAC)
	JRST PWAITX

XWAIT1:	SOSGE 1(TAC)
	JRST XWAITE
PWAITX:	POP P,TAC
	JRST CPOPJ1
;⊗

COMMENT ⊗ THIS IS THE OLD PWAIT...NOT USED SINCE 12/3/73
;REQUIRES SYNINI TO SETOM A (SETZM A FOR NEW CODE)
;; DUAL-PROCESSOR WAIT ROUTINES . . .		JAM, 1968 (?)
;;						JHS, APR 1972
;; REFERENCES:	COMMUNICATIONS OF THE ACM, VOL. 8, NUM. 9, P 569.
;;		COMMUNICATIONS OF THE ACM, VOL. 9, NUM. 5, PP 320-22.
;;	THESE ROUTINES ARE A MODIFICATION OF THE TWO COMPUTER ALGORITHM
;; BY KNUTH ON PAGE 322 OF THE ABOVE REFERENCE.  THE FOLLOWING CORRE-
;; SPONDENCES EXIST:	0(TAC) ←→ K
;;			1(TAC) ←→ CONTROL[I]	(PROCESSOR 1)
;;			2(TAC) ←→ CONTROL[J]	(PROCESSOR 2)
;;	IN ADDITION,	3(TAC) IS USED AS A DEPTH COUNTER, SINCE A 
;; PROCESSOR IN ITS CRITICAL SECTION CAN BE INTERRUPTED BY  ITSELF AT A
;; HIGHER LEVEL AND SUCCEED IN ENTERING A HIGHER PRIORITY CRITICAL SECTION.
;;	NOTE: CARE MUST BE TAKEN ON THE STANFORD SYSTEM, WHERE P2 IS THE
;; PDP-6, WHICH DOES READ-MODIFY-WRITES TO MEMORY ON SKIP INSTRUCTIONS!

↑PWAIT:	PUSH P,TAC
	XCT @-1(P)		;PICK UP ARG AFTER CALL
	SKIPN P2NUM		;P2 IS RUNNING?
	JRST PWAIT2		;NO, DON'T BOTHER (BUT DO AOS SINCE XWAIT IGNORES P2NUM)
	JUMPN PID,P2L00
P1L0:	SETOM 1(TAC)
P1L1:	AOS NPWAITS
	SKIPE (TAC)
	JRST P1L2
	SKIPE 2(TAC)
	JRST P1L1
P1L2:	MOVNS 1(TAC)
	SKIPLE 2(TAC)
	JRST P1L0
	SETOM (TAC)
PWAIT2:	AOS 3(TAC)		;INCREMENT DEPTH COUNT
PWAITX:	POP P,TAC
	JRST CPOPJ1

P2L00:	PUSH P,TAC1		;  P2 CAN'T DO SKIP'S, SAVE AN ACCUMULATOR
	MOVEI TAC1,		;AND SET IT TO 0 FOR TESTS
P2L0:	SETOM 2(TAC)
P2L1:	CAMN TAC1,(TAC)
	JRST P2L2
	CAME TAC1,1(TAC)
	JRST P2L1
P2L2:	MOVNS 2(TAC)
	CAMGE TAC1,1(TAC)
	JRST P2L0
	SETZM (TAC)
	POP P,TAC1		;  RESTORE P2'S EXTRA ACCUMULATOR
	JRST PWAIT2

↑XWAIT:	PUSH P,TAC
	XCT @-1(P)		;GET ARG
	SOSLE 3(TAC)		;ARE WE BACK UP TO TOP LEVEL?
	JRST PWAITX		;  NO
	JUMPN PID,XWAIT2	;ARE WE P1 OR P2?
	SETZM (TAC)		;  P1
	SETZM 1(TAC)
	JRST PWAITX

XWAIT2:	SETOM (TAC)		;  P2
	SETZM 2(TAC)
	JRST PWAITX

⊗	END OF OLD PWAIT CODE

BEND PWAIT
DEVOPR:	SIXBIT /CTY/		;OPERATORS CONSOLE DEVICE = CTY.
				;PUBLIC LOGICAL NAME "OPR" WILL BE THIS DEVICE
				;ALSO UNEXPLAINED MONITOR ERROR MESSAGE WILL BE TYPED
				;ON TTY OPR(FIRST TTY TYPED ON IF DEVOPR=0)
DEFINE FIGMAC!(NUM)
<ASCIZ ?Stanford NUM!.17/K 08-16-74?>
PRINTS /Did you remember to change CONFIG?
/

IFE FTDISK,<
CONFIG:	FIGMAC (2)
SYSTAP:	SIXBIT /DTA4/
>
IFN FTDISK,<
CONFIG:	FIGMAC (6)
SYSTAP:	SIXBIT /DSK/
>


;BYTE POINTERS

PUUOAC:	POINT	4,UUO,12		;UUO AC FIELD
PIOMOD:	POINT	4,IOS,35		;MODE BITS
PJOBN:	POINT	6,DEVCHR(DDB),5		;DEVICE JOB ASSIGNMENT
PDVBLN:	POINT	PUNITP,DEVCHR(DDB),35	; DEVICE BUFFER LENGTH
PUNIT:	POINT	PUNITS,DEVCHR(DDB),35-PUNITP	;DEVICE UNIT NO.
PSEGN:	POINT	6,JBTSTS(J),35		; NUMBER OF HIGH SEGMENT THIS JOB HAS
PDSEGN:	POINT	6,(AC1),35		; NUMBER OF SEGMENT IN JBTDTS
PSINF0:	POINT	6,JBTSIN,35		; HEAD OF LIST, FORWARD LINK
PSINFJ:	POINT	6,JBTSIN(J),35		; FORWARD LINK (J)
PSINFT:	POINT	6,JBTSIN(TAC),35	; FORWARD LINK (TAC)
PSINB0:	POINT	6,JBTSIN,29		; HEAD OF LIST, BACKWARD LINK
PSINBJ:	POINT	6,JBTSIN(J),29		; BACKWARD LINK (J)
PSINBT:	POINT	6,JBTSIN(TAC),29	; BACKWARD LINK (TAC)

REPEAT 0,<
PRUNB:	POINT	2,JB2STS(J),16		; POINTER TO PROCESSOR RUN BITS
>

PDVTIM:	POINT	6,DEVCHR(DDB),17	;TIME IN SECONDS BEFORE DEVICE
					;IS SAID TO BE HUNG
PDVCNT:	POINT	6,DEVCHR(DDB),11	;COUNTER DOWN EACH SECOND,
					;1 TO 0 TRANSITION MEANS HUNG DEVICE


IFN	FTSWAP,<
IMGIN:	POINT	8,JBTSWP(J),35		;POINTER TO INCORE IMAGE (1K BLOCKS)
IMGOUT:	POINT	8,JBTSWP(J),26		;POINTER TO OUTCORE IMAGE
IMGINT:	POINT	8,JBTSWP(DDB),35	;POINTER TO INCORE IMAGE
>
IFN FTLOGIN,<
↓SYSPPN:	SIXBIT /  1  1/			;1,1 IS SYSPPN ;JS
↓DUMPPN:	SIXBIT /  1  2/			;1,2 IS DUMPPP  ;JS
↓CUSPPN:	SIXBIT /  1  3/			;1,3 IS CUSP AREA
HELPPP:		SIXBIT /100100/			;100,100 IS HELPPP AND DEMOS ;JS
>
;MONTH TABLE FOR DAYTIME PRINTING

MONTAB:	=30B5+"JAN"
	=27B5+"FEB"
	=30B5+"MAR"
	=29B5+"APR"
	=30B5+"MAY"
	=29B5+"JUN"
	=30B5+"JUL"
	=30B5+"AUG"
	=29B5+"SEP"
	=30B5+"OCT"
	=29B5+"NOV"
	=30B5+"DEC"
MIDNIT: =60*=60*=24*JIFSEC		;NO OF JIFFIES TILL MIDNIGHT


; THE FOLLOWING IS A LIST OF THE ASCII NAMES OF THE QUEUES
; SO SYSTAT CAN READ THEM

QNAMS:
DEFINE X!(A) {<ASCII /A!Q   />}
	QUEUES
	CODES
	PQUEUES
	ASCII /CMQ  /	; DON'T FORGET COMMAND WAIT!!
;  HISTOGRAM STATISTIC GATHERING ROUTINE.
;
;	CALL:	PUSHJ	P,HG
;		RETURN HERE ALWAYS
;
;	CURRENTLY, THIS ROUTINE IS CALLED (ONLY) BY KDBINT.
;	THUS, STATISTICS ARE GATHERED ON EVERY KEYSTROKE OF EVERY
;MICROSWITCH KEYBOARD.
;	THIS ROUTINE, ONCE EVERY HGSET TIMES IT IS CALLED, WILL
;INCREMENT ONE & ONLY ONE OF THE 5 COUNTERS: HGCH6,HGUSR,HGSPW,HGUUO,
;HGSYS.  IN ADDITION, IF HGSYS IS INCREMENTED, THEN ONE OF THE
;COUNTERS HGCNTS WILL BE INCREMENTED, AND IF HGUSR IS INCREMENTED
;AT A TIME WHEN THE NULL JOB IS RUNNING, THEN EITHER HGNULL OR HGIDLE
;DEPENDING ON THE STATE OF <TQ+RUNQ>.
;
;	THIS ROUTINE CLOBBERS ACCUMULATOR TAC, RETURNS WITH POPJ, P.
;NO OTHER ACCUMULATORS ARE USED.

IFN FTHG,<
HG:
	SOSE	HGYET		;TIME TO DO OUR THING YET?
	POPJ	P,		;NO.
	MOVE	TAC,HGSET
	MOVEM	TAC,HGYET	;RESET TIMER
	CONSZ	PI,40		;CH2 ACTIVE?
	AOS	HGCH2		;YES. COUNT IT
	CONSZ	PI,1000		;CHANNEL 6 IN PROGRESS?
	AOSA	HGCH6		;YES, INCREMENT OUR COUNTER AND RETURN
	SKIPA	TAC,CH5		;ELSE, GET PC WORD
	POPJ	P,		;RETURN FOR CH6 ACTIVE.
	SKIPE	SPWUUF
	JRST	ISHGSP		;CATCH SPCWAR UUO'S ALSO
	TLNN	TAC,USRMOD	;WE INTERRUPTED A USER?
	JRST	HG4		;NO. WE'RE IN THE SYSTEM
	CONSZ	PI,400		;USER IN CHANNEL 7?
ISHGSP:	AOSA	HGSPW		;YES - SPACEWAR USER
	AOSA	HGUSR		;NO. PLAIN USER CODE.
	POPJ	P,
	SKIPE	JOB		;NULL JOB RUNNING?
	POPJ	P,		;NO
	SKIPGE	JBTQ-RUNQ	;IS THIS IDLE OR WASTED
	SKIPL	JBTQ-TQ
	AOSA	HGNULL		;WASTED TIME (RUNQ OR TQ NOT EMPTY)
	AOS	HGIDLE		;IDLE TIME.
	POPJ	P,

HG4:	CONSO	PI,400		;CHANNEL 7 IN PROGRESS?
	AOSA	HGUUO		;NO WE'RE IN A UUO.
	AOSA	HGSYS		;WE INTERRUPTED CHANNEL 7.
	POPJ	P,
	HRRZ	TAC,HGCODE	;GET IDENTIFICATION CODE
	CAIL	TAC,HGNMAX	;A LEGAL CODE?
	MOVEI	TAC,0		;NO, MAKE IT THE DEFAULT CODE
	AOS	HGCNTS(TAC)	;INCREMENT APPROPRIATE HISTOGRAM COUNTER
	POPJ	P,
>
