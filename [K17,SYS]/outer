COMMENT ⊗   VALID 00047 PAGES
C REC  PAGE   DESCRIPTION
C00001 00001
C00006 00002	TITLE STANFORD A-I PDP-6/10 TIME-SHARING SYSTEM  6.16/M
C00007 00003	LIST OF INDEPENDENT MONITOR COMMAND FEATURES
C00010 00004	 ACCUMULATOR ASSIGNMENTS
C00013 00005	MNEMONICS FOR DDB WORDS
C00016 00006	    DEVICE SERVICE DISPATCH TABLE ASSIGNMENTS
C00018 00007	 DEVICE CHARACTERISTICS WORD DEFINITIONS
C00021 00008	 DDB ASSIGNMENTS, DEVCHR BITS
C00023 00009	 I/O STATUS WORD ASSIGNMENTS
C00026 00010	REST OF BITS IN LH ARE DEVICE DEPENDENT EXCEPT BIT 14 WHICH
C00028 00011	 JOB BUFFER AREA HEADER
C00029 00012	JOB STATUS WORD(JBTSTS IN IOINI1), ONE FOR EACH JOB
C00033 00013	JBTSIN SWAP IN LIST BITS
C00034 00014	JBTST2	TWO PROCESSOR INTERLOCKED SPACEWAR STATUS BITS
C00037 00015	PRIVILEGE BITS (IN JBTPRV AND JB2PRV)
C00042 00016	STATISTICS VARIABLES
C00044 00017	 SYSTEM MACROS
C00046 00018	MORE SYSTEM MACROS
C00048 00019	 MACROS TO SYNCHRONIZE PROCESSORS
C00049 00020	MACROS TO PUSH AND POP ACS, DISASTER MACROS
C00051 00021	PARAMETER ASSIGNMENTS FOR THIS SYSTEM.
C00053 00022	 HERE, WE DEFINE THE LEGAL QUEUES AND QUANTUM TIMES
C00055 00023	DEVICE NAMES NOT IN THE ASSEMBLER.(IN INCREASING ORDER)
C00057 00024	IOP CONO/CONI BITS
C00058 00025	FIRST 19 JULY 67
C00062 00026	SYSDSP SYSTEM INITIALIZATION DISPATCH TABLE, STARTING AT LOC 200
C00064 00027	 AT LOCATION 210 BEGINS THE LIST OF USEFUL LOCATIONS
C00066 00028	 HERE LIE THE ROUTINES TO PUSH AND POP ACCUMULATORS
C00068 00029	DDTCALL - THIS PRINTS "YOU'RE IN DDT" AND ENTERS DDT.
C00069 00030	 THIS PART HANDLES AUTOMATIC RELOADS AND RESTARTS
C00072 00031	 WAIT FOR THE PDP-6 TO CATCH UP BEFORE RELOADING
C00074 00032	 HERE WE PUT A ROUTINE INTO THE ACS AND JUMP TO IT WHILE SYSTEM IS BEING READ IN
C00076 00033	 ROUTINE TO TYPE ON THE CONSOLE TELETYPE
C00078 00034	 THIS ROUTINE SKIPS AND SETS DISFLAG AND TURNS OFF PI'S IF
C00079 00035	OTHER SYSTEM DATA STORAGE
C00081 00036	 P2 INITIALIZATION WAIT LOOP. WAITS FOR P1 TO TELL IT TO GO
C00082 00037	 INTERRUPT BIT DEFINITIONS, APR CONI BIT DEFINITIONS
C00085 00038	IOINIT -- CHANNEL LINKAGES AND SAVE ROUTINES.
C00087 00039	 MORE PI CHANNEL ROUTINES FOR P1
C00089 00040	 MORE PI CHANNEL ROUTINES FOR P1
C00091 00041	 CHANNEL ROUTINES FOR P2
C00093 00042	 MORE P2 INTERRUPT ROUTINES
C00095 00043	CHANNEL SAVE AND RESTORE CODE.
C00097 00044	DSKSAV:TVSAV:
C00098 00045	 P2 PI CHANNEL AC SAVE AND RESTORE ROUTINES
C00100 00046	 P2 INTERRUPT AC STORAGE AND PD LISTS
C00101 00047	 HERE WE DEFINE THE CHANNEL NUMBERS, CHANNEL TRAP LOCATIONS AND
C00103 ENDMK
C⊗;
TITLE STANFORD A-I PDP-6/10 TIME-SHARING SYSTEM  6.16/M
SUBTTL	OUTER BLOCK CODE AND SYMBOL DEFINITIONS

DEFINE XD(SYMBOL,VALUE),<↓SYMBOL←←VALUE>
DEFINE XP(SYMBOL,VALUE),<SYMBOL←←VALUE>

XD	SW3330,-1
XD	SW2314,0
;LIST OF INDEPENDENT MONITOR COMMAND FEATURES
;THESE FEATURES CAN BE ELIMINATED FROM A SYSTEM BY
;SETTING THE APPROPRIATE FTXXXX SYMBOL BELOW TO 0
;AND REASSEMBLING. SOME OF THE ROUTINES AFFECTED
;BY EACH FEATURE ARE LISTED BELOW.

XD FTTALK,-1

XD FTATTACH,-1

XD FTSWAP,-1	;SWAPPING SYSTEM
		;APPEARS IN APRSER,SCHEDU,SCNSER,DSKSER,SYSINI,STUFF,LOWCOR

XD FTDISK,-1	;DISK SYSTEM
		;APPEARS IN APRSER,SYSINI,ONCE,STUFF,SCHEDU
		;IF FTDISK=-1,THEN FTLOGIN MUST BE -1

XD FTLOGIN,-1	;LOGIN-LOGOUT COMMANDS AND UUOS
		;APPEARS IN APRSER,STUFF,LOWCOR
		;FTDISK IMPLIES FTLOGIN


IFNDEF FTDDT,{XD FTDDT,-1	; SET TO -1 TO INCLUDE DDT}
IFN FTDDT,<XD EDDT,21>		;EXEC MODE SYSTEM DDT

XD FTBAT,-1	;SET TO -1 TO INCLUDE PHANTOM JOB(S) STARTUP

XD FTDSWP,FTDDT	;CHANGE TO 0 TO DISABLE SWAPPING DDT CODE!

IFNDEF IMPSW,<XD IMPSW,-1>	;HAVE IMP UNLESS OTHERWISE SPECIFIED

XD FTHG,-1	;SET TO -1 TO INCLUDE HISTOGRAM COLLECTION ROUTINES

XD FTOIKB,0	;OLD III KEYBOARDS
		;APPEARS IN TTYSER, OUTER(CH5 CODE).
		;SET TO -1 TO INCLUDE SERVICE FOR OLD SCROUNGY KEYBOARDS.

XD FTSTAT,-1	;SET TO -1 TO INCLUDE JAM'S SWAPPING STATISTICS

XD FTDSKPPN,-1	;SET TO -1 TO ENABLE DISK PPN ALIAS'S

XD FTSHF1K,0	;SET TO -1 TO ALLOW SHUFFLING 1K AT A TIME (BAD IDEA)

XD FTDDSTAT,0	;SET TO -1 TO INCLUDE THE DATA DISK STATISTICS FEATURE

XD FTTTYBUG,-1	;SET TO -1 FOR COMCNT BUG TRAPS

XD FTDRD,-1	;SET FOR REDUNDANCY CHECKS/BUG TRAPS. (DEPT REDUNDANCY DEPT.)

XD FTXCTR,0	;SET TO -1 TO SIMULATE XCT 1,

XD FTCORBUG,0	;SET TO -1 FOR CORE TABLE CONSISTIENCY CHECK

XD FTTKBG,0	;SET TO -1 FOR TALK RING BUG TRAPS
; ACCUMULATOR ASSIGNMENTS

XALL
DEFINE XD (SYMBOL,VALUE) <↓SYMBOL←VALUE>

;ACCUMULATOR ASSIGNMENTS

;* MEANS LOADED BY UUO HANDLER ON ALL UUOS

XD IOS,0	;*IO DEVICE STATUS WORD(SEE BELOW FOR BITS)
XD TAC,1	;TEMPORARY(SOMETIMES PRESERVED ACCROSS SUB.)
XD TAC1,2	;TEMPORARY(SOMETIMES PRESERVED ACCROSS SUB.)
XD PDP,3	;*PUSH DOWN POINTER(SEPARATE LIST FOR EACH PI
XD P,PDP
PDP←←PDP	;ONLY PRINT P
		;CHANNEL AND EACH USER JOB
XD ITEM,4	;BUFFER ITEM COUNT, OR JOB NUMBER
XD J,ITEM
ITEM←←ITEM
XD DAT,5	;TTY OUTPUT BUFFER POINTER FOR COMMANDS,ERROR
		;MESSAG		;OR TEMPORARY
XD JBUF,DAT	;ADDRESS OF 3 WORD BUFFER HEADER IN USER AREA
XD DEVDAT,6	;*LH=UUOS DONE SO FAR FOR THIS DEVICE(SEE BELOW)
		;RH=ADDRESS OF DEVICE DATA BLOCK
XD DDB,DEVDAT
DEVDAT←←DEVDAT
XD PROG,7	;*LH=HIGHEST REL. LOC. IN USER AREA
		;RH=ABSOLUTE ADDRESS OF USER AREA
XD JDAT,PROG	;*RH=ADDRESS OF JOB DATA AREA
		;LH=HIGHEST REL. LOC. IN USER AREA
XD JDMPRG,0	;HAS THE VALUE OF JDAT-PROG

XD TEM,10	;TEMPORARY USED ONLY SCNSER IO ROUTINE


XD DSER,11	;*ADDRESS OF DEVICE SERVICE ROUT. DISPATCH TABLE
XD BUFPNT,12
		; CONTENTS OF FIRST WORD OF 3 WORD USER BUFFER HEADER
XD UCHN,BUFPNT	;*USER IO CHANNEL NO.
XD PID,13	; IN DEMOCRACY, THIS IS THE PROCESSOR DATA AREA ADDRESS
XD UUO,14	;*CURRENT UUO IN PROGRESS
		;PROG IN INDEX FIELD FOR RELOCATION
XD AC1,15	;TEMPORARY ACS(MORE TEMPORARY THAN TAC,TAC1)
XD AC2,16
XD AC3,17

;AC FIELD DEFINITIONS FOR XCTR
IFE FTXCTR,<
↓XR←←4
↓XW←←1
↓XRW←←5
↓XLB←←1
↓XDB←←1
↓XEW←←11	;FOR MOVEM @1(UUO)
>
IFN FTXCTR,<
↓XR←←2
↓XW←←4
↓XRW←←6
↓XLB←←10
↓XDB←←12
>
DEFINE XD (SYMBOL,VALUE) <↓SYMBOL←←VALUE>
;MNEMONICS FOR DDB WORDS
; SOME BITS IN TTYTAB, USED EVERY WHERE IN THE WORLD
COMBIT←←400000		;COMMAND WAITING BIT
DLYBIT←←200000		;DELAYED COMMAND BIT
			;"COMMAND" ONLY SERVICES TTY WHEN COMBIT
			;IS SET!

; DEVICE DATA BLOCK DEFINITIONS

	XD STTIBF,30		;SIZE OF SYSTEM TTY INPUT BUFFER
	XD STTOBF,30		;SIZE OF SYSTEM TTY OUTPUT BUFFER
	XD UTTYBF,30		;SIZE OF USER TTY BUFFER
	XD LPP,=24		;NUMBER OF LINES ON A SCOPE
	XD WPL,=17		;NUMBER OF WORDS TO A LINE ON SCOPE
	XD LINLGD,WPL*5-3	;NUMBER OF CHRS ALLOWED
	XD DDBSKW,1		; NUMBER OF WORDS IN FRONT OF DDB CURRENTLY USED

; DEVICE DATA BLOCK NAMES
	XD DEVCMR,-1		; MORE DEVICE CHARACTERISTICS
	XD DEVNAM,0		;NAME IN SIXBIT ASCII
				;C(LH)=DEVICE MNEMONIC
				;C(RH)=DEVICE NUMBER, LEFT JUSTIFIED
	XD DEVCHR,1		;CHARACTERISTIC
				;BITS 0-5=JOB NUMBER(BYTE POINTER=PJOBN)
				;ZERO VALUE IMPLIES NOT ASSIGNED
	XD HUNGCT,100
				; BITS 6-11 = HUNG DEVICE COUNT. SET WHEN
				;DEVICE BECOMES ACTIVE. DECREMENTED EVERY SECOND.
	XD HUNGST,1
				; BITS 12-17 = HUNG DEVICE COUNT
				;SETTING. 0 MEANS DEVICE CAN NEVER BE HUNG.
	XD PUNITS,7
	XD PUNITP,22-PUNITS
				;BITS 18-24=DEVICE NUMBER,BINARY(BYTE POINTER=PUNIT)
				;BITS 25-35=BUFFER SIZE
	XD DEVIOS,2		;STATUS WORD.  SEE BELOW
	XD DEVSER,3
				; C(LH) = NEXT DEVICE DATA BLOCK
				;C(RH)=DEVICE SERVICE DISPATCH TABLE
;    DEVICE SERVICE DISPATCH TABLE ASSIGNMENTS
	XD DGIVDD,-4		;RETURN DDB (SHARABLE)
	XD DGETDD,-3		;MAKE DDB (")
	XD DINI,-2		;DEVICE INITIALIZATION
	XD DHNG,-1		;DEVICE IS HUNG
	XD DRL,0		;RELEASE
	XD DCL,1		;CLOSE
	;IMMEDIATE ADDRESS PART OF CLOSE UUO
		XD CLSOUT,1	;INHIBIT CLOSING OUTPUT
		XD CLSIN,2	;INHIBIT CLOSING INPUT
	XD DOU,2		;OUTPUT
	XD DIN,3
				; INPUT, SHORT DISPATCH TABLE
	XD DEN,4		;ENTER
	XD DLK,5		;LOOKUP
	XD DDO,6		;DUMP MODE OUTPUT
	XD DDI,7		;DUMP MODE INPUT
	XD DSO,10		;SETO
	XD DSI,11		;SETI
	XD DGF,12		;GETF UUO
	XD DRN,13		;RENAME
	XD DCLI,14		;CLOSE INPUT
	XD DCLR,15
				; CALL D,[SIXBIT /UTPCLR/]
	XD DMT,16		;MTAPE
		;END OF LONG DISPATCH TABLE
; DEVICE CHARACTERISTICS WORD DEFINITIONS

	XD DEVMOD,4
				; BITS 6-11 = LEFT HALF OF IMAGE MODE BYTE POINTER
				;BIT 35-J=1 IF MODE J IS LEGAL FOR THIS DEVICE
				;BIT 18 DEVICE ASSIGNED BY CONSOLE COMMAND
				;BIT 19 DEVICE ASSIGNED BY PROGRAM (INIT)

;RIGHT HALF OF DEVICE CHARACTERISTICS WORD(DEVCHR UUO)
	XD ASSCON,400000	;ASSIGNED BY CONSOLE COMMAND ASSIGN
		;NOTE: READ CODE BETWEEN SYS1 & IOGO BEFORE CHANGING ASSCON
	XD ASSPRG,200000
				; ASSIGNED BY PROGRAM (INIT UUO)
;LEFT HALF DEVICE CHARACTERISTICS(DEVCHR UUO)
	XD DVOUT,1		;OUTPUT DEVICE
	XD DVIN,2		;INPUT DEVICE
	XD DVDIR,4		;HAS A DIRECTORY
	XD DVTTY,10		;IS A TTY
	XD DVMTA,20		;IS A MAG TAPE(REWIND)
	XD DVAVAL,40
				; 1 IF DEVICE IS AVAILABLE TO THIS JOB
				;SET BY DEVCHR UUO
	XD DVDTA,100		;IT IS A DECTAPE
	XD DVPTR,200		;IS A PAPER TAPE READER
	XD DVPTP,400		;IS A PAPER TAPE PUNCH
	XD DVLNG,1000
				; INDICATES DEVICE HAS A LONG DISPATCH TABLE
				;(OTHER UUOS BESIDES INPUT,OUTPUT,CLOSE,RELEASE)
	XD DVIMP,2000		;IS AN ARPA INTERGALLACTIC MASSAGE POSTERIOR
	XD DVTV,4000		; IS A TV CAMERA
	XD TTYUSE,10000		;TTY DDB IN USE FLAG
	XD TTYATC,20000		;TTY ATTACHED TO JOB IF 1
	XD DVLPT,40000		;IS A LPT (CARRIAGE CONTROL IN FORTRAN)
	XD DVUDP,100000		; IS A USER DISK PACK
	XD DVDSK,200000		;IS A DISK
	XD DVDIRIN,400000	;DECTAPE DIRECTORY IN CORE IF 1
; DDB ASSIGNMENTS, DEVCHR BITS

	XD DEVLOG,5		;LOGICAL NAME FOR JOB DEVICE
	XD DEVBUF,6
				; C(LH) = RE. ADR. OF 3 WORD OUTPUT BUFFER HEADER
				;C(RH)=REL. ADR. OF 3 WORD INPUT BUFFER HEADER
	XD DEVIAD,7
				; C(LH) = PROG, IN INDEX FIELD
	XD DEVADR,DEVIAD
				;C(RH)=REL. INPUT BUFFER ADD. SERVICE ROUT. IS FILLING
	XD DEVOAD,10
				; C(LH) = PROG, IN INDEX FIELD
	XD DEVPTR,DEVOAD
				;C(RH)=REL. OUTPUT BUFFER ADR. SERVICE ROU. IS EMPTYING
	XD DEVCTR,11
;FOR LONG DISPATCH TABLE DEVICES ONLY:
	XD DEVFIL,11		;FILE NAME IN SIXBIT
	XD DEVEXT,12		;LH=EXTENSION, RH=UNUSED
	XD DEVPPN,13		; PROJ-PROG NUMBER
; LH OF DEVICE CHARACTERISTICS EXTENSION WORD, DEVCMR
	XD DEVIBF,400000	;MEANS DEVICE HAS AN INTERNAL SYSTEM BUFFER
				; AND DOES NOT SET IOACT, BUT SETS DEVSBB
	XD DEVAOA,200000	; MEANS THAT THE DEVICE SERVICE ROUTINE MAY BE
				; CALLED EVEN IF IO IS ACTIVE
	XD DEVSHR,100000	;SHARABLE - MUST GET/RELEASE NEW DDBS

	XD DEVLUP,40000		;REQUIRES LOCAL-USER STATUS TO INIT OR ASSIGN
	XD DEVMAS,20000		;MUST ASSIGN DEVICE FIRST BEFORE DOING INIT
				;ALSO OK IF USER HAS DEV INITED ALREADY
; I/O STATUS WORD ASSIGNMENTS
;DATA MODES: BITS 32-35(BYTE POINTER=PIOMOD)
	XP A,0			;ASCII
	XD AL,1			;ASCII LINE
	XP I,10			;IMAGE
	XD IB,13		;IMAGE BINARY
	XP B,14			;BINARY
	XD SD,15		;SCOPE DUMP MODE
	XD DR,16		;DUMP BY RECORDS
	XP D,17			;DUMP ACROSS RECORDS
; STATUS BITS
;RIGHT HALF (USER)
	XD IOWC,20
				; DON'T COMPUTE WORD COUNT
	XD IOCON,40		;CONTINUOUS (CONT=0)
	XD IONRCK,100
				; READ WITH NO REREAD CHECK FOR MTAPE
				; FOR LPT - NO CHAR. CONVERSION
				; FOR PTP - DON'T COMPUTE PARITY
				; FOR XGP-ESCAPE TO OTHER MODES
;BITS 27,28	DENSITY OF MAG TAPE
;		00=INSTALATION STANDARD
;		01=200 BPI
;		10=556 BPI
;		11=800 BPI
	XD IOPAR,1000
				; MAG TAPE, BCD MODE, WRITE EVEN PARITY
	XD IOTEND,2000		;END OF MAG TAPE
	XD IOBOT,4000		;BEGINNING OF MAG TAPE
	XD IOACT,10000		;DEVICE ACTIVE
	XD IODEND,20000		;DATA END ENCOUNTERED
	XD IOBKTL,40000		;BLOCK TOO LARGE
	XD IODTER,100000	;DATA ERROR
	XD IODERR,200000	;DEVICE ERROR
	XD IOIMPM,400000
				; IMPROPER MODE, DETECTED BY THE
				;INPUT SERVICE ROUTINE
; LEFT HALF (SYSTEM)
	XD IOW,1		;I/O WAIT
	XD IOBEG,2		;VIRGIN DEVICE
	XD IOFST,4
				; NEXT ITEM WILL BE THE FIRST ITEM OF A BUFFER
	XD IO,20		;OUT=1, IN=0
	XD IOEND,40		;SERVICE ROUTINE HAS TRANSMITTED LAST DATA
	XD DEVSBB,1000		; MEANS INTERNAL SYSTEM BUFFER IS BUSY
;REST OF BITS IN LH ARE DEVICE DEPENDENT EXCEPT BIT 14 WHICH
;IS KEPT IN RESERVE.


;LEFT HALF USRJDA (JOB DEVICE ASSIGNMENTS) UUO'S FOR THIS CHANNEL SINCE LAST INIT
	XD INITB,400000
				; INIT - SAVEGET DEPENDS ON THIS BEING THE SIGN BIT
	XD IBUFB,200000
				; INIT WITH INPUT BUFFER HEADER SPECIFIED
	XD OBUFB,100000
				; INIT WITH OUTPUT BUFFER HEADER SPECIFIED
	XD LOOKB,40000		;LOOKUP
	XD ENTRB,20000		;ENTER
	XD INPB,10000		;INPUT
	XD OUTPB,4000		;OUTPUT
	XD ICLOSB,2000		;INPUT CLOSE
	XD OCLOSB,1000		;OUTPUT CLOSE
	XD INBFB,400		;INBUF
	XD OUTBFB,200		;OUTBUF
	XD SYSDEV,100
				; THIS DEVICE IS A SYSTEM TAPE, OR UFD 1,3
				;PROJ.PROG. NO 1,3 ON DSK
				;RELEASE CLEARS THEM ALL

;MTAPE UUO BITS
	XD SLICE,40
				; SET SLICE LEVEL, IF 1, ACCORDING TO 'SLEVEL'
	XP SLEVEL,20
				; VALUE OF SLICE LEVEL, IF SLICE IF 1
; JOB BUFFER AREA HEADER
	XD JBFADR,0
				; BIT 0 = 1 IF THIS BUFFER RING HAS NEVER BEEN
				;REFERENCED FROM THE USER'S PROGRAM BY
				;AN INPUT OR OUTPUT COMMAND.
				;BITS 1-17=UNUSED
				;BITS 18-35=CURRENT BUFFER ADDRESS
	XD JBFPTR,1
				; BYTE POINTER TO NEXT BYTE-1
	XD JBFCTR,2		;POSITIVE ITEM COUNT
; JOB BUFFER HEADER
	XD IOUSE,400000
				; 1 IF BUFFER IF FULL, OR BEING EMPTIED
				;0 IF BUFFER IS EMPTY (OR BEING FILLED)
				;BITS 1-17=BUFFER SIZE
				;BITS 18-35=NEXT BUFFER ADDRESS
;JOB STATUS WORD(JBTSTS IN IOINI1), ONE FOR EACH JOB

	XD RUN,400000		;USER WANTS JOB TO RUN(MUST BE SIGN BIT)

	XD CMWB,200000		;JOB TYPED A COMMAND WHICH NEEDS CORE
				;WHICH IS ON DISK.  SET BY COMMAND DECODER
				;CLEARED WHEN JOB IN CORE AGAIN.

	XD JACCT,100000		;ACCOUNTING PGM RUNNING HERE, LOGIN OR LOGOUT

	XD JNA,40000		;THIS JOB NUMBER IS ASSIGNED, JOB IS INITIALIZED

	XD JERR,20000		;SYSTEM ERROR (PLDOV,ILM...)IN JOB. CAN'T CONTINUE.

	XD JLOG,10000		;JOB SUCCESSFULLY LOGGED IN

	XD SHF,4000		;MONITOR IS WAITING FOR DEVICES FOR THIS
				;JOB TO STOP AFTER CURRENT BUFFERFULL
				;SO JOB CAN BE SHUFFLED IN CORE

	XD SWP,2000		;0 IF JOB IN CORE, 1 IF SWAPPED OUT OR ON WAY

	XD JSEG,1000		; MEANS THAT THIS IS NOT A JOB BUT IS
				; REALLY A HIGH SEGMENT WITH NO JOB DATA AREA

	XD CLKR,400		;THIS JOB HAS A CLOCK REQUEST IN
				;NEEDED SO ONLY ONE REQUEST PER JOB

	XD JWSIZ,5		;SIZE OF WAIT CODE
	XD JWPOS,=14		; RIGHT MOST BIT POSITION OF WAIT CODE
	XD WTMASK,370		; MASK FOR CLEARING WAIT CODES
	;BITS 10-14 USED TO INDICATE JOB IN WAIT FOR A SHARABLE DEVICE
	;0 MEANS JOB NOT WAITING FOR SHARABLE DEVICE
	;SEE SCHEDULER(CLKCSS) FOR DEFINITION OF WAIT CODES

	XD JHLDIN,2		; SET TO KEEP JOB IN CORE (MAY BE SHUFFLED)
				; CLEARED BY CLRSIN WHEN JBTSIN=0 FOR THE
				; "OTHER" SEGMENT.

	XD JWP,1		; IF JSEG IS ON, THEN THIS BIT MEANS THAT
				; THIS UPPER SEGMENT IS WRITE PROTECTED

; RH BITS IN JBTSTS . . .

	XD SAVJDA,400000	; MEANS THAT JOBDATA AREA IS SAVED IN JBTPDL.

	XD WIPEJD,200000	; MEANS 200 RST HAS HAPPENED AND
				;   JOB WAS ON DISK AND COULDN'T GET WIPED
	XD JLOCK,100000		;JOB IS LOCKED IN CORE AFTER A LOCK UUO.
	XD SDEADIN,040000	; CORE DEADLOCK DETECTOR HAS A CLOCK REQUEST IN

	XD SDEAD1,20000		; DEADLOCK CONDITION STILL EXISTS IF SDEADIN STILL ON.

	XD FBINP,010000		; FAST-BAND TRANSFER IN PROGRESS

	XD FBERP,004000		; ERROR ON LAST FAST-BAND TRANSFER

	XD FBJWT,002000		; JOB WAITING FOR LAST TRANSFER

	; BITS 30-35 ARE THE NUMBER OF THE HIGH SEGMENT THIS JOB HAS, ZERO IF NONE

	XD STOPIO,SWP+CMWB+SHF	;FORCE JOB TO STOP FOR SWAP, SHUFFLE OR COMMAND

	XD RUNABLE,RUN+JNA	; BITS NEEDED FOR A JOB TO BE RUNABLE

	XP RUNMSK,JLOG!CLKR!CMWB!JACCT!JHLDIN
				;BITS WHICH DO NOT MATTER FOR RUNABILITY


REPEAT 0,<
;; 2-PROCESSOR INTERLOCKED STATUS BITS (COULD BE FLUSHED)
; LH BITS . . .
	XD RUN2,2		; PROCESS RUNNABLE ON P2
	XD RUN1,1		; PROCESS RUNNABLE ON P1

; RH BITS . . .

	;NONE YET
>
;JBTSIN SWAP IN LIST BITS

	XD INTSNB,400000		;INTERRUPT HANDLER
					;CALL INTRUN AT FININ
	XD BATSNB,200000		;PHANTOM STARTUP
					;CALL BATSW AT FININ
	XD COMSNB,100000		;DELAYED COMMAND
					;CALL COMMAND AT FININ
	XD JRDSNB,40000			;JOB READ
					;CALL JRSRCH AND JRDWIN AT FININ
	XD SPWSNB,20000			;FS OR LOCK FORCED SPACEWAR USER OUT
					;TURN BIT OFF AT FININ

	;BITS 24-29 BACKWARD LINK IN SWAP IN CHAIN
	;BITS 30-35 FORWARD LINK IN SWAP IN CHAIN

;BITS IN JBTSIN WHICH MAY HAVE TURNED ON JHLDIN IN JBTSTS FOR ANOTHER JOB
XD HLDSNB,INTSNB!COMSNB

	;JOBS ENTERED AT END OF LIST, SWAPPED IN FROM FRONT
;JBTST2	TWO PROCESSOR INTERLOCKED SPACEWAR STATUS BITS

;JBTST2 IS USED FOR COMMUNICATING FROM THE SPACEWAR
;SERVICE ROUTINE TO THE REST OF THE SYSTEM.  THE BITS IN
;IT ARE DEFINED AS FOLLOWS:

;LH BITS
	XD	SPWRUN,400000	;THIS JOB HAS A SPACEWAR MODULE ACTIVE.
	XD	SPWGRT,200000	;"I AM THE GREATEST", TO BE DEFINED LATER.
	XD	SPWSUS,100000	;THE MONITOR WANTS THIS JOB TO STOP FOR SOME
				;GOOD REASON (LIKE TO SHUFFLE IT).  GIVE THE
				;SPACEWAR MODULE ONE MORE QUANTUM WITH A WARNING
				;THAT IT WILL BE A WHILE UNTIL IT IS RUN AGAIN
	XD	SPWST1,40000	;THIS JOB HAS BEEN WARNED AND IS STOPPED ON P1
	XD	SPWERB,20000	;SPACEWAR MODULE HAS BEEN TERMINATED BY AN ERROR.
				;BITS 18-35 ARE THE PC AT THE TIME OF THE ERROR.
	XD	SPWSU1,10000	;SUSPENSION WARNING HAS BEEN GIVEN TO JOB ON P1
				;THE ROUTINE WHICH IS ENTERED WHEN A SPW JOB DOES
				;A UUO (TERMINATES) ACTUALLY DOES THE SUSPENSION.
	XD	SPWST2,4000	;SAME AS SPWST1 FOR P2
	XD	SPWSU2,2000	;SAME AS SPWSU1 FOR P2
	XD	SPWNT1,1000	;NO TIMEOUT FOR P1
	XD	SPWNT2,400	;NO TIMEOUT FOR P2

;BITS 10-12 ARE NOT USED AS YET
				;ERROR BITS:  SWPERB SET FOR ANY OF THESE.
	XD	ILLTMO,20	;TIMEOUT FROM SPACEWAR
	XD	ILMSPW,10	;ILL MEM REF FROM SPACE WAR MODE
	XD	NXMSPW,4	;NXM FROM SPACE WAR MODE
	XD	POVSPW,2	;PDLOV FROM SPACE WAR MODE
	XD	CNSSPW,1	;CONS TRAP FROM SPACE WAR MODE
;PRIVILEGE BITS (IN JBTPRV AND JB2PRV)
COMMENT	 $

THE MONITOR  HAS BEEN  CHANGED SO  THAT CERTAIN  FUNCTIONS THAT  WERE
FORMERLY  RESTRICTED TO [1,2]  OR SOME  OTHER PRIVILEGED PPN  ARE NOW
AVAILABLE ON THE BASIS OF PRIVILEGE BITS INSTEAD OF BY PPN.

PRIVILEGE BITS ARE  KEPT FOR EACH JOB  IN JBTPRV.   JBTPRV IS SET  BY
THE LOGIN UUO.  THE LOGIN CUSP WILL DETERMINE WHAT  PRIVILEGES TO SET
FROM DATA THAT IS KEPT WITH THE USER'S PASSWORD.

A  NEW  UUO, SETPRV  HAS BEEN  ADDED  TO ALLOW  A  JOB TO  CHANGE ITS
PRIVILEGES.  SETPRV  WITH AN ARGUMENT OF  -1 WILL RETURN THE  CURRENT
SET  OF PRIVILEGES  IN  THE USER'S  AC;  ANY OTHER  ARGUMENT WILL  BE
INTERPRETED AS  AN ATTEMPT  TO CHANGE  PRIVILEGE BITS.  SUCH  ATTEMPT
WILL BE SUCCESSFUL  IF EITHER PRIPRV IS  ALREADY SET OR JACCT  IS SET
JBTSTS.  THE  RESULTING PRIVILEGE BITS WILL BE RETURNED IN THE AC, AS
AN INDICATION OF SUCESS OR FAILURE.


THE CURRENTLY IMPLEMENTED SET OF PRIVILEGES ARE::

NAME	BIT	FUNCTION
PRI	0	ALLOWS USER TO RESET HIS PRIVILEGES
DAW	1	ALLOWS ACCESS TO MTAPE WRITES ON THE DISK
PRO	2	ALLOWS ACCESS RENAME FILES
REA	3	ALLOWS ACCESS READ FILES
WRT	4	ALLOWS ACCESS WRITE FILES
UDP	5	ALLOWS ACCESS TO UDP'S WITHOUT PASSWORD
UPG	6	ALLOWS UPGSEL TO SELECT OTHER III'S, ALSO DD DIDLING
MES	7	CAN SEND MESSAGES TO BUSY CONSOLES
KIL	8	CAN DO MESSY KILL COMMAND
DEV	9	CAN DETACH DEVICES FROM SYSTEM
SEG	10	ALLOWS SEGMENT ACCESS AND SETPRO
SSL	11	ALLOWS SETTING SYSTEM SL RESERVATION TABLE
ACW	12	ABSOLUTE WRITES IN CORE THROUGH SETPR2
INF	13	ALLOWS ACCESS TO PASSWORD DATA
TLK	14	ALLOWS TALK COMMAND WHILE "BUSY".
FBW	15	ALLOWS ABSOLUTE WRITES ON LIBRASCOPE.
		THIS IS INTENDED ONLY FOR STARTING SYSTEM IN USER MODE.
XGP	16	ALLOWS CALL ['XGPUUO']

MOST USERS WILL NEED NO PRIVILEGES, HOWEVER, REQUESTS FOR
PRIVILEGES WILL BE CONSIDERED.

$


DEFINE PRIVS
<
;	LEFT HALF
XLPRIV PRI,400000		;PRIVILEGE PRIVILEGE
XLPRIV DAW,200000		;DISK ABSOLUTE WRITE 
;  NEXT THREE MUST BE 100000,40000, AND 20000 UNLESS DSKSER IS CHANGED!!!
XLPRIV PRO,100000		;FILE SYSTEM RENAME PRIV
XLPRIV REA,40000		;FILE SYSTEM READ PRIV
XLPRIV WRT,20000		;FILE SYSTEM WRITE PRIV

XLPRIV UDP,10000		;READ LAST BLOCK OF UDP
XLPRIV UPG,4000			;SELECT OTHER DPYS WITH UPGIOT
XLPRIV MES,2000			;CAN DO TTYMES ARBITRARILY
XLPRIV KIL,1000			;CAN USE CONSOLE KILL COMMAND
XLPRIV DEV,400			;CAN USE DET/ATT DEVICE COMMAND
XLPRIV SEG,200			;SEGMENT ACCESS & SETPRO OK
XLPRIV SSL,100			;CAN SET SERVICE LEVEL RESERVATION TABLE
XLPRIV ACW,40			;CAN DO ABS MODE WRITE USING SETPR2
XLPRIV INF,20			;CAN READ AND WRITE SPECIAL FILE INFO
XLPRIV TLK,10			;CAN TALK TO ANY CONSOLE
XLPRIV FBW,4			;ALLOWS ABSOLUTE FBWRITE.
XLPRIV XGP,2			;THIS IS THE XGP FONT COMPILER
XLPRIV LUP,1			;LOCAL USER PRIVILEGE
>

DEFINE XLPRIV $ (NAM,VAL)
<XD	NAM$PRV,VAL>

;DEFINE BITS
PRIVS

;THESE ARE THE RESTRICTED PRIVILEGES FOR ENABLE COMMAND
↓RSPRVS←←<XWD XGPPRV!SSLPRV,0>
;STATISTICS VARIABLES
;LENGTH OF STATISTICS TABLE
XD	STATLEN,600

;OPCODES FOR VARIOUS STATS
XD CSZSTA,000000		;BYTE(1)0(3)0(8)HIGH ORDER BITS OF CORE SIZE(6)J#
XD CPSSTA,040000		;BYTE(1)0(3)1(8)HIGH ORDER BITS OF CORE POSITION(6)J#
XD NAMSTA,400000		;BYTE(1)1(5)0(6)UNUSED(6)J#
				;FOLLOWING TWO 18 BIT BYTES ARE JOBNAME
XD QUESTA,410000		;BYTE(1)1(5)1(6)QUEUE CODE(6)J#
XD SINSTA,420000		;BYTE(1)1(5)2(6)JBTSIN BIT #(6)J#
XD SEGSTA,430000		;BYTE(1)1(5)3(6)SEGMENT #(6)J#
XD SPWSTA,440000		;BYTE(1)1(5)4(6)0-17:TICS OF SPW, 77:SPW OFF(6)J#
XD GLUSTA,450000		;BYTE(1)1(5)5(6)JBTGLU COUNT(6)J#
XD LOKSTA,460000		;BYTE(1)1(5)6(6)1:LOCKING, 0:UNLOCKING(6)J#
XD FITSTA,470000		;BYTE(1)1(5)7(6)UNUSED(6)J#
; SYSTEM MACROS

;MACRO TO PREVENT SCHEDULING, USED AT UUO LEVEL WHEN A
;REENTRANT ROUTINE IS CHANGING COMMON DATA NOT YET
;ASSIGNED TO A PARTICULAR JOB

DEFINE NOSCHED
<>

;MACRO TO ALLOW SCHEDULING ONCE MORE

DEFINE SCHEDULE
<>

;MACRO TO PREVENT CORE SHUFFLING, USED AT UUO LEVEL WHEN
;A ROUTINE SETS UP AN ABSOLUTE USER ADDRESS IN AN AC
;OTHER THAN PDP,PROG, OR JDAT. THE MAIN EXAMPLE IS A BLT
;FROM EXEC TO USER OR USER TO EXEC.

DEFINE NOSHUFF
<>

DEFINE SHUFFL
<>

;MACRO TO START A DEVICE FROM UUO LEVEL
;TAC:=XWD DEVINT FLAGS,CONO ARGUMENTS

DEFINE STARTDV ! (A)
<
	CONO PI,PIOFF
	HLRM TAC,A!CON
	CONO A,(TAC)
	CONO PI,PION
>
;MORE SYSTEM MACROS

DEFINE CAT ! (A,B) <A!B>

OPDEF	CLRBFI	[TTYUUO	11,]
OPDEF	INWAIT	[TTYUUO	14,]

;USER MODE DATA REFERENCE
IFE FTXCTR,<OPDEF XCTR [XCT]>
IFN FTXCTR,<OPDEF XCTR [107000,,]>

DEFINE TYPE (S) <
	PUSHJ P,TTYFUW		; WAIT FOR OUTPUT TO FINISH
	CLRBFI			; CLEAR INPUT BUFFER TYPEAHEAD
	PUSHJ P,INLMES
	ASCIZ /S
/
	PUSHJ P,TYPGO		; START UP TTY
>

DEFINE HGMAC(CODE)	<
	IFN FTHG,	<
		JUMPN	PID,.+3
		PUSH	P,[CODE]
		POP	P,HGCODE	>>

;MACRO TO DEFINE TABLES FOR SECONDARY DISPATCH UUOS

DEFINE UUOMAC(TBL,BASUUO)
{TBL:	UUOS
{	UUOMC2 X
}UUOCNT←←.-TBL
	BASUUO UUOCNT-1,UUOLNK
↑↑UUOLNK←←.
	UUOS
{	<SIXBIT ,X,>
}}

DEFINE UUOMC2(A,B,C){B,,IFDIF<C><><C;>A}

↓UUOLNK←←0
;; MACROS TO SYNCHRONIZE PROCESSORS

	XD PSYNCN,4	; NUMBER OF CONTROL CELLS NEEDED

DEFINE SYNINI (A) <
	SETZM A
	SETZM A+1
	SETZM A+2
	SETZM A+3
>

DEFINE PSYNC1(A) <
	PUSHJ P,PWAIT
	 A
IFIDN <A><><JFCL>
>

DEFINE PSYNC (A) <
	PUSHJ P,PWAIT
	 MOVEI TAC,A
>

DEFINE XSYNC1(A) <
	PUSHJ P,XWAIT
	 A
IFIDN <A><><JFCL>
>

DEFINE XSYNC (A) <
	PUSHJ P,XWAIT
	 MOVEI TAC,A
>
;MACROS TO PUSH AND POP ACS, DISASTER MACROS

↓FIXNUM←←10		;NUMBER OF SECTORS TO READ AT A TIME IN SYSFIX
↓FIXLEN←←FIXNUM*40	;TOTAL NUMBER OF WORDS

DEFINE PUSHACS <
	PUSHJ P,PUSHIT
>
DEFINE POPACS <
	PUSHJ P,POPIT
>

DEFINE DEBCHECK <
	SKIPE DEBMODE
	PUSHJ P,DDTCALL
>
;THIS MACRO IS FOR USE IN CALLING DISERR IN COMCSS
;EXAMPLE:
;	PUSHJ P,DISERR
;	DISARG	STR,[ASCIZ/TAC=/]
;	DISARG	OCT,TAC
;	DISARG	STR,[ASCIZ/
;/]
;	-1
;WOULD TYPE:
;	TAC=000000000030
;
;IF TAC CONTAINED 30
OPDEF OPZERO[0]
DEFINE DISARG $ (A,B)
<	A$QQQ B
>
DEFINE QQQNAM
<	ERRMAC	STR
	ERRMAC	CHR
	ERRMAC	OCT
	ERRMAC	LOC
	ERRMAC	DEC
	ERRMAC	SIX
	ERRMAC	DCP
>
DEFINE ERRMAC $ (I)
<	OPDEF I$QQQ [QQQ⊗=23]
QQQ←←QQQ+1
>
QQQ←←0

	QQQNAM
;PARAMETER ASSIGNMENTS FOR THIS SYSTEM.

XD LJOBN,100	;3330 HAS ENOUGH ROOM FOR ALL 64 POSSIBLE JOBS
XD JOBN,100	; IF NOT SWAPPING ON THE LIBRACROCK, CAN USE ALL JOB NUMBERS
XD NSPMEM,=2000	;2 MICRO-SECONDS PER MEMORY CYCLE.
XD PTRNUM,1	;ONE PAPER TAPE READER.
XD PTPNUM,1	;ONE PAPER TAPE PUNCH.
XD LPTNUM,1	;ONE LINE PRINTER.
XD CDRNUM,0	;NO CARD READER.
XD TVNUM,1	;ONE TV CAMERA
XD ADNUM,1	;AN A/D CONVERTER.

XD DTCNUM,4	;FOUR DEC TAPE DRIVES
XD MTCNUM,2	;EIGHT MAG TAPES.
XD SCNNUM,20	;SIXTEEN TTYS ON THE TTY SCANNER.
XD DPYNUM,6	;NO. DISPLAY CONSOLES.
XD DDNUM,100-6	; NUMBER OF DATA DISK TERMINALS
XD KBDNUM,DPYNUM	;SAME NUMBER OF KEYBOARDS.
XD PTYNUM,24	;NO. OF PSEUDO TELETYPES.
XD DILNUM,1	;NO DIALERS YET
XD ELFNUM,1	;NO. PERIPHERAL PROCESSORS (PDP-11'S) -- BO 6-MAY-74
XD VODNUM,1	;SET TO 1 WHEN VODER SERVICE IS ADDED
XD IOPDLN,2*23	;IO PUSH/POP STACK LENGTH, ENOUGH FOR ALL IO CHANNELS (ONCE)
XD CLKPLN,140	;CLOCK PDL LENGTH
; HERE, WE DEFINE THE LEGAL QUEUES AND QUANTUM TIMES

DEFINE QUEUES
<	X (FUCK)	;THIS BECOMES QUEUE 0, WHICH IS ACTUALLY UNUSED
	X (ST)		;SYSTEM TAPE WAIT
	X (DT)		;DECTAPE CONTROL WAIT (UP TO 8 DRIVES)
	X (DC)		;DATA CONTROL (DC) WAIT - MAGTAPE AND DECTAPE
	X (MT)		;MAGTAPE CONTROL WAIT (UP TO 8 UNITS)
>


;JOB STATUS CODES WHICH HAVE NO CORRESPONDING QUEUES
;JOBS ARE UNRUNABLE WHEN IN THESE STATES

DEFINE CODES
<	X (IOW)		;IO WAIT
	X (DIOW)	; DISK IO WAIT
	X (DW)		; DEVICE WAIT
	X (NUL)		;JOB NUMBER NOT ASSIGNED
	X (STOP)	;STOP (CONTROL C)
	X (INTW)	; INTERRUPT WAIT
	X (SEG)		; UPPER SEGMENT WAIT
>

DEFINE PQUEUES
<	X (RUN)		; GENERALIZED RUN QUEUE
	X (T)		; TELETYPE RUN QUEUE
>

; QUANTUM TIME

	XD QQMQT,10	; MINOR QUANTUM TIME
	XD JIFSEC,=60	; NUMBER OF TICKS IN A SECOND
	XD JLLENGTH,=20	; NUMBER OF PREVIOUS JOB LOAD FACTORS WE WILL KEEP
	XD JLTIME,2*JOBN	;MUST BE THIS BIG AT LEAST!  REG 1-22-74
IFG =60-JOBN,<XD JLTIME,=120>	;RECOMPUTE PRIORITIES EVERY 2.0 SECONDS
;	XD SWAPLIMIT,=90*2000 	;NOW DEFINED IN CORDAT AS A CORE CELL.
;DEVICE NAMES NOT IN THE ASSEMBLER.(IN INCREASING ORDER)
		;AND WHEN YOU FINISH HERE, PUT IT IN DDT TOO
XD APR,0
XD PI,4
XD IOP,10	;I/O PROCESSOR (167)
XD PTP,100
XD PTR,104
XD CTY,120
XD TTY,CTY
XD LPT,124
XD DC,200
XD DCB,204	;DATA CONTROL (136)
XD DTC,210
XD DTS,214
XD MTC,220
XD MTS,224
XD MTM,230
XD ADC,240	; NEW AD CONVERTER (PDP-6)
XD DAC,244	; NEW DA CONVERTER (PDP-6)
XD DCSA,300	; 630 LINE SCANNER
XD DCSB,304
XD DKB,310	;MICROSWITCH KEYBOARD SCANNER
XD VDS,340	;EARNEST VIDEO SWITCH
XD VOD,360	;VODER - AUDIO SYNTHESIZER
XD VMI,364	;VENDING MACHINE INTERFACE - NOT SUPPORTED BY SYSTEM
XD PK,370	;(TELEPHONE) PAGING KLUDGE
XD DIL,374	;AUTO DIALER
XD IMP,400	; ARPA INTERGALLACTIC MASSAGE PROCESSOR
XD TV,404	;TV CAMERA INTERFACE
XD PEN,414	;LIGHT PEN ON DISPLAY
XD ARM,420	;MECHANICAL ARM
XD AD,424	;A/D CONVERTER
XD DPY,430	;DISPLAY CONSOLES
XD KBD,434	;THEIR KEYBOARDS
XD XGP,440	;XEROX GRAPHICS PRINTER
XD DSK,444	;DISK INTERFACE
XD D11,470	;PDP-11 DATA TRANSFER INTERFACE
XD PMP,500	;P. PETIT'S IBM CHANNEL
XD IBM,504	;	"
XD DDD,510	;DATA DISK DISPLAYS
XD PCLK,730	;PETIT'S CALENDAR CLOCK
XD AS,774	;AUDIO SWITCH
;IOP CONO/CONI BITS

;7		35-33 PI CHANNEL
XD	IOPJDN,10	;JOB DONE
XD	IOPNXM,20	;NON-EX-MEM
XD	IOPMIS,40	;DATA MISS

XD	IOPPAR,100000	;PARITY ERROR
XD	IOPRLY,200000	;EARLY RESPONSE (ALSO SETS DATA MISS)

XD	IOPANY,IOPNXM!IOPMIS!IOPPAR!IOPRLY	;ANY ERROR BIT
SUBTTL FIRST 19 JULY 67
;STANDARD MAG TAPE DENSITY(556 BPI),PARITY(ODD-BINARY)
	XD STDENS,2
				; STANDARD MAG TAPE DENSITY
				;STDENS=D+P WHERE D AND P ARE:
				;D=1(200 BPI);D=2(556 BPI);D=3(800 BPI)
				;P=0(ODD-BINARY PARITY);P=4(EVEN-BCD PARITY)
;NO. OF TIMES TO TRY ON DECTAPE ERRORS
	XD DTTRY,4
				; NUMBER OF RETRYS ON DECTAPE ERRORS
;SIZE OF MAGTAPE RECORDS(DATA WORDS IN BUFFER)
	XD MTSIZ,200
				; SIZE FOF MAGTAPE RECORDS
;SIZE OF LPT BUFFER(NO. OF DATA WORDS)
	XD LPTSIZ,=24
				; SIZE OF LPT BUFFERS
; SIZE OF LPT SYSTEM BUFFER
	XD LPTBLN,300
; SIZE OF PTP SYSTEM BUFFER
	XD PTPBLN,320
;MAX. NO. OF CONSECUTIVE DECTAPE BLOCKS BEFORE RESCHEDULING
	XD BLKQNT,=50
				; MAX. NO. OF CONSECUTIVE DECTAPE BLOCKS BEFORE
				;RESCHEDULING IF ANOTHER JOB WAITING
; SPECIAL LOCATIONS IN MEMORY
	XD DDTMEM,37
				; MEMORY SIZE FOR SYSTEM DDT AND SYSMAK
	XD DDTSYM,36
;SYSDSP SYSTEM INITIALIZATION DISPATCH TABLE, STARTING AT LOC 200
;THIS SUBROUTINE MUST BE LOADED FIRST
;ROUTINE "ONCE" IS ONCE ONLY CODE. IT CONVERTS THE DATE
;AND SETS UP IO SERVICE CHAIN,

IFN FTDDT,<
	LOC 74		;CONVINCE SAVE COMMAND TO SAVE ENTIRE CORE IMAGE
	0,,DDT		;AFTER LOADING WITH SYMBOLS

	LOC 162		;POINTERS INTO DDT FOR BOOT HACK
	NOTDDT
	SYMLOC
	INDDT
	DDTSWP
↓BOOTWC:0		;DDT STORES WCMA FOR IOP FOR SWAPPED USER CORE HERE
↓BOOTSE:0		;DDT STORES SECTOR NUMBER FOR ABOVE HERE
>

LOC 200		; THE SYSTEM IS AN ABSOLUTE ASSEMBLY, STARTING AT 200

; 200 - INITIALIZE SYSTEM VARIABLES ONCE ONLY
SYSDSP:	JRST SYSINI

; 201 - GO INTO EXEC DDT
IFN FTDDT,<JRST DDT>
IFE FTDDT,<HALT .>

; 202 - MAKE NEW SYSTEM OUT OF JOB 1
	JRST SYSMAK

; 203 - INITIALIZE SYSTEM VARIABLES ALL OVER AGAIN
	JRST JSR2

; 204 - P2 RESTART ADDRESS
	JRST .	;LOOP HERE UNTIL PDP-10 IS READY. THEN JRST P2START

; 205 - BRING MACHINE UP IN MAINTENANCE MODE
	HALT	.		;NOT ANY MORE!

; 206 - WRITE OUT SYSTEM ON THE DISK
	JRST BEGIN

; 207 - STOP MONITOR, ERROR HALT, WRITES OUT LAST SAT BLOCK AND STOPS
	HALT	.	
; AT LOCATION 210 BEGINS THE LIST OF USEFUL LOCATIONS
;IN THE SYSTEM USED BY SYSTAT.

IFN FTSWAP,<
XWD 0,JBTSTS↔ PRJPRG ↔ JBTSWP ↔ SPWGO ↔ TTIME ↔ UPTIME ↔ CORMAX ↔ DEVLST
>
IFE FTSWAP,<
XWD 0,JBTSTS↔ 0 ↔ 0 ↔ SPWGO ↔ TTIME ↔ UPTIME ↔ 0 ↔ DEVLST
>
; THIS IS AT LOCATION 220
TTYTAB ↔ <BYTE(9)SCNNUM,DPYNUM,DDNUM,PTYNUM> ↔ JOBN-1 ↔ JBTADR ↔ JBTQ ↔ JOBNAM ↔ JOB ↔ CONFIG
;NEXT IS 230
SP2GO ↔ JOBQUE ↔ JBTPRI ↔ JBTJL ↔ NQUES ↔ QNAMS ↔ JBTLIN ↔ LETAB

; NEXT IS LOC 240
JBTJLH
IFN FTSTAT, <	STATS ↔ JBTGSL ↔ STATLEN ↔ STATPTR ↔ STATNUM >
IFE FTSTAT, <	    0 ↔ JBTGSL ↔ 0 ↔ 0 ↔ 0	>
							INTIME ↔ STBEG

; NEXT IS AT 250
JBTKCJ ↔ JBTBTM ↔ LASTRESTART ↔ TTYLOK ↔ MAINTMODE ↔ BIGHOL ↔ LASTDISASTERTIME ↔ SHFWAT
;NEXT IS AT 260
STEND2 ↔ FBBANDLIST ↔ EXPMOD ↔ MEMSIZ ↔ FSRPQ ↔ SYSTOP ↔ CORTAB ↔ NOLOGIN
;NEXT IS AT 270
PTYJOB↔JBTPRV↔XWD UCLLEN⊗9+UCLDLN,UCLTAB↔XWD 0,DSKPPN↔FTIME↔NJOBS↔DSKOPS↔INITIM
;NEXT IS AT 300
XWD -DISPL,COMTAB↔FBACT↔LINTAB↔ASTAB↔JB2PRV↔XWD -LFTLEN,LFTTAB↔XWD -RHTLEN,RHTTAB↔JBTSIN
;NEXT IS AT 310
JBTGLU↔JOBNM1↔DDFCNT
BLOCK 2	;PATCH AREA FOR INTERESTING NEW POINTERS
; HERE LIE THE ROUTINES TO PUSH AND POP ACCUMULATORS

SIXRUN:	JFCL		;TESTED BY 6'S NULL JOB (MUST BE IN LOW CORE)

↑↑PUSHIT:
	PUSH P,0	; SAVE 0
	HLRE 0,P	; PICK UP COUNT
	ADDI 0,20	; ADD IN DISPLACEMENT
	XOR 0,P		; IF SIGNS ARE DIFFERENT, NOT ENOUGH STACK
	JUMPGE 0,PUSHOK
	POP P,0		; CAN'T DO IT, LOSE BIG
	MOVE	TAC,[POINT 7,[ASCIZ ⊗NOT ENOUGH ROOM TO PUSH ACS.
⊗]]
	JSR DDTTYPE
	CONSZ APR,MAOFF
	JRST DDT
	HALT AUTOLOAD

PUSHOK:	POP P,0		; GET BACK 0
	EXCH 0,(P)	;SAVE 0 AND GET RETURN.
	MOVEM 0,20(P)	;GEE, THIS WAY WE RETURN WITH A POPJ
	MOVEI 0,1(P)
	HRLI 0,1
	BLT 0,17(P)
	ADD P,[XWD 20,20]
	POPJ P,		;RETURN TO SENDER

↑↑POPIT:
	MOVSI 0,-17(P)
	HRRI 0,1
	BLT 0,17
	MOVE 0,20(P)
	EXCH 0,(P)
	POPJ P,
;DDTCALL - THIS PRINTS "YOU'RE IN DDT" AND ENTERS DDT.

WDDTCA:	MOVEM	TAC,DDTPAC
	MOVE	TAC,[POINT 7,WMES]		;GET A WIZARD...
	JRST	DDTCL1

DDTCALL:
	MOVEM	TAC,DDTPAC
	MOVE	TAC,[POINT 7,DMES]
DDTCL1:
IFN FTDDT,{
IFN FTDSWP,<	SKIPE	NOTDDT			;ANY DDT?
		JRST	NXDDT			;NO	>;FTDSWP
	JSR	DDTTYPE
	MOVE	TAC,DDTPAC
	CONSZ	APR,MAOFF
	JRST	DDT
	JRST	4,DDT
}

NXDDT:	MOVE TAC,[POINT 7,[ASCIZ/NO DDT
/]]
	JSR	DDTTYPE
	MOVE	TAC,DDTPAC
	POPJ	P,

DDTPAC:	0
	0

WMES:	ASCII /GET A WIZARD OR TYPE "POPJ 3,$X".  /	;PRECISELY A MULTIPLE OF 5 CHARS.
DMES:	ASCIZ /YOU'RE IN DDT π↓π
/
; THIS PART HANDLES AUTOMATIC RELOADS AND RESTARTS
AUTOLOAD:
	CONSZ APR,MAOFF		;ARE WE THE PDP-6
	JRST AUTO10		;PDP-10
	CONO APR,200000
	CONO PI,10400		;RESET PI'S
	JRST SYSDSP+4		;P2 RESTART LOC

AUTO10:	EXCH P,ERRPD
	PUSHACS
	SETOM DISFLAG
	PUSHJ P,DISFLU
	POPACS
	SKIPN DEBMODE
	CONSZ DSK,1B27
	PUSHJ P,DDTCALL
	CONO APR,200000
	CONO PI,10400		; RESET PI SYSTEM
	PUSHJ P,DSKSTP		; WRITE OUT SAT
	CONO APR,200000
	CONO PI,10400		; RESET PI SYSTEM
	SKIPN P2NUM		;ANY SIX AT ALL?
	JRST AUTO1		;NO SKIP THE INTERLOCK
	SETZM AUTOSYNC
	MOVE TAC,[JSR AUTO6]
	MOVEM TAC,46
	MOVEM TAC,56
	MOVEI TAC,200000
	SKIPN AUTOSYNC
	SOJG TAC,.-1
	JUMPN TAC,AUTO1
	SKIPE AUTOSYNC
	JRST AUTO1
	MOVE TAC,SIXPNT		;PLEASE START PDP-6
	JSR DDTTYPE
; WAIT FOR THE PDP-6 TO CATCH UP BEFORE RELOADING

AUTO2:	SETOM CH3
	SETZM CH3		; MAKE SURE PDP-6 GETS PAST INITIALIZE CODE
	SKIPN AUTOSYNC
	JRST AUTO2
AUTO1:
	MOVE TAC,RSTPNT		;AUTO RESTART
	JSR DDTTYPE
	MOVE TAC,UPTIME
	EXCH TAC,LASTRESTART
REPEAT 0,<			;TIRED OF RESTARTS THAT DON'T WORK?
	SUB TAC,UPTIME
	MOVNS TAC
	CAIG TAC,=60*JIFSEC
	JRST AUTO3
	MOVE TAC,MONPTR
	PUSHJ P,CHECK
	CAME TAC1,MONSUM
>
	JRST AUTO3
	SETZM AUTOSYNC	; IF MONITOR IS STILL OK, DO A 200 RESTART
	JRST SYSDSP
AUTO3:	HRLZI 17,AUTOL
	BLT 17,17
	JRST 0

SIXPNT:	POINT 7,.+1
	ASCIZ /
PLEASE START THE PDP-6 AT 204
/

RSTPNT:	POINT 7,.+1
	ASCIZ /
AUTOMATIC RESTART
/

; HERE WE PUT A ROUTINE INTO THE ACS AND JUMP TO IT WHILE SYSTEM IS BEING READ IN

AUTO6:	0
	CONO PI,10400
	CONO APR,200000
	MOVE 1,[MOVE 17,AUTOSYNC]
	MOVE 2,[JUMPN 17,1]
	MOVE 3,[SOJG 0,3]
	MOVE 4,[JRST AUTO4]
	MOVEI 0,100000
	SETOM AUTOSYNC
	JRST 1

AUTO4:	MOVE TAC,[JSR P2CH3]	; RESTORE INTERRUPT LOCATIONS
	MOVEM TAC,46
	MOVE TAC,[JSR P2CH7]
	MOVEM TAC,56
	JRST SYSDSP+4

DEBMODE:
	0

AUTOL:
	PHASE 0
AUTOL3:	CONO DSK,1B23!1B24
	CONO IOP,0
	DATAO IOP,AUTOL1
	JFCL
	JFCL
	DATAO DSK,SYSBAND
	CONSO IOP,IOPANY!IOPJDN	;WAIT FOR SOMETHING TO HAPPEN
	JRST .-1
	CONSZ IOP,IOPANY	;DID SOMETHING BAD HAPPEN
	HALT 0
	SETZM AUTOSYNC
	JRST SYSDSP

AUTOL1:	XWD -=76*2000,0

DEPHASE


; ROUTINE TO TYPE ON THE CONSOLE TELETYPE
; ENTER WITH BYTE PTR TO ASCIZ IN TAC.

...TM2:	0				;TEMPORARY CELL
↑↑DDTTYPE:
	0				;JSR TO HERE.
	MOVEM	TAC1,...TM2		;SAVE TAC1
DDTTY1:	ILDB	TAC1,TAC		;GET BYTE
	JUMPE	TAC1,DDTTY2		;NULL ENDS THE MESSAGE
	CONSZ	CTY,20			;WAIT FOR OUTPUT BUSY TO BE OFF.
	JRST	.-1
	DATAO	CTY,TAC1		;TYPE CHARACTER
	CONSO	CTY,40			;DID THEY TYPE ANYTHING (INPUT DONE)
	JRST	DDTTY1			;NO. - LOOP TO GET NEXT CHARACTER
	DATAI	CTY,TAC1		;YES. READ CHARACTER.
DDTTY3:	CONSZ	CTY,20
	JRST	.-1			;WAIT TO ECHO CHARACTER
	DATAO	CTY,TAC1		;ECHO
	CAIE	TAC1,15			;CR?
	JRST	DDTTY4			;NO. STOP NOW.
	MOVEI	TAC1,12
	JRST	DDTTY3			;YES. GO DO A LF.

DDTTY4:	ILDB	TAC1,TAC		;FLUSH UNTIL NULL BYTE
	JUMPN	TAC1,.-1		;BEACUSE SOME PEOPLE RETURN TO 1(TAC)

DDTTY2:	MOVE	TAC1,...TM2		;RESTORE TAC1
	JRST	@DDTTYPE

; THIS ROUTINE SKIPS AND SETS DISFLAG AND TURNS OFF PI'S IF
;THE SYSTEM SHOULD BE RESTARTED

ALTNOW:	MOVE TAC,UPTIME
	EXCH TAC,LASTDISASTERTIME
	SUB TAC,UPTIME
	MOVNS TAC
	CAILE TAC,=60*JIFSEC
	POPJ P,
	CONO PI,PIOFF
	AOS (P)
	SETOM DISFLAG
	POPJ P,
;OTHER SYSTEM DATA STORAGE
;LOCATIONS SETUP BY ONCE ONLY OPERATOR DIALOGUE

DETFLG:	0			; TELLS SYSINI THAT AD AND DIS ARE TO BE DETACHED FROM THE SYSTEM
CRKTIM:	0			; TIME OF DAY TO BE PASSED ALONG
CRKDAT:	0			; DATE CELL
P1NUM:	0			; PROCESSOR 1 NUMBER
				; HAS BIT 'MAOFF' SET IN LH IF P1 IS IN MA TRAP OFFSET
P2NUM:	0			; PROCESSOR 2 NUMBER AND MAOFF FLAG
PWRCNT:	1B17			; POWER FAILURE COUNT DOWN
P2RCNT:	1B17			; P2 POWER FAILURE COUNT DOWN
XJBPFI:	XWD JOBPFI,0
				;JOBPFI=HIGHEST LOC. IN USER JOB DATA AREA
				;PROTECTED FROM IO
IFN FTLOGIN,<			;DEC 3.16
REFLAG:	0			;DEC 3.16
;IF REFLAG IS NON-ZERO (SET BY REFRESH CODE IN ONCE) THEN THE
;FIRST USER TO TYPE "LOGIN" IS GIVEN IT AS A PROGECT-PROGRAMMER
;NUMBER.
MAINTMODE:	0		; IF MAINTMODE≠0, ONLY GOD MAY LOG IN.
NOLOGIN:	0		; SET ≠ 0 TO PREVENT LOGINS
EXPMOD:		0		;IF ≠ 0 THEN X.TXT[2,2] IS TYPED BY LOGIN
BLTSWP:		0		;IF ≠ 0 THEN BLT CORE IMAGE AFTER SWAPIN
>
SYSSIZ:	SYSMAK			;SIZE OF MONITOR(FIRST LOC NOT USED)
; P2 INITIALIZATION WAIT LOOP. WAITS FOR P1 TO TELL IT TO GO

P2XFR1:	JRST .+1
P2XFR:	AOJA 0,.
	AOJA 0,.
	JRST 4,-1

PICON:	CONO PI,32237		; PI ENABLE CHNS 3, 5, 6, AND 7
				; AND PARITY BOX
P2CON:	CONO PI,32237		; PI ENABLE FOR P2
INIMES:	.+1
ASCIZ /SYSTEM LOADED ON /
SAVITM:	0			; SOMEWHERE IN IOINIT
; INTERRUPT BIT DEFINITIONS, APR CONI BIT DEFINITIONS

	XD	PION,200
	XD	PIOFF,400
	XD	USRMOD,10000
	XD	ADRBRK,040000
	XD	IOTUSR,100000
	XD	MAOFF,40

REPEAT 0,<
;SYSTEM WRITE REFERENCE KLUGE:
;SYS WR REF KLUGE IS ENABLED BY DATAO PTR,[1]. DISABLED BY DATAO PTR,[0]
	XD	SYSCLB,400000		;SYSTEM STOMPED FLAG (CONI)
	XD	CLRCLB,100000		;CLEAR SAME (CONO)
	XD	SWRENB,4000		;SYSTEM WRITE REFERENCE ENABLED (CONI)
>

	XD	SAVDMP,'DMP'

;USER INTERRUPT BIT ASSIGNMENTS - LH FIRST . . .
	XD	INTSWW,400000		; INTERRUPT BEFORE SWAPPING
	XD	INTSWD,200000		; INTERRUPT WHEN SWAP DONE
	XD	INTSHW,100000		; INTERRUPT BEFORE SHUFFLING
	XD	INTSHD,040000		; INTERRUPT WHEN SHUFFLE COMPLETE
	XD	INTTTY,020000		; INTERRUPT ON TELETYPE INPUT
	XD	INTPTI,010000		; INTERRUPT ON PSEUDO-TELETYPE INPUT
	XD	INTMAIL,004000		; INTERRUPT ON MAIL
	XD	INTWAIT,002000		; INTERRUPT ON UUO COMPLETE
	XD	INTPTO,001000		; INTERRUPT ON PSEUDO-TELETYPE OUTPUT
	XD	INTPAR,000400		; PARITY ERROR INTERRUPT
	XD	INTCLK,000200		; CLOCK INTERRUPT
	XD	INTINR,000100		; IMP INTERRUPT BY RECEIVER
	XD	INTINS,000040		; IMP INTERRUPT BY SENDER
	XD	INTIMS,000020		; IMP STATUS CHANGE INTERRUPT
	XD	INTINP,000010		; IMP INPUT WAITING
	XD	INTTTI,000004		; INTERRUPT ON <ESC>I
	XD	INTQXF,2		;INTERRUPT ON Q XFER
	XD	INTHAL,1		; INTERRUPT ON ↑C HALT
; INTERRUPT BIT ASSIGNMENTS - RH
	XD	CNS,400000		; INTERRUPT ON CONS TRAP
	XD	POV,200000		; INTERRUPT ON PDL OV
	XD	ILM,20000		; INTERRUPT ON ILL. MEM. REF.
	XD	NXM,10000		; INTERRUPT ON NON-EX. MEM.
	XD	INTFOV,100		; INTERRUPT ON FOATING OVERFLOW
	XD	INTOV,10		; INTERRUPT ON ARITHMETIC OVERFLOW


DEVLST:
IFN FTDISK,<XWD DSKDDB,0>
IFE FTDISK,<XWD PTRDDB,0>

;THE FOLLOWING ARE USED TO CREATE MXQUE
;THE MAXIMUM QUEUE SIZE
	XD	MXQUE,0

DEFINE	X (A)	<↓MXQUE←←MXQUE+1;>

	QUEUES
	CODES
	PQUEUES

NQUES←←MXQUE	;THIS IS USED TO PUT THIS VALUE INTO WORD 234
;IOINIT -- CHANNEL LINKAGES AND SAVE ROUTINES.
SUBTTL IOINIT	J. SAUTER, 04-AUG-68

;INTERRUPT ROUTINE LINKAGES
;IF THE CHANNEL OF A DEVICE IS CHANGED IN S,
;  THE CODE HEREIN MUST BE CHANGED AS WELL.

;USED IN ONCE

↓CH1:	0
IFN ADNUM,<
	JRST ADINT		;A-D IS THE ONLY THING  ON CH1.
>
	JEN	@CH1

↓CH2:	0
	JEN	@CH2

↓CH3:	0
DPYCON:	CONSZ	DPY,400000	; III PROCESSOR?
	JRST	DPYINT		; YES
	CONSZ	510,20		; DATA DISK?
	JRST	DDINT		; YES
	CONSZ	PI,1B18		; POWER FAILURE?
	JRST	PWROFF		; OH DEAR?
PARCON:	CONSZ	PI,1B20		;PARITY ERROR?
	JRST	PARINT		;YES.

APRCON:	CONSO	APR,400		;THIS IS THE PDP-10 NOT APR INTERRUPT BIT
	JRST	APRINT		;YES.
	JEN	@CH3

↓CH4:	0
IFG DTCNUM,<
DTCCON:	CONSZ	DTS,0		;DEC TAPE CONTROLLER?
	JRST	DTCINT		;YES.>
IFE DTCNUM+MTCNUM,<
	SKIPE	DTCFLAG		; DEC TAPE - MAG TAPE STARTUP INTERRUPT?
	JRST	DTCINT		; YES.>
IFG MTCNUM,<
MTCCON:	CONSZ	MTS,0		;MAG TAPE CONTROLLER?
	JRST	MTCINT		;YES.>
IFN IMPSW,<
	CONSZ	IMP,040000	; ERROR BIT
	JRST	IMPERB		; YES, HE MIGHT BE DEAD
	CONSZ	IMP,030000	; INPUT DONE OR INPUT END?
	JRST	IMPINT
IMPOTS:	CONSZ	IMP,004000	; OUTPUT DONE?
	JRST	IMPOUT		; YES
IMPCTS:
>
	JEN	@CH4
; MORE PI CHANNEL ROUTINES FOR P1

↓CH5:	0
IFN LPTNUM,<
LPTCON:	CONSZ	LPT,0		;LINE PRINTER?
	JRST	LPTINT		;YES.>

IFG SCNNUM,<
	CONSZ	DCSA,1010	;TELETYPE SCANNER?
	JRST	SCNINT		;YES.>

IFG KBDNUM,<
	CONSZ	DKB,10		;MICROSWITCH KEYBOARD?
	JRST	DKBINT		;YES

IFN FTOIKB,<
	CONSZ	KBD,40		;OLD DISPLAY CONSOLE KEYBOARD?
	JRST	KBDINT		;YES	>>

	CONSZ	TTY,50		;CONSOLE TELETYPE?
	JRST	CTYINT		;YES.

	CONSZ	PK,7		;PIA?
	CONSO	PK,10		;INTERRUPT BIT?
	JRST	.+2
	JRST	PKINT		;(TELEPHONE) PAGING KLUDGE (IN TTYSER)

IFN PTRNUM,<
PTRCN1:	CONSZ	PTR,0		;PAPER TAPE READER?
	JRST	PTRINT		;YES.>

IFN CDRNUM,<
CDRCON:	CONSZ	CDR,0		;CARD READER?
	JRST	CDRINT		;YES.>
	JEN	@CH5

;	NOTE:	SCNINT IS PLACED FIRST BECAUSE DISCONNECTED TELETYPES
;		RUN OPEN, FLOODING THE SYSTEM WITH INTERRUPTS.  SINCE
;		THE VASE MAJORITY OF CH5 INTERRUPTS ARE OF THIS NATURE
;		TTYS SHOULD BE THE FIRST TO BE CHECKED.

;	NOTE:	FOR SIMILAR REASONS, DKBINT IS PLACED JUST AFTER SCNINT.
;		ALSO, LPTINT IS NOW FIRST SINCE THE LPT GENERATES INTERRUPTS
;		AT A VERY HIGH RATE WHILE LOADING THE BUFFER.
; MORE PI CHANNEL ROUTINES FOR P1

↓CH6:	0
IFN FTDISK,<
	CONSZ	PMP,20		; 2314 MAYBE?
	CONSO	PMP,4		;IS IT US OR D2CHN?
	CAIA			;NOT US!
	JRST	IXINT		; YES, DO YO' STUFF, BWANA SAHIB!
>
IFN TVNUM,<
TVCON:	CONSZ	IOP,0		;I/O PROC. FOR TV CAMERA?
	JRST	TVINT		;YES.>
IFN FTDISK,<
DIPCON:	CONSZ	IOP,IOPANY!IOPJDN;I/O PROCESSOR FOR DISK?
	JRST IFBINT
	CONSZ	DSK,3370	;DISK INTERFACE?
	JRST DFBINT
>
IFN PTPNUM,<
PTPCN1:	CONSZ	PTP,0		;PAPER TAPE PUNCH?
	JRST	PTPINT		;YES.>
IFN DILNUM,<
	CONSZ	DIL,20
	JRST	DILINT		;DIALER INTERRUPT
>;IFN DILNUM
IFN ELFNUM,<			;BO 6-MAY-74
	CONSZ D11,770000	;ERROR INTERRUPT FROM THE PDP-11?
	JRST ELFINT
>;ELFNUM
IFN VODNUM,<
VODCON:	CONSZ	VOD,VODINB	;VODER INTERRUPTING?
	JRST	VODINT		;YES.
>;VODNUM
	JEN	@CH6

↓CH7:	0
	SKIPLE	CLKFLG		;CLOCK INTERRUPT?
	JRST	CLKINT		;YES.
	SKIPGE CLKFLG
	JRST CLKIN0		;SPECIAL ENTRY FOR USRXIT KLUDGE
	JEN	@CH7
; CHANNEL ROUTINES FOR P2

↓P2CH1:	0
IFN ADNUM,<
ADJMP:	JFCL	ADINT		; SERVE IT! (TURNED INTO JRST WHEN RUNNING)
>
	CONSZ	DAC,2000	; NEW DA CONVERTER INTERRUPTING?
DACJMP:	JRST	DACIST		; YES
	CONSZ	ADC,40		; NEW AD CONVERTER INTERRUPTING?
ADCJMP:	JRST	ADCIST		; YES, GO SERVICE
	JEN	@P2CH1

↓P2CH2:	0
	CONSZ	XGP,XGPDON	;XGP INTERFACE INTERRUPTING?
	JRST	XGPINT		;YES. PROCESS INTERRUPT.
	JEN	@P2CH2

↓P2CH3:	0
	CONSZ	PI,1B18		; POWER FAILURE?
	JRST	P2ROFF		; OH DEAR!!
P2RCON:	CONSZ	PI,1B20		; PARITY ERROR MAYBE?
	JRST	P2RINT		; P2 PARITY ROUTINES
↓AP2CON:
	CONSZ	APR,631200	; APR FLAG BITS FOR P2(CHECKS PC CHNG ENB)
	JRST	AP2INT		; GO TO P2 APR ROUTINES
	JEN	@P2CH3
; MORE P2 INTERRUPT ROUTINES

↓P2CH4:	0
↓P2CH4S:MOVEM	17,CH4SA2+17	;SAVE AC'S FOR XGPSER COMPILER
	MOVE	17,[JEN @P2CH4]
	MOVEM	17,P2CH4E	;SET THE EXIT INSTRUCTION TO NORMAL
	MOVEI	17,CH4SA2
	BLT	17,CH4SA2+16
	MOVSI	17,XGPSAC	;GET OLD AC'S FROM COMPILER
	BLT	17,17
	JRST	@X2DISP
X2DISP:	.+1			;JSR HERE TO CO-ROUTINE COMPILER
	MOVEM	17,XGPSAC+17
	MOVEI	17,XGPSAC
	BLT	17,XGPSAC+16
	MOVSI	17,CH4SA2
	BLT	17,17
↓P2CH4E:JEN	@P2CH4		;CHANNEL 4 EXIT LOCATION.  CLOBBERED BY CH2.

↓P2CH5:	0
IFN PTRNUM,<
PTRCN2:	CONSZ	PTR,0		; PTR ON THIS PROCESSOR?
	JRST	PTRINT		; YES, SERVICE IT
>
	JEN	@P2CH5

↓P2CH6:	0
IFN PTPNUM,<
PTPCN2:	CONSZ	PTP,0		; PTP ON THIS PROCESSOR?
	JRST	PTPINT
>
	JEN	@P2CH6

↓P2CH7:	0
	SKIPLE	CLKFLG+P2PID	; APR CLOCK INTERRUPT
	JRST	CL2INT
	SKIPGE CLKFLG+P2PID
	JRST CL2IN0
	JEN	@P2CH7
;CHANNEL SAVE AND RESTORE CODE.
;  AGAIN, THESE DEPEND ON THE CHANNEL VALUES.


CH1SAV:	0		;JSR HERE
	MOVEM	17,CH1SAC+17
	MOVEI	17,CH1SAC
	BLT	17,CH1SAC+16
	MOVE	P,[IOWD INTPLN,CH1PDL]
	MOVEI	PID,P1PID
	PUSHJ	P,@CH1SAV
CH1RET:	MOVSI	17,CH1SAC
	BLT	17,17
	JEN	@CH1

DTCSAV:MTCSAV:

CH4SAV:	0		;JSR HERE
	MOVEM	17,CH4SAC+17
	MOVEI	17,CH4SAC
	BLT	17,CH4SAC+16
	MOVE	P,[IOWD INTPLN,CH4PDL]
	MOVEI	PID,P1PID
	PUSHJ	P,@CH4SAV
↓CH4RET:
	MOVSI	17,CH4SAC
	BLT	17,17
	JEN	@CH4


KBDSAV:SCNSAV:CDRSAV:LPTSAV:PKSAV:

CH5SAV:	0		;JSR HERE.
	MOVEM	17,CH5SAC+17
	MOVEI	17,CH5SAC
	BLT	17,CH5SAC+16
	MOVE	P,[IOWD INTPLN,CH5PDL]
	MOVEI	PID,P1PID
	PUSHJ	P,@CH5SAV
CH5RET:
	MOVSI	17,CH5SAC
	BLT	17,17
	JEN	@CH5
DSKSAV:TVSAV:
IFN ELFNUM <ELFSAV:ELDSAV:>
IFN VODNUM,<VODSAV:>

CH6SAV:	0		;JSR HERE.
	MOVEM	17,CH6SAC+17
	MOVEI	17,CH6SAC
	BLT	17,CH6SAC+16
	MOVE	PDP,[IOWD INTPLN,CH6PDL]
	MOVE	PID,[P1PID]
	PUSHJ	PDP,@CH6SAV
CH6RET:	MOVSI	17,CH6SAC
	BLT	17,17
	JEN	@CH6

INTPLN←←100	; LENGTH OF I-LEVEL PUSHDOWN LISTS

CH1PDL:	BLOCK	INTPLN
↓CH4PDL:
	BLOCK	INTPLN
CH5PDL:	BLOCK	INTPLN
CH6PDL:	BLOCK	INTPLN

CH1SAC:	BLOCK	20
CH4SAC:	BLOCK	20
CH5SAC:	BLOCK	20
CH6SAC:	BLOCK	20
; P2 PI CHANNEL AC SAVE AND RESTORE ROUTINES

ADCSAV:
DACSAV:
CH1SV2:	0
	MOVEM 17,CH1SA2+17
	MOVEI 17,CH1SA2
	BLT 17,CH1SA2+16
	MOVE PDP,[IOWD INTPLN,CH1PD2]
	MOVE PID,[P2PID]
	PUSHJ PDP,@CH1SV2
	MOVSI 17,CH1SA2
	BLT 17,17
	JEN @P2CH1

XGPSAV:
CH2SV2:	0
	MOVEM	17,CH2SA2+17
	MOVEI	17,CH2SA2
	BLT	17,CH2SA2+16
	MOVE	P,[IOWD INTPLN,CH2PD2]
	MOVE	PID,[P2PID]
	PUSHJ	P,@CH2SV2
	MOVSI	17,CH2SA2
	BLT	17,17
	JEN	@P2CH2

REPEAT 0,<
CH4SV2:	0
	MOVEM 17,CH4SA2+17
	MOVEI 17,CH4SA2
	BLT 17,CH4SA2+16
	MOVE PDP,[IOWD INTPLN,CH4PD2]
	MOVE PID,[P2PID]
	PUSHJ PDP,@CH4SV2
	MOVSI 17,CH4SA2
	BLT 17,17
	JEN @P2CH4
>

CH5SV2:	0
	MOVEM 17,CH5SA2+17
	MOVEI 17,CH5SA2
	BLT 17,CH5SA2+16
	MOVE PDP,[IOWD INTPLN,CH5PD2]
	MOVE PID,[P2PID]
	PUSHJ PDP,@CH5SV2
	MOVSI 17,CH5SA2
	BLT 17,17
	JEN @P2CH5

CH6SV2:	0
	MOVEM 17,CH6SA2+17
	MOVEI 17,CH6SA2
	BLT 17,CH6SA2+16
	MOVE PDP,[IOWD INTPLN,CH6PD2]
	MOVE PID,[P2PID]
	PUSHJ PDP,@CH6SV2
	MOVSI 17,CH6SA2
	BLT 17,17
	JEN @P2CH6
; P2 INTERRUPT AC STORAGE AND PD LISTS

CH1PD2:	BLOCK INTPLN
CH2PD2:	BLOCK INTPLN
;CH4PD2:	BLOCK INTPLN
CH5PD2:	BLOCK INTPLN
CH6PD2:	BLOCK INTPLN

CH1SA2:	BLOCK 20
CH2SA2:	BLOCK 20
CH4SA2:	BLOCK 20
CH5SA2:	BLOCK 20
CH6SA2:	BLOCK 20

; INDIRECT AC SAVE LOCATIONS FOR 2-PROC SYSTEM

PTPSAV:	CH6SAV
PTRSAV:	CH5SAV
ADSAV:	CH1SAV

; THESE ARE BLT'ED UP THERE FOR 2-PROC MODE

ALTSAV:	CH6SV2
	CH5SV2
	CH1SV2
; HERE WE DEFINE THE CHANNEL NUMBERS, CHANNEL TRAP LOCATIONS AND
; THE PI CHANNEL ON AND OFF BITS

DEFINE X ! (A,B) <
↓A!CHN←←B
A!CHL←←CH!B
A!ON←←1B25+1⊗(7-B)
A!OFF←←1B26+1⊗(7-B)
>

X AD,1		;A/D ON CHANNEL 1.
X ADC,1		; NEW ANALOG-DIGITAL CONVERTER
X DAC,1		; NEW DIGITAL-ANALOG CONVERTER
X DCT,1		;DEC TAPE AND MAG TAPE DATA CONTROL CHANNEL.
X D2,2		;HIGH PRIORITY DISK CHANNEL
X XGP,2		;XEROX GRAPHICS PRINTER
X APR,3		;APR ON CHANNEL 3.
X DPY,3		; DISPLAY PROCESSOR ON CHANNEL 3.
X DTC,4		;DEC TAPE CONTROLLER.
X MTC,4		;MAG TAPE CONTROLLER.
X IMP,4		; ARPA IMP
X KBD,5		;KEYBOARDS FOR DISPLAY CONSOLES.
X SCN,5		;TELETYPE SCANNER.
X CTY,5		;CONSOLE TELETYPE.
X PTR,5		;PAPER TAPE READER.
X CDR,5		;CARD READER.
X LPT,5		;LINE PRINTER.
X DSK,6		;DISK INTERFACE.
X DIP,6		;IOP FOR DISK.
X IOP,6
X TV,6		;TV CAMERA.
X PTP,6		;PAPER TAPE PUNCH.
X DIL,6		;PHONE DIALER
X ELF,6		;PDP-11 ERRORS
X ELD,6		;PDP-11 DATA
X VOD,6		;VODER
X CLK,7		;CLOCK FOR SCHEDULING.

CL2CHL←←CAT(P2CH,\CLKCHN)
AP2CHL←←CAT(P2CH,\APRCHN)

↓XGPCHL←←CAT(P2CH,\XGPCHN)
↓XGPC2N←←4	;CHANNEL FOR XGP LINE COMPILER.

↓ADCCHL←←CAT(P2CH,\ADCCHN)	; DON'T FORGET US
↓DACCHL←←CAT(P2CH,\DACCHN)

DEFINE XP(S,V)<↑S←←V>
