COMMENT ⊗   VALID 00010 PAGES
C REC  PAGE   DESCRIPTION
C00001 00001
C00002 00002	BEGIN LPTSER ↔ SUBTTL LINE PRINTER SERVICE ROUTINE
C00005 00003	LPT SERVICE DISPATCH TABLE
C00008 00004	LPT OUTPUT CODE, LPT MAY BE RUNNING NOW
C00012 00005	COME HERE IF LINE PRINTER IS HUNG
C00014 00006	TRANSFER BUFFERLOAD CHARACTER BY CHARACTER - DO CHARACTER CONVERSION REQUESTED
C00019 00007	CHARACTER CONVERSION TABLE
C00021 00008		SUBTTL LPTSER - JAM 25 SEPT 1968 - INTERRUPT LEVEL ROUTINES
C00025 00009	COME HERE WHEN THERE IS NOT A FULL WORD TO BE PRINTED
C00028 00010	THIS PART HANDLES THE ERROR SYSTEM
C00030 ENDMK
C⊗;
BEGIN LPTSER ↔ SUBTTL LINE PRINTER SERVICE ROUTINE
; NEW LINE PRINTER SERVICE ROUTINES - JAM 25 SEPT 68
; NEVER SETS IOACT BIT IN IOS
; DOES CHARACTER CONVERSION EXCEPT WHEN 100 BIT IN RH OF IOS IS ON
; FEATURES INTERNAL BUFFERING
; USERS BUFFERS ARE NOT ENTIRELY EMPTIED UNTIL HE DOES THE 'CLOSE' UUO

; LPT PARAMETER ASSIGNMENTS

; LPT CONTROL REGISTER
	LPTSTR←←100000		;"PRESS START" AFTER IO RESET
	LPTALT←←4000		; LAST CHAR WAS 177 (HARDWARE BIT)
	LPTCLR←←2000		; CLEAR LPT HARDWARE REGISTERS!
	LPTDON←←100		; ENABLE LPT DONE FLAG
	LPTERR←←400		; ENABLE LPT ERROR INTERRUPT
	LPTLOV←←1000		; LINE OVERFLOW, WON'T OCCUR
	LPTCHB←←LPTCHN*11	; PUTS PI CHANNEL NUMBER IN READY
				; INTERRUPT AND ERROR INTERRUPT SPOTS
	LPTCLB←←LPTCHN+200	; CLEAR CHANNEL

; ACCUMULATOR DEFINITIONS . . .
	A←TAC
	B←TAC1
	C←AC1
	D←DAT
	COUNT←AC2
	POINTR←AC3

; RH OF LPT IOS WORD
	LPTNCC←←100		; SET BY USER TO INHIBIT CHARACTER CONVERSION
	HNGTRP←←200		; USER WANTS ERROR RETURN ON HUNG LPT.
	DELBIT←←400		; LAST CHAR. BEFORE CONO-ING LPT OFF WAS 177

; LH OF LPT IOS WORD
	LPTEN1←←200		; NEAR END OF LPT ACTIVITY FLAG
	LPTDNG←←400		; DANGLING 177 FLAG
	LPTERF←←4000		; ERROR BUBBLING UP FROM INTERRUPT LEVEL
	LPTEN2←←20000		;RELEASE BIT.

; STORAGE PARAMETERS
	↑LPTCPL←←=120		; NUMBER OF CHARACTERS PRINTED PER LINE
;LPT SERVICE DISPATCH TABLE

	JRST	LPTINI		;INITILIZE
	JRST	LPTCLT		;HUNG TIMEOUT.  SET ERROR BIT IN IOS FOR LPTOUT.
↑LPTDSP:
	JRST	LPTREL		;RELEASE LPT
	JRST	LPTCLS		;CLOSE
	JRST	LPTOUT		;OUTPUT
	JRST	ILLINP		;INPUT

;INITIALIZE - CALLED FOR 200 RESTARTS
LPTINI:	CONO	LPT,LPTSTR	;SET LPT START FLAG - CLEARED BY IOB RESET
	SETOM	LPTBG1		;SET FLAG DENOTING FIRST LPT OPERATION
LPTI.1:	MOVEI	IOS,0
	CONO	LPT,LPTCLR	;CLEAR HARDWARE REGISTERS.
	HLLZS	LPTCON		;CLEAR PI DISPATCH ADDRESS FOR NOW
	PUSHJ	P,LPTINZ	;INITIALIZE BYTE POINTERS
	SETZM	LPTIBF		;SET TO ZERO OUT INTERNAL BUFFER
	MOVE	TAC,[XWD LPTIBF,LPTIBF+1]
	BLT	TAC,LPTDCN
	POPJ	P,

LPTBI:	POINT	7,LPTIBF	;LPTUBP - UUO LEVEL SYSTEM BUFFER BYTE POINTER
	LPTIBF			; LPTIBP - INTERRUPT LEVEL POINTER
	5*LPTBLN		; LPTCC - TOTAL NUMBER OF FREE CHARACTERS IN SYSTEM BUFFER
	LPTCPL			; LPTLCC - CHARACTER POSITION IN LINE

;CLOSE
LPTCLS:	MOVSI	IOS,IOEND	;SET OUR PRIVATE 'LAST UUO' FLAG
	ORB	IOS,DEVIOS(DDB)	;INCLUDE BIT IN HONEST IOS
	TLNN	IOS,LPTERF	;ARE WE HUNG?
	JRST	OUT		;NO, DO LOTS OF OUTPUTS
	MOVSI	IOS,LPTERF	;YES. TRYING CLEARING HUNG CONDITION
	ANDCAB	IOS,DEVIOS(DDB)	;CLEAR ERROR BIT
	PUSHJ	P,LPTHN		;CALL THE HUNG ROUTINE
	JRST	OUT		;NOW DO SOME OUTPUTS

;INITIALIZE IOS AND BYTE POINTERS, AND ALL THE COUNTS
LPTINZ:	MOVE	TAC,[XWD LPTBI,LPTUBP]
	BLT	TAC,LPTLCC		;BLT IN POINTERS AND COUNTS
	ANDI	IOS,HNGTRP!LPTNCC!17	;CLEAR ALL BUT MODE&SPECIAL BITS
	TLO	IOS,IO			;
	MOVEM	IOS,DEVIOS(DDB)		;AND STORE IOS
	SETZM	LPTDCN
	POPJ	P,

LPTREL:	TLNE	IOS,IOBEG		;HAVE WE DONE ANYTHING YET
	JRST	LPTI.1			;NO
	MOVSI	IOS,LPTEN2!IO		;TELL SEVICE ROUTINE
	PUSHJ	P,LPTO3			;WHO WILL SET THE WHEELS IN MOTION
	PUSHJ	P,WSYNC			;WAIT.
	JRST	LPTI.1			;INITIALIZE FOR NEXT USER.
;LPT OUTPUT CODE, LPT MAY BE RUNNING NOW

;START LPT.  MAKE USER WAIT.
LPTIOW:	MOVSI	IOS,IO+IOW		;SET IOS BITS TO SAY HE IS IN IO WAIT
	PUSHJ	P,LPTO3			;START LPT.
	PUSHJ	P,WSYNC			;DROP HIM INTO IO WAIT - FALL INTO LPTOUT
LPTOUT:	TLZE	IOS,IOBEG		;FIRST UUO?
	PUSHJ	P,LPTINZ		;YES. INITIALIZE LPT TABLES AND IOS
	TRZE	IOS,IODERR		;HAS LPT BEEN HUNG?
	JRST	UNHANG			;YES, UNHANG IT
	CONSO	LPT,LPTERR		;CATCH ERRORS NOW!
	TLZE	IOS,LPTERF		;CHECK FOR INTERRUPT LEVEL ERROR
	JRST	LPTHNG			;HANG USER UNTIL IT IS FIXED

LPTSET:	PUSHJ	P,DEVSTU	;SET COUNT & POINTR TO POINT USER'S BUFFER
	JRST	LPTSE2		;THIS BUFFER HAS ALREADY BEEN EMPTIED!
	CAILE	COUNT,LPTBLN	;COUNT BIGGER THAN SIZE OF SYSTEM BUFFER?
	JRST	BTLERR		;YES, LOSE.
	IMULI	COUNT,5		;CHANGE WORD COUNT INTO CHARACTER COUNT
	MOVE	A,COUNT		;SEE IF WE CAN FIT A BUFFER IN NOW
	IMULI	A,3		;COMPARE FREE SPACE WITH WORST CASE
	CAML	A,LPTCC		;SEE IF THERE IS SPACE
	JRST	LPTSE2		;NO, PERFORM EXIT MAGIC
	PUSHJ	P,LPTBF		;TRANSFER DATA TO THE SYSTEM BUFFER
	PUSHJ	P,ADVBFE	;ADVANCE THE BUFFER DOWN THE RING
	JRST	LPTSE2		;NO MORE BUFFERS, EXIT, STAGE LEFT
	JRST	LPTSET		;SEE IF WE CAN SQUEEZE IN ANOTHER BUFFER

LPTSE2:	MOVE	A,LPTCC			;SEE IF WE HAVE TRANSFERRED ANYTHING
	CAIL	A,5*LPTBLN-4		;BY COMPARING WITH FULL COUNT
	JRST	LPTO1			;SYSTEM BUFFER EMPTY, RETURN TO USER
	TLNE	IOS,IOEND		;IS THIS THE LAST UUO?
	JRST	LPTIOW			;YES. WAIT FOR LPT TO FINISH
	PUSHJ	P,DEVCR			;CHECK RING USE BIT
	JRST	LPTIOW			;BUFFER BUSY, PUT USER IN IO WAIT
	MOVSI	IOS,IO			;OTHERWISE, JUST START UP LPT
LPTO3:	CONO	PI,LPTOFF		;SHUT OFF LPT CHANNEL
	IOR	IOS,DEVIOS(DDB)		;PICK UP OUR OWN IOS
LPTO3A:	MOVEI	A,LPTLOV+LPTERR+LPTDON
	HRRM	A,LPTCON		;SET UP INTERRUPT DISPATCH CONI BITS
	MOVEI	A,0			;ASSUME NOT BIT
	TRZE	IOS,DELBIT		;TRUE?
	TRO	A,LPTALT		;NO, SET BIT
	TLON	IOS,DEVSBB		;START LPT IF NEEDED
	CONO	LPT,LPTCHB+LPTDON(A)	;SET PIA AMD WAIT FOR DONE.
	MOVEM	IOS,DEVIOS(DDB)
	CONO	PI,LPTON		;RESTORE CHANNEL 5
	LDB	C,PDVTIM		;PICK UP HUNG COUNT TIME
	DPB	C,PDVCNT		;DEPOSIT IT, INITIATE  HUNG COUNTING
	POPJ	P,

; COME HERE IF THE SYSTEM BUFFER IS EMPTY

LPTO1:	TLNN	IOS,IOEND		;IS THIS THE LAST UUO?
	POPJ	P,			;NO, EXIT TO USER, STAGE LEFT
	MOVSI	IOS,IOEND		;AND NOW, ZERO THIS BIT FOR GOOD
	ANDCAB	IOS,DEVIOS(DDB)
	TLNE	IOS,IOBEG		;IS THIS REALLY THE BEGINNING?
	POPJ	P,			;YES, EXIT
	MOVSI	IOS,IO+LPTEN1		;PRINT CR-FF AT END.
	JRST	LPTO3			;START LPT AND LEAVE

;COME HERE IF LINE PRINTER IS HUNG

;HERE AT UUO LEVEL - SOMEONE SET LPTERF FLAG.
LPTHNG:	TRNE	IOS,HNGTRP	;IS HE REQUESTING ERROR RETURN ON HUNG LPT
	JRST	LPTHN1		;YES
	PUSHJ	P,LPTHN		;HANG USER
	JRST	LPTOUT		;TRY AGAIN

LPTHN:	PUSHJ	P,HNGSTP			;PRINT "DEVICE LPT OK?" - HANG USER
UNHANG:	MOVE	IOS,[XWD LPTERF!DEVSBB,IODERR]	;SET TO CLEAR ERROR FLAGS
	CONO	PI,LPTOFF		;SHUT OFF LPT
	ANDCAB	IOS,DEVIOS(DDB)
	PUSHJ	P,LPTO3A		;START LPT, CONO CHANNEL BACK ON.
	JRST	LPTOUT			;DO SOME MORE OUTPUTS

LPTHN1:	TRO	IOS,IODERR		;USER WANTS TO HANDLE ERROR.
	IORB	IOS,DEVIOS(DDB)		;GIVE HIM A DEVICE ERROR BIT
	POPJ	P,

;HERE AT CLOCK LEVEL - HUNG TIMEOUT.  DDB AND IOS SETUP
LPTCLT:	MOVSI	IOS,LPTERF		;KILL THE ERROR BIT
	CONO	PI,LPTOFF		;WITH LPT OFF
	IORB	IOS,DEVIOS(DDB)		;SET ERROR BIT FOR UUO-LEVEL TO SEE
	TLZ	IOS,DEVSBB		;SYSTEM BUFFER IS NO LONGER BUSY
	TLZE	IOS,IOW			;ARE WE IN IO WAIT?
	PUSHJ	P,STTIOD		;YES, TAKE US OUT (PUT INTO TQ)
	MOVEM	IOS,DEVIOS(DDB)		;STORE IOS
	CONO	PI,LPTON		;RESTORE PI CHANNEL
	JRST	CPOPJ1			;SKIP, FORCE HNGCHK TO IGNORE US
;TRANSFER BUFFERLOAD CHARACTER BY CHARACTER - DO CHARACTER CONVERSION REQUESTED

LPTBF:	SOJL	COUNT,CPOPJ	;EXIT IF COUNT IS EXHAUSTED.
	ILDB	A,POINTR	;PICK UP BYTE FROM USER
	TRNE	IOS,LPTNCC	;DOES HE WANT CONVERSION?
	JRST	LPTB3		;NO, SKIP IT
	CAIN	A,134		;IS THIS THAT GODDAMN CHARACTER?
	JRST	LPTB2		;YES, CUE UP TWO 177'S
	SKIPA	A,LPTCTB(A)	;PICK UP CORRECT CHARACTER FROM CONVERT TABLE
LPTB3:	HLL	A,LPTCTB(A)	;GET DISPATCH ADDRESS ONLY - NO CONVERSION.
LPTB1:	PUSHJ	P,LPTDPB	;DEPOSIT BYTE IN SYSTEM CORE
	JRST	LPTBF

LPTB2:	MOVEI	A,177		;CUE UP TWO CONSEC. 177'S
	PUSHJ	P,LPTDPB
	MOVEI	A,177		;ROUTINE DOESN'T ALWAYS PRESERVE A
	JRST	LPTB1

;DEPOSIT ONE BYTE IN THE SYSTEM BUFFER - UPDATE ALL THE COUNTS INVOLVED

LPTDPB:	MOVE	IOS,DEVIOS(DDB)		;DO WE HAVE A DANGLING DELETE?
	TLNE	IOS,LPTDNG		;DO WE HAVE A DANGLING DELETE?
	JRST	LPTD2			;YES! THIS CHARACTER IS NOW SPECIAL
	CAIE	A,177			;NO, IS THIS A DELETE?
	JRST	LPTD1			;NO.
	TLO	IOS,LPTDNG		;SET DNG FLAG FOR NEXT CHARACTER
	MOVEM	IOS,DEVIOS(DDB)
	POPJ	P,

LPTD2:	CAIL	A,20		;DEL SEEN. IS NEXT A CONTROL CHARACTER?
	CAILE	A,24		;
	JRST	.+2
	HRLI	A,LPTD5		;DEL 20 THRU DEL 24 ARE VERTICAL SPACING CHARS.
LPTD1:	HLRZ	D,A
	JUMPN	D,LPTD7		;JUMP IF CHAR HAS A DISPATCH ADDRESS.
	SKIPLE	LPTLCC		;NO, HAVE WE OVERFLOWED THE LINE?
	JRST	LPTD7		;NO OVERFLOW YET.
	PUSH	P,A		;OVERFLOW. INSERT CRLF. SAVE CURRENT CHARACTER
	MOVEI	A,15		;MAKE A CRLF
	PUSHJ	P,LPTDB
	MOVEI	A,12
	PUSHJ	P,LPTDB
	MOVEI	A,LPTCPL	;RESET LINE COUNT
	MOVEM	A,LPTLCC
	POP	P,A
LPTD7:	TLNN	IOS,LPTDNG	;NEED WE SEND A 177 FIRST?
	JRST	LPTD7A		;NO
	PUSH	P,A
	MOVEI	A,177
	PUSHJ	P,LPTDB		;SEND 177
	POP	P,A
LPTD7A:	PUSHJ	P,LPTDB		;DEPOSIT CHARACTER AND UPDATE COUNTS
	CAIN	A,11
	JRST	LPTD11		;SPECIAL DISPATCH FOR TAB
	HLRZS	A		;PUT THE DISPATCH ADDRESS IN THE RH
	JUMPN	A,(A)		;STRANGE CHARACTER, DISPATCH TO SEPARATE ROUTINE
LPTD5A:	SOS	LPTLCC		;NORMAL CHARACTER, DECREMENT COUNT
LPTD5:	MOVSI	IOS,LPTDNG	;ZERO OUT THE DANGLING 177 BIT
	ANDCAB	IOS,DEVIOS(DDB)
	POPJ	P,

LPTDV:	TLNN	IOS,LPTDNG	;IS THIS A VERTICAL CHAR?
	JRST	LPTD5		;YES
	JRST	LPTD5A		;JUST ANOTHER CHAR!

LPTD15:	TLNE	IOS,LPTDNG	;IS IT REALLY A CR
	JRST	LPTD5A		;NO, JUST REG CHAR.
	MOVEI	A,LPTCPL	;RESET COUNT TO #CHARS PER LINE
	MOVEM	A,LPTLCC
	JRST	LPTD5		;EXIT, AND ZERO DANGLING 177 BIT

LPTD11:	SOS	D,LPTLCC	;HOW FAR TO NEXT TAB STOP(AT LEAST ONE).
	ANDCMI	D,7		;MAYBE MORE
	TLNN	IOS,LPTDNG	;WHEN PRECEEDED BY 177 IS JUST GAMMA, NOT TAB
	MOVEM	D,LPTLCC	;THIS FAR!
	JRST	LPTD5

;BASIC LEVEL DEPOSIT BYTE AND WRAP AROUND POINTER

LPTDB:	CONO	PI,LPTOFF		;SHUT OFF LINE PRINTER A SEC.
	MOVE	B,LPTUBP		;PICK UP BYTE POINTER
	IBP	B			;INCREMENT IT
	MOVEI	C,(B)			;NOW GET ADDRESS PART
	CAIL	C,LPTIBF+LPTBLN		;CHECK FOR WRAP AROUND
	MOVE	B,[POINT 7,LPTIBF,6]	;RESET BYTE POINTER.
	DPB	A,B			;DEPOSIT THE CHARACTER
	MOVEM	B,LPTUBP		;REPLACE THE BYTE POINTER
	SOSG	LPTCC			;UPDATE CHARACTER COUNT
	JSP	DAT,UERROR		;BLAST THE BASTARD!
	CONO	PI,LPTON		;SPEED UP THE LPT
	POPJ	P,
;CHARACTER CONVERSION TABLE

LPTCTB:	XWD LPTD5,0		; NULL, DOESN'T AFFECT POSITION ON LINE
	1
	2
	3
	4
	5
	6
	7
	10
	11			; HORIZONTAL TAB, SCREWS UP LINE POSITION
	XWD LPTDV,12		; LINE FEED, DOESN'T AFFECT POSITION
	XWD LPTDV,13		; VERTICAL TAB
	XWD LPTDV,14		; FORM FEED
	XWD LPTD15,15		; CARRIAGE RETURN, ZEROS COUNT
	16
	17
	20
	21
	22
	23
	24
	25
	26
	27
	137			; 137←30
	31
	134			; 134←32
	33
	34
	35
	36
	37
	40
	41
	42
	43
	44
	45
	46
	47
	50
	51
	52
	53
	54
	55
	56
	57
	60
	61
	62
	63
	64
	65
	66
	67
	70
	71
	72
	73
	74
	75
	76
	77
	140			; 140←100
	101
	102
	103
	104
	105
	106
	107
	110
	111
	112
	113
	114
	115
	116
	117
	120
	121
	122
	123
	124
	125
	126
	127
	130
	131
	132
	133
	134
	135
	32			; 32←136
	30			; 30←137
	100			; 100←140
	141
	142
	143
	144
	145
	146
	147
	150
	151
	152
	153
	154
	155
	156
	157
	160
	161
	162
	163
	164
	165
	166
	167
	170
	171
	172
	173
	176			; 176←174
	175
	175			; 175←176
	177
	SUBTTL LPTSER - JAM 25 SEPT 1968 - INTERRUPT LEVEL ROUTINES
; THIS PART IS ENTIRELY AUTONOMUS AND DOES NOT TRY TO
; TICKLE THE USER'S CORE, BECAUSE IT ISN'T THERE!

↑LPTINT:
	JSR	LPTSAV		;SAVE ACCUMULATORS AND SET RETURN ADDRESS
	CONSZ	LPT,LPTLOV	;LINE OVERFLOW?
	JRST	LPTLOI		;YES.  FUNNY WE WERE COUNTING..
	MOVEI	DDB,LPTDDB	;SET UP DDB ADDRESS FOR SETIOD AND PDVTIM
	MOVE	IOS,DEVIOS(DDB)	;GET IOS
	CONSZ	LPT,70		;IS THE ERROR CHANNEL DEASSIGNED?
	CONSO	LPT,LPTDON	;OR MAYBE THIS IS REALLY AN ERROR?
	JRST	LPTERI		;GO CHECK IT OUT
	CONSZ	LPT,LPTERR	;IS LPT TURNED OFF?
	JRST	LPTERH		;YES, FORCE HUNG DEVICE MESSAGE

	MOVE	A,LPTCC		;FIRST, IS THERE ANYTHING TO PRINT
	CAIL	A,5*LPTBLN	;COMPARE WITH TOTAL COUNT
	JRST	LPTOF		;NOTHING TO PRINT, SHUT OFF LPT

	SKIPN	LPTBG1		;IS THIS THE FIRST INTERRUPT?
	JRST	LPTIN3		;NO.
	DATAO	LPT,[BYTE (7) 15,177,20]	;YES. HERE WE SEND A TOP OF DOUBLE FORM
	SETZM	LPTBG1				;AVOID THIS NEXT TIME
	JRST	LPTCF1				;GO DISMISS THIS INTERRUPT

LPTIN3:	CAIE	A,4*LPTBLN	;CHECK FOR NEARLY EMPTY
	JRST	LPTIN2		;NOT NEARLY EMPTY, CONTINUE NORMALLY
	TLZE	IOS,IOW		;ARE WE IN AN IO WAIT?
	PUSHJ	P,STTIOD	;YES, GET US OUT!
LPTIN2:	LDB	C,PDVTIM	;PICK UP HUNG COUNT TIME
	DPB	C,PDVCNT	;DEPOSIT IT, INITIATE HUNG COUNTING
	SKIPN	A,LPTDCN	;SEE IF WE TRANSMIT LESS THAN 5 CHARS THIS TIME
	MOVEI	A,5		;WE WILL PRINT 5 CHARACTERS
	SETZM	LPTDCN		;INDICATE 5 CHARACTERS NEXT TIME
	ADD	A,LPTCC		;ADD IN COUNT
	CAILE	A,5*LPTBLN	;COMPARE WITH TOTAL COUNT
	JRST	LPTIN1		;IF TOO LARGE, THERE IS NOT A MULTIPLE OF 5 CHARS
	MOVEM	A,LPTCC		;STORE CHAR. COUNT
	DATAO	LPT,@LPTIBP	;SEND WORD TO LINE PRINTER
	SETZM	@LPTIBP		;ZERO THAT WORD TO AVOID CONFUSION
	AOS	A,LPTIBP	;INCREMENT OUT POINTER
	CAIL	A,LPTIBF+LPTBLN	;CHECK FOR BUFFER OVERFLOW . . .
	MOVEI	A,LPTIBF	;AND RESET POINTER IF SO
	MOVEM	A,LPTIBP	;STORE POINTER FOR NEXT TIME
	POPJ	P,		;SO LONG, BEEN GOOD TO SERVE YOU
;COME HERE WHEN THERE IS NOT A FULL WORD TO BE PRINTED

LPTIN1:	TLNN	IOS,LPTEN1	;IS THIS THE LAST WORD IN BUFFER?
	JRST	LPTOF		;NO, FORGET IT
	DATAO	LPT,@LPTIBP	;SEND PARTIAL WORD
	SETZM	@LPTIBP		;AND ZERO IT FOR POSTERITY
	SUBI	A,5*LPTBLN	;GET NUMBER OF CHARS WE WILL TRANSMITT NEXT TIME
	MOVEM	A,LPTDCN	;PUT IT HERE FOR FUTURE REFERENCE
	MOVEI	A,5*LPTBLN	;RESET COUNT TO MAXIMUM
	MOVEM	A,LPTCC
	POPJ	P,		;NO WORRY ABOUT WRAP-AROUND EITHER

LPTCRF:	CONO	LPT,LPTCHB+LPTDON+LPTALT	;SET ALT FLAG
	DATAO	LPT,[BYTE(7) 20,177,20,177,20]	;3 TOP OF DOUBLE FORMS
	SETZM	LPTBG1
	JRST	LPTCF1		;NO NEED TO ADVANCE FORM AT THE START

LPTCF2:	SETOM	LPTBG1		;MAKE CR-FF ON NEXT OUTPUT.
LPTCF1:	LDB	C,PDVTIM	;PICK UP HUNG COUNT TIME, DEFINED IN LOWCOR
	DPB	C,PDVCNT	;DEPOSIT IT, INITIATE HUNG COUNTING
LPTXIT:	MOVEM	IOS,DEVIOS(DDB)	;STORE IOS IN LPT DDB
	POPJ	P,		;AND EXIT, CHANNEL 5

LPTOF:	TLZE	IOS,LPTEN2	;HAVE WE GIVEN TERMINAL 5 FF'S
	JRST	LPTCRF		;GO DO IT AND RETURN IMMEDIATELY
	TLZE	IOS,LPTEN1	;IS THIS THE END
	JRST	LPTCF2		;YES - ARRANGE TO MAKE FF'S NEXT
	PUSHJ	P,LPTERH	;CLEAR LPT (PRESERVING DELETE BIT]
	TLZE	IOS,IOW		;ARE WE IN AN IO WAIT?
	PUSHJ	P,STTIOD	;YES, CHANGE TO WAIT SATISFIED!
	TLZ	IOS,DEVSBB	;SYSTEM BUFFER IS NO LONGER BUSY
	JRST	LPTXIT		;EXIT

;HERE IF THE LPT IS STOPPED.  CLEAR LPT - WAIT FOR HUNG DEVICE MESSAGE
LPTERH:	HLLZS	LPTCON
	CONSZ	LPT,LPTALT		;IS DELETE FLAG CURRENTLY SET?
	TRO	IOS,DELBIT		;YES, REMEMBER IT!
	CONO	LPT,0			;CLEAR LPT HARDWARE
	JRST	LPTXIT			;STORE IOS AND DISMISS.
;THIS PART HANDLES THE ERROR SYSTEM

LPTERI:	CONSO	LPT,70			;IS THE ERROR CHANNEL ASSIGNED?
	JRST	LPTER1			;NO, GO REASSIGN IT AND CONTINUE
	MOVEI	A,0			;ASSUME NO BIT
	TRZE	IOS,DELBIT		;TRUE?
	TRO	A,LPTALT		;NO, SET BIT
	CONO	LPT,LPTCLB+LPTDON(A)	;YES, DEASSIGN IT
	MOVEM	IOS,LPTDDB+DEVIOS
	MOVEI	A,LPTDON		;SET TO INTERRUPT ONLY WHEN DONE
LPTER2:	HRRM	A,LPTCON		;TELL INTERRUPT SERVICE ABOUT IT
	POPJ	P,

LPTER1:	CONI	LPT,A			;GET CONDITIONS.
	ANDI	A,300			;MASK OUT THE RIGHT ONES
	CONO	LPT,LPTCHB(A)		;RESTORE ALL CONO BITS
	MOVEI	A,LPTDON+LPTERR+LPTLOV
	JRST	LPTER2			;AND PRETEND NOTHING EVER HAPPENED

LPTLOI:	CONI	LPT,A			;GET LPT BITS
	TRZ	A,LPTLOV		;KILL LINE OVERFLOW BIT
	CONO	LPT,(A)			;GIVE THEM BACK
	DATAO	LPT,[BYTE (7) 15,12]
	POPJ	P,

BEND LPTSER
