COMMENT ⊗   VALID 00007 PAGES
C REC  PAGE   DESCRIPTION
C00001 00001
C00002 00002	BEGIN	SYSINI ↔  SUBTTL	SYSTEM INITIALIZATION - 1 SEPT 67
C00007 00003		MOVE	TAC,[XWD DVDIRIN+TTYATC+TTYUSE,ASSCON+ASSPRG]
C00009 00004	INITIALIZE ALL IODEVICES
C00016 00005	 HERE WE SETUP ALL JOB STATUS BITS
C00020 00006		MOVEI	TAC,[ASCIZ /SYSTEM STARTED ON /]
C00022 00007	 P2 INITIALIZE ROUTINE
C00026 ENDMK
C⊗;
BEGIN	SYSINI ↔  SUBTTL	SYSTEM INITIALIZATION - 1 SEPT 67
;INITIALIZE SYSTEM DATA STORAGE
LIBPNT:	POINT 7,.+1
	ASCIZ/
PUT THE LIBRASCOPE ON LINE OR YOU'LL SWAP ON THE 3330!
THEN PUSH CONTINUE.
/

↑SYSINI:JSP	TAC,.+1
	TLNE	TAC,10000	;USER MODE?
	JRST	START		;YES. SOMEONE IS RUNNING THE DMP COPY.
	CONO	APR,200000	;I/O RESET
	CONO	PI,10400	;PI RESET
↑JSR2:	XCT	ONCEI		;DO ONCE-ONLY OPERATORS DIALOGUE
	CONO	APR,200000	;I/O RESET AGAIN (D.R.D)
	CONO	PI,10400	;CLEAR PI'S
	CONSO	DSK,1B27	;LIBRASCOPE ON LINE?
	JRST	ONLINE		;YES!
	MOVE	TAC,LIBPNT	;GET A POINTER TO THE MESSAGE
	JSR	DDTTYPE		;PRINT MESSAGE
	HALT	ONLINE		;AND WAIT FOR GO AHEAD
ONLINE:	SETZM	SYSBEG		;ZERO SYSTEM STORAGE
	MOVE	TAC,[XWD SYSBEG,SYSBEG+1]
	BLT	TAC,SYSEND	;CLEAR IT
	SETZM	STBEG
	MOVE	TAC,[XWD STBEG,STBEG+1]
	BLT	TAC,STEND
	SETZM	UPTIME
	MOVE	P,[IOWD ERRPLN,ERRPDL]

IFN FTDDT,<
	DATAI	APR,TAC		;READ THE CONSOLE SWITCHES
	TLC 	TAC,777		;COMPLEMENT 9 BITS ON THE LEFT
	SKIPN	NOTDDT		; ANY DDT AT ALL?
	TLNE	TAC,-1		;SKIP IF WE HAVE TO TAKE SWITCHES SERIOUSLY
	JRST	INIDDT		;IGNORE SWITCHES OR NO DDT
	TRNN	TAC,10000	;DOES HE WANT NO DDT
	JRST	CKDSWP		;HE WANTS DDT, CHECK ABOUT SWAPPING
	SETOM	NOTDDT		;FLAG TO GET RID OF DDT
	MOVE	TAC1,[HALT AUTOLOAD]	;MAKE A HALT 
	MOVEM	TAC1,DDT	;AND PLANT IT ON TOP OF DDT
	MOVEI	TAC1,DDT+1	;GET THE ADDRESS BEYOND DDT
	MOVEM	TAC1,SYSSIZ	;SAVE AS SYSSIZ
	SETZM	36		;NO SYMBOL TABLE POINTER
	JRST	INIDDT		;CONTINUE
CKDSWP:
IFN FTDSWP,<
	SETOM	DDTSWP		;ASSUME THAT HE WANT'S SWAPPING DDT
	TRNE	TAC,20000	;CHECK FLAGS
	SETZM	DDTSWP		;HE WANTS NO SWAPPING
INIDDT:	SKIPN	NOTDDT		;DOES HE WANT DDT?
	PUSHJ	P,DDTINI	;YES INITIALIZE IT.
;>INIDDT:
>;FTDDT

	DATAI	APR,TAC			;READ THE DATA SWITCHES
	TLC	TAC,777		
	TLNE	TAC,-1			;DO WE HAVE TO TAKE THESE SERIOUSLY?
	JRST	SYSIN2			;NO
	TRNE	TAC,1			;DOES HE WANT DDT NOW?
	PUSHJ	P,DDTCAL		;YES GET IT FOR HIM.
	MOVSI	TAC1,-NMCELS	
SYSIN1:	SKIPGE	MCELTB(TAC1)		;SKIP IF NORMAL SENSE
	TRC	TAC,400000		;INVERSE SENSE. COMPLEMENT THE BIT
	TRNN	TAC,400000		;SKIP IF WE'RE SETTING.
	SETZM	@MCELTB(TAC1)		;¬ SETTING: CLEAR THE CELL
	TRNE	TAC,400000		;SKIP IF ¬ SETTING
	SETOM	@MCELTB(TAC1)		;SET THE CELL
	ROT	TAC,1			;SHIFT TO INSPECT MORE BITS
	AOBJN	TAC1,SYSIN1		;LOOP
SYSIN2:

	MOVE	TAC,SYSSIZ	;PICKUP REAL SYSTEM SIZE
	ADDI	TAC,1777
	ANDCMI	TAC,1777
	MOVEM	TAC,SYSTOP	;AND SAVE IT

	PUSHJ	P,CORINI	; INITIALIZE CORE TABLES
	MOVEI	TAC,[ASCIZ /SYSTEM INITIALIZED ON /]
	SKIPN	INIMES		;JUST LOADED?
	MOVEM	TAC,INIMES	;NO. STORE MESSAGE.
	MOVE	TAC,[XWD DVDIRIN+TTYATC+TTYUSE,ASSCON+ASSPRG]
	HLRZ	DEVDAT,DEVLST	;SCAN ALL DEVICES
SYS1:	ANDCAM	TAC,DEVMOD(DEVDAT)	;CLEAR DEVICE BITS
				;DIRECTORY IN CORE, ASSIGNED BY CONSOLE, PROGRAM
	SETZM	DEVLOG(DEVDAT)	;CLEAR LOGICAL NAME
	HLRZ	DEVDAT,DEVSER(DEVDAT)	;LINK ONWARDS
	JUMPN	DEVDAT,SYS1
	MOVEI	TAC,IOGO		;GET ADDRESS FOR 200 RESTART
	HRRM	TAC,SYSDSP		;STUFF IT IN SYSDSP (200)

	MOVEI	TAC,P2INI		; CRANK UP P2. IT IS WAITING FOR US
	HRRM	TAC,P2XFR		; ALLOW P2 TO CONTINUE

; HERE WE MUST DETACH AD AND XGP FROM THE SYSTEM IF THE PDP-6
; IS NOT ON LINE. THE ONCE ONLY CODE SETS THE FLAG 'DETFLG'

	SKIPN	DETFLG		; DO WE HAVE TO DETACH?
	JRST	IOGO		; NO, PROCEED WITH SYSINI
	MOVEI	TAC,ASSCON	; YES, GET THE 'ASSIGN' BIT
	IORM 	TAC,ADDDB+DEVMOD	; OR INTO DEVICE DATA BLOCK


	MOVEI	DEVDAT,ADDDB	; GET ADDRESS OF DDB FOR PJOBN'S SAKE
	DPB	TAC,PJOBN	; MAKE SURE THEY ARE ASSIGNED TO JOB 0

	IORM	TAC,XGPDDB+DEVMOD
	MOVEI	DDB,XGPDDB
	DPB	TAC,PJOBN

	IORM	TAC,ADCDDB+DEVMOD
	MOVEI	DDB,ADCDDB
	DPB	TAC,PJOBN

	IORM	TAC,DACDDB+DEVMOD
	MOVEI	DDB,DACDDB
	DPB	TAC,PJOBN
;INITIALIZE ALL IODEVICES
IOGO:	CONO	APR,733550+APRCHN	;APR RESET (IO RESET)
	CONO	PI,11577		;CLEAR PI SYSTEM
	MOVE	P,[IOWD ERRPLN,ERRPDL]
	PUSHJ	P,FMCHK			;ARE WE USING FAST MEMORY?
	JRST	IOGO			;NO. LET'S TRY THAT ALL AGAIN
IOGO1:	MOVE	AC1,TIME+P1PID		;GET THE CURRENT TIME
	MOVE	AC2,THSDAT+P1PID	;AND THE DATE
	MOVE	TAC,[XWD P1DATA,P1DATA+1]
	SETZM	P1DATA			;ZERO DATA AREA FOR P1
	BLT 	TAC,P1DATA+PDATALEN-1	;
	SETZM	RTIME			
	SETZM	TTIME			;CLEAR NULL TIME TOO.
	SETZM 	LASTDISASTER		;AND LAST DISASTER TIME
	MOVEM	AC1,TIME+P1PID		;RESTORE THE TIME
	MOVEM	AC1,TIME+P2PID		;SAVE FOR BOTH PROCESSORS
	MOVEM	AC2,THSDAT+P1PID	;SAVE THE DATE TOO
	MOVEM	AC2,THSDAT+P2PID	;
	IDIVI	AC1,JIFSEC		;CONVERT TIME TO SECONDS
	HRL	AC1,THSDAT		;PUT DATE IN LEFT HALF OF AC1
	MOVEM	AC1,TIMDAT		;AND SAVE <DATE>,,<TIME IN SECS>
	SKIPE	INIMES			;SKIP IF THIS IS A RESTART
	MOVEM	AC1,INITIM		;SAVE TIME OF (RELOAD OR 203 RESTART).
IFN FTBAT,<
	MOVEI	TAC,=10*JIFSEC		;WAIT 10 SECONDS 
	MOVEM	TAC,BATYET		;BEFORE STARTING THE PHANTOM JOBS
	SETZM	ALFRED			;ZERO WAKEUP TIME FOR ALL PHANTOMS
	MOVE	TAC,[XWD ALFRED,ALFRED+1]
	BLT	TAC,ALFRED+BATLEN-1
>

	MOVE	TAC,[JRST UUO1]		; SET UP PROCESSOR DATA STORAGE
	MOVEM	TAC,UUO0+1
	MOVE	TAC,[JRST UUO3]
	MOVEM	TAC,UUO2+1
	MOVEI	TAC,40
	MOVE	TAC1,P1NUM
	TLNE	TAC1,MAOFF	
	MOVEI	TAC,140
	MOVEM	TAC,UUOLOC+P1PID
	MOVE	TAC,[POINT 36,CIPWT-1,35]
	MOVEM	TAC,CLOCK
	MOVEI	TAC,CAT(CH,\APRCHN)
	MOVEM	TAC,APRCH+P1PID
	MOVEI	TAC,CAT(CH,\CLKCHN)
	MOVEM	TAC,CLKCH+P1PID
	MOVE	TAC,[P2PID]
	MOVEM	TAC,OTHERID+P1PID
	MOVEI	TAC,APRCON
	MOVEM 	TAC,APRCN+P1PID
	MOVEI	TAC,CLKSAVE
	MOVEM	TAC,CLKSV+P1PID
	MOVEI	TAC,CLKESAVE
	MOVEM	TAC,CLKESV+P1PID
	MOVE	TAC,[JEN @UUO0]
	MOVEM	TAC,UUOXIT
	MOVEM	TAC,UUOXI
	MOVE	PID,[P1PID]
	MOVEM	PID,APRID+P1PID
	MOVE	P,[IOWD ERRPLN,ERRPDL]
	MOVEM	P,ERRPD(PID)
	MOVE	TAC,[IOWD APRPLN,APRPD]
	MOVEM	TAC,APRPDL(PID)
	SETOM	JBTMSK
	MOVE	TAC,[JBTMSK,,JBTMSK+1]
	BLT	TAC,JBTMSK+JOBN-1
	SETOM	JBTWKM
	MOVE	TAC,[XWD JBTWKM,JBTWKM+1]
	BLT	TAC,JBTWKM+JOBN-1

	PUSHJ	P,NXTINI	;ALWAYS INITILIZE SCHEDULER FIST
				;SO DEVICES MAY RESET QUEUES IF DESIRED
	PUSHJ	P,SPWINI	;INITIALIZE SPACEWAR SERVICE
	PUSHJ	P,QINI		; INITIALIZE QUEUE STRUCTURE
	PUSHJ	P,FSINIT	; AND FREE STORAGE SYSTEM
	PUSHJ	P,DISINIT	; INITIALIZE DISASTER TYPEOUT SYSTEM.

;HERE WE INITIALIZE ALL THE DEVICES IN THE DEVICE LIST
;NOTE THAT FREE STORAGE MUST BE SET UP
;ALSO NOTE THAT EACH DEVICE MUST CORRECTLY LINK TO
;THE NEXT BEFORE RETURNING

	HLRZ	DDB,DEVLST	;GO UP THE DEVICE LIST, DOING GOOD THINGS
	SETZM	SAVITM		;DSP OF LAST DEVICE
IOG0:	HRRZ	TAC,DEVSER(DDB)	;GET THE DEVICE SERVICE DISPATCH
	CAMN	TAC,SAVITM	;SAME AS LAST MEANS INITIALIZED ALREADY.
	JRST	IOG01		;YES
	MOVEM	TAC,SAVITM	;SAVE THE DEVICE DISPATCH
	PUSH	P,DDB
	PUSHJ	P,DINI(TAC)	;INITIALIZE THE DEVICE
	POP	P,DDB
IOG01:	MOVEI	TAC,ASSPRG
	ANDCAB	TAC,DEVMOD(DDB)	;TURN OF ASSIGNED BY PROG BIT
	HRLOI	TAC1,77		;MAKE MASK FOR MODE BITS AND HUNG COUNT
	TDNE	TAC,[TTYATC,,ASSCON]	;IF ASSIGNED BY CONSOLE THEN OR ATTACHED
	TLO	TAC1,770000	;SAVE JOB NUMBER ALSO
	ANDM	TAC1,DEVCHR(DDB);GLONK!
	TLNN	TAC,DVTTY!DVLPT	;THESE GUYS ARE RIGHT(?)
	SETZM	DEVIOS(DDB)
	SETZM	DEVBUF(DDB)
	HLRZ	DDB,DEVSER(DDB)	;LINK ON MACDUFF
	JUMPN	DDB,IOG0
	MOVE	TAC,[RSTBEG,,RSTBEG+1]
	BLT	TAC,RSTEND-1
; HERE WE SETUP ALL JOB STATUS BITS
; STOP ALL LOGGED IN JOBS
; AND FLUSH ALL UN-LOGGED-IN JOBS

	MOVEI	J,JOBN-1
	SETZM	JOB
IOG2:
REPEAT 0,<
	MOVSI	TAC1,RUN1			;GET HIM RUN SOMEWHERE
	MOVEM	TAC1,JB2STS(J)
>
	MOVE	TAC1,[XWD JNA!JLOG!SWP!JSEG!JWP,77]	;KEEP THESE
	AND	TAC1,JBTSTS(J)
	TLO	TAC1,JERR			;DON'T LET HIM CONTINUE
	MOVEM	TAC1,JBTSTS(J)
	TLNN	TAC1,JNA			;JOB HERE AT ALL?
	JRST	IOG4				;NO, LOOP AROUND FOR NEXT
	TLNN	TAC1,JLOG			;JOB LOGGED IN?
	JRST	IOGKIL				;NO, FLUSH HIM
	TLNE	TAC1,JSEG			;SEGMENT?
	JRST	IOG6				;YES. ONLY REQUE TO STOPQ

	PUSHJ	P,PRIBUF			;SETUP JOB PRIORITY TABLE
	PUSHJ	P,MAKPDL			;MAKE A PDL FOR THIS JOB.
	MOVEI	AC1,0				;NO FREE STORAGE AVAIALABLE.
	MOVEM	AC1,JBTPDL(J)			;SAVE PDL FOR USER.
	TLNN	TAC1,SWP			;SWAPPED IN?
	JRST	IOG5				;YES FLUSH DATA AREA
	LDB	TAC,IMGIN			;IS THERE ANY CORE?
	JUMPE	TAC,IOG4			;JUMP IF NO CORE: LEAVE IN NULQ
	TRO	TAC1,WIPEJD			;MAKE SURE JOB DATA AREA GETS WIPED
	MOVEM	TAC1,JBTSTS(J)			;NEXT TIME THIS IS SWAPPED IN.
	JRST	IOG6				;NO, JUST STOPQ

IOGKIL:	TRNE	TAC1,77				;RH WAS ANDED WITH 77
	SOS	NJOBS(TAC1)			;NO LONGER USING SEGMENT
	PUSHJ	P,IOGZ				;FLUSH HIS CORE IMAGE
	PUSHJ	P,KSTOP				;REMOVE THE CRETIN
	JRST	IOG4

IOGZ:	PUSHJ	P,FBFLUSH			;RELEASE SWAP SPACE
	SETZB	TAC,JBTSWP(J)			;KILLING A PHANTOM.
	SETZM	JB2SWP(J)
	SKIPN	PROG,JBTADR(J)
	POPJ	P,
	SOS	(P)
	JRST	CORE1				;RELEASE CORE

IOG5:	SKIPN	JDAT,JBTDAT(J)			;JOB DATA AREA?
	JRST	IOG4				;NO, LEAVE IN NULQ
	PUSH	P,JOBDDT(JDAT)
	PUSHJ	P,CLRJB1
	POP	P,JOBDDT(JDAT)
IOG6:	MOVNI	TAC,STOPQ			;TO STOPQ
	MOVEM	TAC,JOBQUE(J)
	PUSHJ	P,REQUE
IOG4:	SOJG	J,IOG2

	MOVEI	 J,JOBN-1			;FLUSH UNUSED SEGMENTS ON NEXT PASS
IOGS1:	MOVE	TAC,JBTSTS(J)
	TLNE	TAC,JSEG
	SKIPE	NJOBS(J)			;ANYONE USING THIS SEGMENT?
	JRST	IOGS2
	SETZM	JBTSTS(J)			;NO USERS: BLAST THIS SEGMENT
	SETZM	JOBNAM(J)
	SETZM	PRJPRG(J)
	PUSHJ	P,IOGZ
	MOVNI	TAC,NULQ			;QUEUE TO NULL Q
	MOVEM	TAC,JOBQUE(J)
	PUSHJ	P,REQUE
IOGS2:	SOJG	J,IOGS1				;LOOP
	SETZM	JOB				;AGAIN?
;FORM INITIAL CHECKSUM.
	
	MOVE	TAC,[XWD CHKBEG-CHKEND,CHKBEG]	;AOBJN POINTER
	MOVEM	 TAC,MONPTR
	PUSHJ	 P,CHECK
	MOVEM	 TAC1,MONSUM
IFN FTSTAT, <
	MOVE	TAC,[POINT 18,STATS]
	MOVEM	TAC,STATPTR	; INITIALIZE STATISTICS POINTER
>
	XCT	PICON		;PION, CH 3,5,6,7, AND PARITY ERROR ENABLE
REPEAT 0,<	DATAO	PTR,[1]		;ENABLE SYSTEM WR DETECTOR >
	MOVEI	TAC,[ASCIZ /SYSTEM STARTED ON /]
	SKIPN	INIMES		;LOAD OR INITIALIZE?
	MOVEM	TAC,INIMES	;NO, IT MUST BE A START
	MOVSI	J,-TCONLN-1	;NO. OF TTY LINES(REAL ONES).
IOG3:	SKIPN	DEVDAT,TTYTAB(J) ;GET DDB FOR NEXT TTY.
	JRST	IOG3A		;OOPS, NO DDB.
	PUSHJ	P,CRLF		;TYPE A CRLF
	MOVE	TAC1,DEVNAM(DEVDAT)
	PUSHJ	P,PRNAME	;PRINT NAME OF CONSOLE
	MOVEI	TEM,11
	XCT	TYO		;TAB
	MOVEI	TAC,[ASCIZ/ (DOWN) /]
	SKIPN	MAINTMODE
	SKIPE	TTYLOK
	PUSHJ	P,CONMES	;TELL THEM THAT WE'RE DOWN
	MOVE	TAC,INIMES	;GET THE ADDRESS OF MESSAGE
	PUSHJ	P,CONMES	;SEND IT
	PUSHJ	P,DAYT2		;TIME OF DAY
	PUSHJ	P,PRCNTC
	PUSHJ	P,TTYSTR	;START THE TTY TYPING
IOG3A:	AOBJN	J,IOG3		;SEND MESSAGE TO ALL TTY'S.

IFN FTDDT,<
	PUSHJ	P,DISMES	;INCASE LOWCOR GETS CLOBBERED.
	ASCIZ	/DDT STARTS AT /
	HRRZ	TAC,SYSDSP+1
	PUSHJ	P,DISLOC
	PUSHJ	P,DISCRLF
>
;	MOVE	TAC,THSDAT	;APRIL 1 HACK.
;	IDIVI	TAC,=12*=31	;DIVIDE TO GET YEARS IN TAC, DAY OF YEAR IN TAC1
;	CAIN	TAC1,=31*3	;APRIL 1?
;	SETOM	AFOOL		;YES.
	

	SETZM	INIMES		;CLEAR FOR NEXT TIME
	SETZB	J,JOB		;INDICATE JOB ZERO
	MOVE	PID,[P1PID]	;INDICATE P1
	JRST	NULJOB		;START THE NULL JOB.
; P2 INITIALIZE ROUTINE

↑P2INI:	MOVE	TAC,[XWD P2DATA,P2DATA+1]
	CONO	PI,10400	; CLEAR PI SYSTEM
	SETZB	J,P2DATA
	BLT	TAC,P2DATA+PDATALEN-1
	CONO	APR,733550+APRCHN	; CLEAR EVERYTHING, ENABLE EVERYTHING
	MOVE	P,[IOWD ERRPLN,ERRPDL+P2PID]
	MOVE	TAC,[JRST P2UUO1]
	MOVEM	TAC,UUO0+P2PID+1
	MOVE	TAC,[JRST P2UUO3]
	MOVEM	TAC,UUO2+P2PID+1
	MOVEI	TAC,40
	MOVE	TAC1,P2NUM
	TLNE	TAC1,MAOFF
	MOVEI	TAC,140
	MOVEM	TAC,UUOLOC+P2PID
	MOVE	TAC,[POINT 36,CIPWT+P2PID-1,35]
	MOVEM	TAC,CLOCK+P2PID
	MOVEI	TAC,CAT(P2CH,\APRCHN)
	MOVEM	TAC,APRCH+P2PID
	MOVEI	TAC,CAT(P2CH,\CLKCHN)
	MOVEM	TAC,CLKCH+P2PID
	MOVE	TAC,[P1PID]
	MOVEM	TAC,OTHERID+P2PID
	MOVEI	TAC,AP2CON
	MOVEM	TAC,APRCN+P2PID
	MOVEI	TAC,CL2SAVE
	MOVEM	TAC,CLKSV+P2PID
	MOVEI	TAC,CL2ESAVE
	MOVEM	TAC,CLKESV+P2PID
	MOVE	TAC,[JEN @UUO0+P2PID]
	MOVEM	TAC,UUOXIT+P2PID
	MOVEM	TAC,UUOXI+P2PID
	SETZM	JOB+P2PID
	SETZM	JOBADR+P2PID
	SETZM	USRREL+P2PID
	MOVE	PID,[P2PID]
	MOVEM	PID,APRID(PID)
	MOVE	TAC,[IOWD ERRPLN,ERRPDL+P2PID]
	MOVEM	TAC,ERRPD(PID)
	MOVE	TAC,[IOWD APRPLN,APRPD+P2PID]
	MOVEM	TAC,APRPDL(PID)
	MOVE	TAC,CH3
	CAMN	TAC,CH3			; WAIT FOR P1 TO START TAKING CLOCK BREAKS
	JRST	.-1
	XCT	P2CON			; ENABLE PI, PARITY, ETC.

	PUSHJ	P,XGPIN2		;INITIALIZE XGP FROM P2
	PUSHJ	P,PTRREL		;INITIALIZE PTR FROM P2

	PUSHJ	P,DISMES
	ASCIZ/↓
PDP-6 STARTED /
	PUSHJ	P,DISDATE


	JRST	NULJOB

; POWER DOWN ROUTINES

↑PWROFF:
	CONO	PI,PIOFF		; NO MORE INTERRUPTS NOW
	EXCH	17,PWRCNT		; AND COUNT DOWN
	SOJG	17,.			;LOOP
	MOVEI	17,-1			; COUNT DONE, NO POWER DOWN AFTER ALL
	EXCH	17,PWRCNT		;RESTORE 17
	AOS	P1OFF			;COUNT FAILURES
	CONO	PI,PION			;ENABLE INTERRUPTS
	JEN	@CH3	

↑P2ROFF:
	CONO	PI,PIOFF
	EXCH	17,P2RCNT
	SOJG	17,.
	MOVEI	17,-1
	EXCH	17,P2RCNT
	AOS	P2OFF			;COUNT FAILURES ON SIX ALSO
	CONO	PI,PION
	JEN	@P2CH3

MCELTB:	TTYLOK
	MAINTM
	DDOFF
	DEBMOD
	XWD	400000,DDTSWP		;COMPLEMENT SENSE OF SWITCH
	0				;R. HELLIWELL MEMORIAL CELL
	EXPMOD				;SET TO MAKE LOGIN TYPE X.TXT[2,2]
	NOLOGIN				;SET TO PREVENT LOGIN
IFN IMPSW,<IMPDIE;>0			;NO IMP TODAY
IFN IMPSW,<IMPPMS;>0			;SET TO ALLOW IMP TO COMPLAIN ON CTY
	BLTSWP				;SET FOR BLT AFTER SWAPIN.
	IEARLY				;PRINTOUT EACH IOP EARLY RESPONSE
NMCELS←←.-MCELTB
	BEND	SYSINI
